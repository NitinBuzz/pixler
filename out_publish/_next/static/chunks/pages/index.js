_N_E =
(window["webpackJsonp_N_E"] = window["webpackJsonp_N_E"] || []).push([["pages/index"],{

/***/ "./components/Form.js":
/*!****************************!*\
  !*** ./components/Form.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _overmind__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../overmind */ \"./overmind/index.js\");\n/* harmony import */ var _ImageInputs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ImageInputs */ \"./components/ImageInputs.js\");\n/* harmony import */ var _RangeSlider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./RangeSlider */ \"./components/RangeSlider.js\");\n\n\nvar _jsxFileName = \"/Users/saravieira/Projects/pixel-splash/components/Form.js\",\n    _this = undefined,\n    _s = $RefreshSig$();\n\n\n\n\n\n\nvar Form = function Form(_ref) {\n  _s();\n\n  var canvas = _ref.canvas;\n\n  var _useOvermind = Object(_overmind__WEBPACK_IMPORTED_MODULE_2__[\"useOvermind\"])(),\n      state = _useOvermind.state,\n      actions = _useOvermind.actions;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"form\", {\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n      actions.getAndPixelateImage({\n        canvas: canvas\n      });\n    },\n    children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n      className: \"nes-field mb-3\",\n      children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"nav\", {\n        className: \"mb-3\",\n        children: state.tabs.map(function (tab) {\n          return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return actions.setTab(tab);\n            },\n            className: \"nes-btn mr-2 \".concat(state.activeTab === tab ? \"is-primary\" : null),\n            children: tab\n          }, tab, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(_ImageInputs__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n      className: \"nes-field mb-3\",\n      children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n        htmlFor: \"size_field\",\n        children: \"Pixel Size\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n        type: \"number\",\n        id: \"size_field\",\n        className: \"nes-input\",\n        value: state.scale,\n        onChange: function onChange(e) {\n          actions.setScale(e.target.value);\n          if (state.activeImage) actions.pixelImage({\n            canvas: canvas\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n          type: \"checkbox\",\n          className: \"nes-checkbox\",\n          checked: state.grayscale,\n          onChange: function onChange() {\n            actions.toggleGrayscale();\n            if (state.activeImage) actions.pixelImage({\n              canvas: canvas\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"span\", {\n          children: \"Grayscale\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n          type: \"checkbox\",\n          className: \"nes-checkbox\",\n          checked: state.sepia,\n          onChange: function onChange() {\n            actions.toggleSepia();\n            if (state.activeImage) actions.pixelImage({\n              canvas: canvas\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"span\", {\n          children: \"Sepia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"button\", {\n        type: \"button\",\n        className: \"advanced-button \".concat(open ? \"open\" : null),\n        onClick: function onClick() {\n          return setOpen(!open);\n        },\n        children: \"Advanced Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, _this), open ? /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"section\", {\n        className: \"mt-3 grid gap-3 grid-cols-2\",\n        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(_RangeSlider__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n          maxText: 360,\n          min: 0,\n          max: 100,\n          value: state.hue,\n          canvas: canvas,\n          label: \"Hue Shift\",\n          onChange: function onChange(value) {\n            actions.setValue({\n              name: \"hue\",\n              value: value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(_RangeSlider__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n          min: -100,\n          max: 100,\n          value: state.exposure,\n          canvas: canvas,\n          label: \"Exposure\",\n          onChange: function onChange(value) {\n            actions.setValue({\n              name: \"exposure\",\n              value: value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(_RangeSlider__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n          min: 0,\n          max: 4,\n          step: 0.1,\n          value: state.gamma,\n          canvas: canvas,\n          label: \"Gamma\",\n          onChange: function onChange(value) {\n            actions.setValue({\n              name: \"gamma\",\n              value: value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(_RangeSlider__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n          min: 0,\n          max: 100,\n          value: state.noise,\n          canvas: canvas,\n          label: \"Noise\",\n          onChange: function onChange(value) {\n            actions.setValue({\n              name: \"noise\",\n              value: value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(_RangeSlider__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n          min: -100,\n          max: 100,\n          value: state.saturation,\n          canvas: canvas,\n          label: \"Saturation\",\n          onChange: function onChange(value) {\n            actions.setValue({\n              name: \"saturation\",\n              value: value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(_RangeSlider__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n          min: -100,\n          max: 100,\n          value: state.vibrance,\n          canvas: canvas,\n          label: \"Vibrance\",\n          onChange: function onChange(value) {\n            actions.setValue({\n              name: \"vibrance\",\n              value: value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n          children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n            type: \"checkbox\",\n            className: \"nes-checkbox\",\n            checked: state.invert,\n            onChange: function onChange() {\n              actions.toggleInvert();\n              if (state.activeImage) actions.pixelImage({\n                canvas: canvas\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"span\", {\n            children: \"Invert Colors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, _this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"button\", {\n      type: \"submit\",\n      className: \"nes-btn \".concat(state.isButtonDisabled ? \"is-disabled\" : \"is-primary\"),\n      disabled: state.isButtonDisabled,\n      children: \"Pixel It\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Form, \"4swE7/lI0ZWg5coa48aHX6oaSYY=\", false, function () {\n  return [_overmind__WEBPACK_IMPORTED_MODULE_2__[\"useOvermind\"]];\n});\n\n_c = Form;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Form);\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/Form.js\n");

/***/ }),

/***/ "./components/ImageInputs.js":
/*!***********************************!*\
  !*** ./components/ImageInputs.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _overmind__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../overmind */ \"./overmind/index.js\");\n\n\n\nvar _jsxFileName = \"/Users/saravieira/Projects/pixel-splash/components/ImageInputs.js\",\n    _this = undefined,\n    _s = $RefreshSig$();\n\n\n\n\nvar ImageInputs = function ImageInputs() {\n  _s();\n\n  var _useOvermind = Object(_overmind__WEBPACK_IMPORTED_MODULE_2__[\"useOvermind\"])(),\n      state = _useOvermind.state,\n      actions = _useOvermind.actions;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(),\n      fileName = _useState[0],\n      setFileName = _useState[1];\n\n  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], {\n    children: [\" \", state.isUnsplash ? /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], {\n      children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n        htmlFor: \"url_field\",\n        children: \"Link or Unsplash Image ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n        type: \"text\",\n        id: \"url_field\",\n        className: \"nes-input\",\n        placeholder: \"Place an unsplash link or id\",\n        onChange: function onChange(e) {\n          return actions.setLink(e.target.value);\n        },\n        value: state.imageLink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true) : null, state.isFileUpload ? /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], {\n      children: fileName ? /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"span\", {\n          className: \"nes-text is-success\",\n          children: fileName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"button\", {\n          className: \"nes-btn is-error\",\n          onClick: function onClick() {\n            actions.deleteUploadedFile();\n            setFileName(null);\n          },\n          children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"i\", {\n            className: \"nes-icon close is-small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, _this) : /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n        className: \"nes-btn\",\n        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"span\", {\n          children: \"Select your file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n          accept: \"image/*\",\n          type: \"file\",\n          onChange: function onChange(e) {\n            actions.fileUpload(e);\n            setFileName(e.target.files[0].name);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false) : null, state.isURL ? /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], {\n      children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n        htmlFor: \"url_field\",\n        children: \"Image Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n        type: \"text\",\n        id: \"url_field\",\n        className: \"nes-input\",\n        placeholder: \"Place an image link\",\n        onChange: function onChange(e) {\n          return actions.setLink(e.target.value);\n        },\n        value: state.imageLink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true) : null]\n  }, void 0, true);\n};\n\n_s(ImageInputs, \"b3eTMXVLtalzFPcF1dJEiGO2BxY=\", false, function () {\n  return [_overmind__WEBPACK_IMPORTED_MODULE_2__[\"useOvermind\"]];\n});\n\n_c = ImageInputs;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ImageInputs);\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageInputs\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9JbWFnZUlucHV0cy5qcz85Y2YwIl0sIm5hbWVzIjpbIkltYWdlSW5wdXRzIiwidXNlT3Zlcm1pbmQiLCJzdGF0ZSIsImFjdGlvbnMiLCJ1c2VTdGF0ZSIsImZpbGVOYW1lIiwic2V0RmlsZU5hbWUiLCJpc1Vuc3BsYXNoIiwiZSIsInNldExpbmsiLCJ0YXJnZXQiLCJ2YWx1ZSIsImltYWdlTGluayIsImlzRmlsZVVwbG9hZCIsImRlbGV0ZVVwbG9hZGVkRmlsZSIsImZpbGVVcGxvYWQiLCJmaWxlcyIsIm5hbWUiLCJpc1VSTCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7O0FBRUEsSUFBTUEsV0FBVyxHQUFHLFNBQWRBLFdBQWMsR0FBTTtBQUFBOztBQUFBLHFCQUNHQyw2REFBVyxFQURkO0FBQUEsTUFDaEJDLEtBRGdCLGdCQUNoQkEsS0FEZ0I7QUFBQSxNQUNUQyxPQURTLGdCQUNUQSxPQURTOztBQUFBLGtCQUVRQyxzREFBUSxFQUZoQjtBQUFBLE1BRWpCQyxRQUZpQjtBQUFBLE1BRVBDLFdBRk87O0FBR3hCLHNCQUNFO0FBQUEsZUFDRyxHQURILEVBRUdKLEtBQUssQ0FBQ0ssVUFBTixnQkFDQztBQUFBLDhCQUNFO0FBQU8sZUFBTyxFQUFDLFdBQWY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsZUFERixlQUVFO0FBQ0UsWUFBSSxFQUFDLE1BRFA7QUFFRSxVQUFFLEVBQUMsV0FGTDtBQUdFLGlCQUFTLEVBQUMsV0FIWjtBQUlFLG1CQUFXLEVBQUMsOEJBSmQ7QUFLRSxnQkFBUSxFQUFFLGtCQUFDQyxDQUFEO0FBQUEsaUJBQU9MLE9BQU8sQ0FBQ00sT0FBUixDQUFnQkQsQ0FBQyxDQUFDRSxNQUFGLENBQVNDLEtBQXpCLENBQVA7QUFBQSxTQUxaO0FBTUUsYUFBSyxFQUFFVCxLQUFLLENBQUNVO0FBTmY7QUFBQTtBQUFBO0FBQUE7QUFBQSxlQUZGO0FBQUEsb0JBREQsR0FZRyxJQWROLEVBZUdWLEtBQUssQ0FBQ1csWUFBTixnQkFDQztBQUFBLGdCQUNHUixRQUFRLGdCQUNQO0FBQUssaUJBQVMsRUFBQyxtQ0FBZjtBQUFBLGdDQUNFO0FBQU0sbUJBQVMsRUFBQyxxQkFBaEI7QUFBQSxvQkFBdUNBO0FBQXZDO0FBQUE7QUFBQTtBQUFBO0FBQUEsaUJBREYsZUFFRTtBQUNFLG1CQUFTLEVBQUMsa0JBRFo7QUFFRSxpQkFBTyxFQUFFLG1CQUFNO0FBQ2JGLG1CQUFPLENBQUNXLGtCQUFSO0FBQ0FSLHVCQUFXLENBQUMsSUFBRCxDQUFYO0FBQ0QsV0FMSDtBQUFBLGlDQU9FO0FBQUcscUJBQVMsRUFBQztBQUFiO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFQRjtBQUFBO0FBQUE7QUFBQTtBQUFBLGlCQUZGO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxlQURPLGdCQWNQO0FBQU8saUJBQVMsRUFBQyxTQUFqQjtBQUFBLGdDQUNFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGlCQURGLGVBRUU7QUFDRSxnQkFBTSxFQUFDLFNBRFQ7QUFFRSxjQUFJLEVBQUMsTUFGUDtBQUdFLGtCQUFRLEVBQUUsa0JBQUNFLENBQUQsRUFBTztBQUNmTCxtQkFBTyxDQUFDWSxVQUFSLENBQW1CUCxDQUFuQjtBQUNBRix1QkFBVyxDQUFDRSxDQUFDLENBQUNFLE1BQUYsQ0FBU00sS0FBVCxDQUFlLENBQWYsRUFBa0JDLElBQW5CLENBQVg7QUFDRDtBQU5IO0FBQUE7QUFBQTtBQUFBO0FBQUEsaUJBRkY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBZkoscUJBREQsR0E2QkcsSUE1Q04sRUE2Q0dmLEtBQUssQ0FBQ2dCLEtBQU4sZ0JBQ0M7QUFBQSw4QkFDRTtBQUFPLGVBQU8sRUFBQyxXQUFmO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGVBREYsZUFFRTtBQUNFLFlBQUksRUFBQyxNQURQO0FBRUUsVUFBRSxFQUFDLFdBRkw7QUFHRSxpQkFBUyxFQUFDLFdBSFo7QUFJRSxtQkFBVyxFQUFDLHFCQUpkO0FBS0UsZ0JBQVEsRUFBRSxrQkFBQ1YsQ0FBRDtBQUFBLGlCQUFPTCxPQUFPLENBQUNNLE9BQVIsQ0FBZ0JELENBQUMsQ0FBQ0UsTUFBRixDQUFTQyxLQUF6QixDQUFQO0FBQUEsU0FMWjtBQU1FLGFBQUssRUFBRVQsS0FBSyxDQUFDVTtBQU5mO0FBQUE7QUFBQTtBQUFBO0FBQUEsZUFGRjtBQUFBLG9CQURELEdBWUcsSUF6RE47QUFBQSxrQkFERjtBQTZERCxDQWhFRDs7R0FBTVosVztVQUN1QkMscUQ7OztLQUR2QkQsVztBQWtFU0EsMEVBQWYiLCJmaWxlIjoiLi9jb21wb25lbnRzL0ltYWdlSW5wdXRzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZU92ZXJtaW5kIH0gZnJvbSBcIi4uL292ZXJtaW5kXCI7XG5cbmNvbnN0IEltYWdlSW5wdXRzID0gKCkgPT4ge1xuICBjb25zdCB7IHN0YXRlLCBhY3Rpb25zIH0gPSB1c2VPdmVybWluZCgpO1xuICBjb25zdCBbZmlsZU5hbWUsIHNldEZpbGVOYW1lXSA9IHVzZVN0YXRlKCk7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIHtcIiBcIn1cbiAgICAgIHtzdGF0ZS5pc1Vuc3BsYXNoID8gKFxuICAgICAgICA8PlxuICAgICAgICAgIDxsYWJlbCBodG1sRm9yPVwidXJsX2ZpZWxkXCI+TGluayBvciBVbnNwbGFzaCBJbWFnZSBJRDwvbGFiZWw+XG4gICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICBpZD1cInVybF9maWVsZFwiXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJuZXMtaW5wdXRcIlxuICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJQbGFjZSBhbiB1bnNwbGFzaCBsaW5rIG9yIGlkXCJcbiAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gYWN0aW9ucy5zZXRMaW5rKGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICAgIHZhbHVlPXtzdGF0ZS5pbWFnZUxpbmt9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC8+XG4gICAgICApIDogbnVsbH1cbiAgICAgIHtzdGF0ZS5pc0ZpbGVVcGxvYWQgPyAoXG4gICAgICAgIDw+XG4gICAgICAgICAge2ZpbGVOYW1lID8gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW5cIj5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibmVzLXRleHQgaXMtc3VjY2Vzc1wiPntmaWxlTmFtZX08L3NwYW4+XG4gICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJuZXMtYnRuIGlzLWVycm9yXCJcbiAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICBhY3Rpb25zLmRlbGV0ZVVwbG9hZGVkRmlsZSgpO1xuICAgICAgICAgICAgICAgICAgc2V0RmlsZU5hbWUobnVsbCk7XG4gICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cIm5lcy1pY29uIGNsb3NlIGlzLXNtYWxsXCI+PC9pPlxuICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwibmVzLWJ0blwiPlxuICAgICAgICAgICAgICA8c3Bhbj5TZWxlY3QgeW91ciBmaWxlPC9zcGFuPlxuICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICBhY2NlcHQ9XCJpbWFnZS8qXCJcbiAgICAgICAgICAgICAgICB0eXBlPVwiZmlsZVwiXG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiB7XG4gICAgICAgICAgICAgICAgICBhY3Rpb25zLmZpbGVVcGxvYWQoZSk7XG4gICAgICAgICAgICAgICAgICBzZXRGaWxlTmFtZShlLnRhcmdldC5maWxlc1swXS5uYW1lKTtcbiAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICApfVxuICAgICAgICA8Lz5cbiAgICAgICkgOiBudWxsfVxuICAgICAge3N0YXRlLmlzVVJMID8gKFxuICAgICAgICA8PlxuICAgICAgICAgIDxsYWJlbCBodG1sRm9yPVwidXJsX2ZpZWxkXCI+SW1hZ2UgTGluazwvbGFiZWw+XG4gICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICBpZD1cInVybF9maWVsZFwiXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJuZXMtaW5wdXRcIlxuICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJQbGFjZSBhbiBpbWFnZSBsaW5rXCJcbiAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gYWN0aW9ucy5zZXRMaW5rKGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICAgIHZhbHVlPXtzdGF0ZS5pbWFnZUxpbmt9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC8+XG4gICAgICApIDogbnVsbH1cbiAgICA8Lz5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEltYWdlSW5wdXRzO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/ImageInputs.js\n");

/***/ }),

/***/ "./components/ImageViewer.js":
/*!***********************************!*\
  !*** ./components/ImageViewer.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_compare_slider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-compare-slider */ \"./node_modules/react-compare-slider/dist/react-compare-slider.esm.js\");\n/* harmony import */ var _overmind__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../overmind */ \"./overmind/index.js\");\n\n\n\nvar _jsxFileName = \"/Users/saravieira/Projects/pixel-splash/components/ImageViewer.js\",\n    _this = undefined,\n    _s = $RefreshSig$();\n\n\n\n\nvar ImageViewer = function ImageViewer(_ref) {\n  _s();\n\n  var canvas = _ref.canvas;\n\n  var _useOvermind = Object(_overmind__WEBPACK_IMPORTED_MODULE_2__[\"useOvermind\"])(),\n      state = _useOvermind.state;\n\n  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], {\n    children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n      className: \"mb-6\",\n      style: {\n        display: state.activeImage ? \"block\" : \"none\"\n      },\n      children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_compare_slider__WEBPACK_IMPORTED_MODULE_1__[\"ReactCompareSlider\"], {\n        handle: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_compare_slider__WEBPACK_IMPORTED_MODULE_1__[\"ReactCompareSliderHandle\"], {\n          buttonStyle: {\n            backdropFilter: \"none\",\n            border: 0,\n            boxShadow: \"none\",\n            \":after\": {\n              content: \"sup\"\n            }\n          },\n          linesStyle: {\n            background: \"black\",\n            width: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, _this),\n        position: 20,\n        itemOne: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], {\n          children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"img\", {\n            src: state.activeImage,\n            style: {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, _this), state.isUnsplash && state.unsplashData ? /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"img\", {\n            src: state.unsplashData.urls.regular,\n            alt: \"\",\n            style: {\n              height: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, _this) : /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"img\", {\n            src: state.activeImage,\n            style: {\n              height: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true),\n        itemTwo: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"canvas\", {\n          style: {\n            width: \"100%\",\n            height: \"100%\"\n          },\n          ref: canvas\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, _this), state.isUnsplash && state.unsplashData ? /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"p\", {\n      children: [\"Photo by\", \" \", /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"a\", {\n        href: \"https://unsplash.com/@\".concat(state.unsplashData.user.username, \"?utm_source=pixelr&utm_medium=referral\"),\n        children: state.unsplashData.user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, _this), \" \", \"on\", \" \", /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"a\", {\n        href: \"https://unsplash.com/?utm_source=pixelr&utm_medium=referral\",\n        children: \"Unsplash\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, _this) : null]\n  }, void 0, true);\n};\n\n_s(ImageViewer, \"ANOpXtyIom5LTe5ePkocquNSiiM=\", false, function () {\n  return [_overmind__WEBPACK_IMPORTED_MODULE_2__[\"useOvermind\"]];\n});\n\n_c = ImageViewer;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ImageViewer);\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageViewer\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9JbWFnZVZpZXdlci5qcz83MzkwIl0sIm5hbWVzIjpbIkltYWdlVmlld2VyIiwiY2FudmFzIiwidXNlT3Zlcm1pbmQiLCJzdGF0ZSIsImRpc3BsYXkiLCJhY3RpdmVJbWFnZSIsImJhY2tkcm9wRmlsdGVyIiwiYm9yZGVyIiwiYm94U2hhZG93IiwiY29udGVudCIsImJhY2tncm91bmQiLCJ3aWR0aCIsImlzVW5zcGxhc2giLCJ1bnNwbGFzaERhdGEiLCJ1cmxzIiwicmVndWxhciIsImhlaWdodCIsInVzZXIiLCJ1c2VybmFtZSIsIm5hbWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBSUE7O0FBRUEsSUFBTUEsV0FBVyxHQUFHLFNBQWRBLFdBQWMsT0FBZ0I7QUFBQTs7QUFBQSxNQUFiQyxNQUFhLFFBQWJBLE1BQWE7O0FBQUEscUJBQ2hCQyw2REFBVyxFQURLO0FBQUEsTUFDMUJDLEtBRDBCLGdCQUMxQkEsS0FEMEI7O0FBR2xDLHNCQUNFO0FBQUEsNEJBQ0U7QUFDRSxlQUFTLEVBQUMsTUFEWjtBQUVFLFdBQUssRUFBRTtBQUFFQyxlQUFPLEVBQUVELEtBQUssQ0FBQ0UsV0FBTixHQUFvQixPQUFwQixHQUE4QjtBQUF6QyxPQUZUO0FBQUEsNkJBSUUscUVBQUMsdUVBQUQ7QUFDRSxjQUFNLGVBQ0oscUVBQUMsNkVBQUQ7QUFDRSxxQkFBVyxFQUFFO0FBQ1hDLDBCQUFjLEVBQUUsTUFETDtBQUVYQyxrQkFBTSxFQUFFLENBRkc7QUFHWEMscUJBQVMsRUFBRSxNQUhBO0FBSVgsc0JBQVU7QUFDUkMscUJBQU8sRUFBRTtBQUREO0FBSkMsV0FEZjtBQVNFLG9CQUFVLEVBQUU7QUFBRUMsc0JBQVUsRUFBRSxPQUFkO0FBQXVCQyxpQkFBSyxFQUFFO0FBQTlCO0FBVGQ7QUFBQTtBQUFBO0FBQUE7QUFBQSxpQkFGSjtBQWNFLGdCQUFRLEVBQUUsRUFkWjtBQWVFLGVBQU8sZUFDTDtBQUFBLGtDQUNFO0FBQUssZUFBRyxFQUFFUixLQUFLLENBQUNFLFdBQWhCO0FBQTZCLGlCQUFLLEVBQUU7QUFBRUQscUJBQU8sRUFBRTtBQUFYO0FBQXBDO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBREYsRUFFR0QsS0FBSyxDQUFDUyxVQUFOLElBQW9CVCxLQUFLLENBQUNVLFlBQTFCLGdCQUNDO0FBQ0UsZUFBRyxFQUFFVixLQUFLLENBQUNVLFlBQU4sQ0FBbUJDLElBQW5CLENBQXdCQyxPQUQvQjtBQUVFLGVBQUcsRUFBQyxFQUZOO0FBR0UsaUJBQUssRUFBRTtBQUFFQyxvQkFBTSxFQUFFO0FBQVY7QUFIVDtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQURELGdCQU9DO0FBQUssZUFBRyxFQUFFYixLQUFLLENBQUNFLFdBQWhCO0FBQTZCLGlCQUFLLEVBQUU7QUFBRVcsb0JBQU0sRUFBRTtBQUFWO0FBQXBDO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBVEo7QUFBQSx3QkFoQko7QUE2QkUsZUFBTyxlQUNMO0FBQ0UsZUFBSyxFQUFFO0FBQUVMLGlCQUFLLEVBQUUsTUFBVDtBQUFpQkssa0JBQU0sRUFBRTtBQUF6QixXQURUO0FBRUUsYUFBRyxFQUFFZjtBQUZQO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUE5Qko7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUpGO0FBQUE7QUFBQTtBQUFBO0FBQUEsYUFERixFQTBDR0UsS0FBSyxDQUFDUyxVQUFOLElBQW9CVCxLQUFLLENBQUNVLFlBQTFCLGdCQUNDO0FBQUEsNkJBQ1csR0FEWCxlQUVFO0FBQ0UsWUFBSSxrQ0FBMkJWLEtBQUssQ0FBQ1UsWUFBTixDQUFtQkksSUFBbkIsQ0FBd0JDLFFBQW5ELDJDQUROO0FBQUEsa0JBR0dmLEtBQUssQ0FBQ1UsWUFBTixDQUFtQkksSUFBbkIsQ0FBd0JFO0FBSDNCO0FBQUE7QUFBQTtBQUFBO0FBQUEsZUFGRixFQU1PLEdBTlAsUUFPSyxHQVBMLGVBUUU7QUFBRyxZQUFJLEVBQUMsNkRBQVI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsZUFSRjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsYUFERCxHQWFHLElBdkROO0FBQUEsa0JBREY7QUEyREQsQ0E5REQ7O0dBQU1uQixXO1VBQ2NFLHFEOzs7S0FEZEYsVztBQWdFU0EsMEVBQWYiLCJmaWxlIjoiLi9jb21wb25lbnRzL0ltYWdlVmlld2VyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgUmVhY3RDb21wYXJlU2xpZGVyLFxuICBSZWFjdENvbXBhcmVTbGlkZXJIYW5kbGUsXG59IGZyb20gXCJyZWFjdC1jb21wYXJlLXNsaWRlclwiO1xuaW1wb3J0IHsgdXNlT3Zlcm1pbmQgfSBmcm9tIFwiLi4vb3Zlcm1pbmRcIjtcblxuY29uc3QgSW1hZ2VWaWV3ZXIgPSAoeyBjYW52YXMgfSkgPT4ge1xuICBjb25zdCB7IHN0YXRlIH0gPSB1c2VPdmVybWluZCgpO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3NOYW1lPVwibWItNlwiXG4gICAgICAgIHN0eWxlPXt7IGRpc3BsYXk6IHN0YXRlLmFjdGl2ZUltYWdlID8gXCJibG9ja1wiIDogXCJub25lXCIgfX1cbiAgICAgID5cbiAgICAgICAgPFJlYWN0Q29tcGFyZVNsaWRlclxuICAgICAgICAgIGhhbmRsZT17XG4gICAgICAgICAgICA8UmVhY3RDb21wYXJlU2xpZGVySGFuZGxlXG4gICAgICAgICAgICAgIGJ1dHRvblN0eWxlPXt7XG4gICAgICAgICAgICAgICAgYmFja2Ryb3BGaWx0ZXI6IFwibm9uZVwiLFxuICAgICAgICAgICAgICAgIGJvcmRlcjogMCxcbiAgICAgICAgICAgICAgICBib3hTaGFkb3c6IFwibm9uZVwiLFxuICAgICAgICAgICAgICAgIFwiOmFmdGVyXCI6IHtcbiAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwic3VwXCIsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgbGluZXNTdHlsZT17eyBiYWNrZ3JvdW5kOiBcImJsYWNrXCIsIHdpZHRoOiA0IH19XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIH1cbiAgICAgICAgICBwb3NpdGlvbj17MjB9XG4gICAgICAgICAgaXRlbU9uZT17XG4gICAgICAgICAgICA8PlxuICAgICAgICAgICAgICA8aW1nIHNyYz17c3RhdGUuYWN0aXZlSW1hZ2V9IHN0eWxlPXt7IGRpc3BsYXk6IFwibm9uZVwiIH19IC8+XG4gICAgICAgICAgICAgIHtzdGF0ZS5pc1Vuc3BsYXNoICYmIHN0YXRlLnVuc3BsYXNoRGF0YSA/IChcbiAgICAgICAgICAgICAgICA8aW1nXG4gICAgICAgICAgICAgICAgICBzcmM9e3N0YXRlLnVuc3BsYXNoRGF0YS51cmxzLnJlZ3VsYXJ9XG4gICAgICAgICAgICAgICAgICBhbHQ9XCJcIlxuICAgICAgICAgICAgICAgICAgc3R5bGU9e3sgaGVpZ2h0OiBcIjEwMCVcIiB9fVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgPGltZyBzcmM9e3N0YXRlLmFjdGl2ZUltYWdlfSBzdHlsZT17eyBoZWlnaHQ6IFwiMTAwJVwiIH19IC8+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8Lz5cbiAgICAgICAgICB9XG4gICAgICAgICAgaXRlbVR3bz17XG4gICAgICAgICAgICA8Y2FudmFzXG4gICAgICAgICAgICAgIHN0eWxlPXt7IHdpZHRoOiBcIjEwMCVcIiwgaGVpZ2h0OiBcIjEwMCVcIiB9fVxuICAgICAgICAgICAgICByZWY9e2NhbnZhc31cbiAgICAgICAgICAgID48L2NhbnZhcz5cbiAgICAgICAgICB9XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIHtzdGF0ZS5pc1Vuc3BsYXNoICYmIHN0YXRlLnVuc3BsYXNoRGF0YSA/IChcbiAgICAgICAgPHA+XG4gICAgICAgICAgUGhvdG8gYnl7XCIgXCJ9XG4gICAgICAgICAgPGFcbiAgICAgICAgICAgIGhyZWY9e2BodHRwczovL3Vuc3BsYXNoLmNvbS9AJHtzdGF0ZS51bnNwbGFzaERhdGEudXNlci51c2VybmFtZX0/dXRtX3NvdXJjZT1waXhlbHImdXRtX21lZGl1bT1yZWZlcnJhbGB9XG4gICAgICAgICAgPlxuICAgICAgICAgICAge3N0YXRlLnVuc3BsYXNoRGF0YS51c2VyLm5hbWV9XG4gICAgICAgICAgPC9hPntcIiBcIn1cbiAgICAgICAgICBvbntcIiBcIn1cbiAgICAgICAgICA8YSBocmVmPVwiaHR0cHM6Ly91bnNwbGFzaC5jb20vP3V0bV9zb3VyY2U9cGl4ZWxyJnV0bV9tZWRpdW09cmVmZXJyYWxcIj5cbiAgICAgICAgICAgIFVuc3BsYXNoXG4gICAgICAgICAgPC9hPlxuICAgICAgICA8L3A+XG4gICAgICApIDogbnVsbH1cbiAgICA8Lz5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEltYWdlVmlld2VyO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/ImageViewer.js\n");

/***/ }),

/***/ "./components/RangeSlider.js":
/*!***********************************!*\
  !*** ./components/RangeSlider.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _overmind__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../overmind */ \"./overmind/index.js\");\n\n\n\nvar _jsxFileName = \"/Users/saravieira/Projects/pixel-splash/components/RangeSlider.js\",\n    _this = undefined,\n    _s = $RefreshSig$();\n\n\n\n\nvar RangeSlider = function RangeSlider(_ref) {\n  _s();\n\n  var value = _ref.value,\n      onChange = _ref.onChange,\n      canvas = _ref.canvas,\n      _ref$min = _ref.min,\n      min = _ref$min === void 0 ? 0 : _ref$min,\n      _ref$max = _ref.max,\n      max = _ref$max === void 0 ? 100 : _ref$max,\n      _ref$step = _ref.step,\n      step = _ref$step === void 0 ? 1 : _ref$step,\n      _ref$minText = _ref.minText,\n      minText = _ref$minText === void 0 ? min : _ref$minText,\n      _ref$maxText = _ref.maxText,\n      maxText = _ref$maxText === void 0 ? max : _ref$maxText,\n      label = _ref.label;\n\n  var _useOvermind = Object(_overmind__WEBPACK_IMPORTED_MODULE_2__[\"useOvermind\"])(),\n      actions = _useOvermind.actions,\n      state = _useOvermind.state;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(value),\n      stateValue = _useState[0],\n      setStateValue = _useState[1];\n\n  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], {\n    children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n      htmlFor: \"hue_field\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n      className: \"flex items-center mb-3\",\n      children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"span\", {\n        className: \"mr-2\",\n        children: minText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n        type: \"range\",\n        id: \"hue_field\",\n        className: \"nes-range is-green\",\n        min: min,\n        max: max,\n        step: step,\n        value: stateValue.toString(),\n        onChange: function onChange(e) {\n          return setStateValue(e.target.value);\n        },\n        onInput: function onInput() {\n          onChange(stateValue);\n          if (state.activeImage) actions.pixelImage({\n            canvas: canvas\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"span\", {\n        className: \"ml-2\",\n        children: maxText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(RangeSlider, \"EJwVbp0Au+TKy4+CEwou18mPxDw=\", false, function () {\n  return [_overmind__WEBPACK_IMPORTED_MODULE_2__[\"useOvermind\"]];\n});\n\n_c = RangeSlider;\n/* harmony default export */ __webpack_exports__[\"default\"] = (RangeSlider);\n\nvar _c;\n\n$RefreshReg$(_c, \"RangeSlider\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9SYW5nZVNsaWRlci5qcz83NThmIl0sIm5hbWVzIjpbIlJhbmdlU2xpZGVyIiwidmFsdWUiLCJvbkNoYW5nZSIsImNhbnZhcyIsIm1pbiIsIm1heCIsInN0ZXAiLCJtaW5UZXh0IiwibWF4VGV4dCIsImxhYmVsIiwidXNlT3Zlcm1pbmQiLCJhY3Rpb25zIiwic3RhdGUiLCJ1c2VTdGF0ZSIsInN0YXRlVmFsdWUiLCJzZXRTdGF0ZVZhbHVlIiwidG9TdHJpbmciLCJlIiwidGFyZ2V0IiwiYWN0aXZlSW1hZ2UiLCJwaXhlbEltYWdlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTs7QUFFQSxJQUFNQSxXQUFXLEdBQUcsU0FBZEEsV0FBYyxPQVVkO0FBQUE7O0FBQUEsTUFUSkMsS0FTSSxRQVRKQSxLQVNJO0FBQUEsTUFSSkMsUUFRSSxRQVJKQSxRQVFJO0FBQUEsTUFQSkMsTUFPSSxRQVBKQSxNQU9JO0FBQUEsc0JBTkpDLEdBTUk7QUFBQSxNQU5KQSxHQU1JLHlCQU5FLENBTUY7QUFBQSxzQkFMSkMsR0FLSTtBQUFBLE1BTEpBLEdBS0kseUJBTEUsR0FLRjtBQUFBLHVCQUpKQyxJQUlJO0FBQUEsTUFKSkEsSUFJSSwwQkFKRyxDQUlIO0FBQUEsMEJBSEpDLE9BR0k7QUFBQSxNQUhKQSxPQUdJLDZCQUhNSCxHQUdOO0FBQUEsMEJBRkpJLE9BRUk7QUFBQSxNQUZKQSxPQUVJLDZCQUZNSCxHQUVOO0FBQUEsTUFESkksS0FDSSxRQURKQSxLQUNJOztBQUFBLHFCQUN1QkMsNkRBQVcsRUFEbEM7QUFBQSxNQUNJQyxPQURKLGdCQUNJQSxPQURKO0FBQUEsTUFDYUMsS0FEYixnQkFDYUEsS0FEYjs7QUFBQSxrQkFFZ0NDLHNEQUFRLENBQUNaLEtBQUQsQ0FGeEM7QUFBQSxNQUVHYSxVQUZIO0FBQUEsTUFFZUMsYUFGZjs7QUFHSixzQkFDRTtBQUFBLDRCQUNFO0FBQU8sYUFBTyxFQUFDLFdBQWY7QUFBQSxnQkFBNEJOO0FBQTVCO0FBQUE7QUFBQTtBQUFBO0FBQUEsYUFERixlQUVFO0FBQUssZUFBUyxFQUFDLHdCQUFmO0FBQUEsOEJBQ0U7QUFBTSxpQkFBUyxFQUFDLE1BQWhCO0FBQUEsa0JBQXdCRjtBQUF4QjtBQUFBO0FBQUE7QUFBQTtBQUFBLGVBREYsZUFFRTtBQUNFLFlBQUksRUFBQyxPQURQO0FBRUUsVUFBRSxFQUFDLFdBRkw7QUFHRSxpQkFBUyxFQUFDLG9CQUhaO0FBSUUsV0FBRyxFQUFFSCxHQUpQO0FBS0UsV0FBRyxFQUFFQyxHQUxQO0FBTUUsWUFBSSxFQUFFQyxJQU5SO0FBT0UsYUFBSyxFQUFFUSxVQUFVLENBQUNFLFFBQVgsRUFQVDtBQVFFLGdCQUFRLEVBQUUsa0JBQUNDLENBQUQ7QUFBQSxpQkFBT0YsYUFBYSxDQUFDRSxDQUFDLENBQUNDLE1BQUYsQ0FBU2pCLEtBQVYsQ0FBcEI7QUFBQSxTQVJaO0FBU0UsZUFBTyxFQUFFLG1CQUFNO0FBQ2JDLGtCQUFRLENBQUNZLFVBQUQsQ0FBUjtBQUNBLGNBQUlGLEtBQUssQ0FBQ08sV0FBVixFQUF1QlIsT0FBTyxDQUFDUyxVQUFSLENBQW1CO0FBQUVqQixrQkFBTSxFQUFOQTtBQUFGLFdBQW5CO0FBQ3hCO0FBWkg7QUFBQTtBQUFBO0FBQUE7QUFBQSxlQUZGLGVBZ0JFO0FBQU0saUJBQVMsRUFBQyxNQUFoQjtBQUFBLGtCQUF3Qks7QUFBeEI7QUFBQTtBQUFBO0FBQUE7QUFBQSxlQWhCRjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsYUFGRjtBQUFBLGtCQURGO0FBdUJELENBcENEOztHQUFNUixXO1VBV3VCVSxxRDs7O0tBWHZCVixXO0FBc0NTQSwwRUFBZiIsImZpbGUiOiIuL2NvbXBvbmVudHMvUmFuZ2VTbGlkZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlT3Zlcm1pbmQgfSBmcm9tIFwiLi4vb3Zlcm1pbmRcIjtcblxuY29uc3QgUmFuZ2VTbGlkZXIgPSAoe1xuICB2YWx1ZSxcbiAgb25DaGFuZ2UsXG4gIGNhbnZhcyxcbiAgbWluID0gMCxcbiAgbWF4ID0gMTAwLFxuICBzdGVwID0gMSxcbiAgbWluVGV4dCA9IG1pbixcbiAgbWF4VGV4dCA9IG1heCxcbiAgbGFiZWwsXG59KSA9PiB7XG4gIGNvbnN0IHsgYWN0aW9ucywgc3RhdGUgfSA9IHVzZU92ZXJtaW5kKCk7XG4gIGNvbnN0IFtzdGF0ZVZhbHVlLCBzZXRTdGF0ZVZhbHVlXSA9IHVzZVN0YXRlKHZhbHVlKTtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPGxhYmVsIGh0bWxGb3I9XCJodWVfZmllbGRcIj57bGFiZWx9PC9sYWJlbD5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgbWItM1wiPlxuICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJtci0yXCI+e21pblRleHR9PC9zcGFuPlxuICAgICAgICA8aW5wdXRcbiAgICAgICAgICB0eXBlPVwicmFuZ2VcIlxuICAgICAgICAgIGlkPVwiaHVlX2ZpZWxkXCJcbiAgICAgICAgICBjbGFzc05hbWU9XCJuZXMtcmFuZ2UgaXMtZ3JlZW5cIlxuICAgICAgICAgIG1pbj17bWlufVxuICAgICAgICAgIG1heD17bWF4fVxuICAgICAgICAgIHN0ZXA9e3N0ZXB9XG4gICAgICAgICAgdmFsdWU9e3N0YXRlVmFsdWUudG9TdHJpbmcoKX1cbiAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldFN0YXRlVmFsdWUoZS50YXJnZXQudmFsdWUpfVxuICAgICAgICAgIG9uSW5wdXQ9eygpID0+IHtcbiAgICAgICAgICAgIG9uQ2hhbmdlKHN0YXRlVmFsdWUpO1xuICAgICAgICAgICAgaWYgKHN0YXRlLmFjdGl2ZUltYWdlKSBhY3Rpb25zLnBpeGVsSW1hZ2UoeyBjYW52YXMgfSk7XG4gICAgICAgICAgfX1cbiAgICAgICAgLz5cbiAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibWwtMlwiPnttYXhUZXh0fTwvc3Bhbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUmFuZ2VTbGlkZXI7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/RangeSlider.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _asyncToGenerator; });\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanM/MWRhMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHtcbiAgdHJ5IHtcbiAgICB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7XG4gICAgdmFyIHZhbHVlID0gaW5mby52YWx1ZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZWplY3QoZXJyb3IpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChpbmZvLmRvbmUpIHtcbiAgICByZXNvbHZlKHZhbHVlKTtcbiAgfSBlbHNlIHtcbiAgICBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXMsXG4gICAgICAgIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTtcblxuICAgICAgZnVuY3Rpb24gX25leHQodmFsdWUpIHtcbiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcIm5leHRcIiwgdmFsdWUpO1xuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBfdGhyb3coZXJyKSB7XG4gICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJ0aHJvd1wiLCBlcnIpO1xuICAgICAgfVxuXG4gICAgICBfbmV4dCh1bmRlZmluZWQpO1xuICAgIH0pO1xuICB9O1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/regenerator/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! regenerator-runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yL2luZGV4LmpzP2EzNGEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLG1CQUFPLENBQUMsMEVBQXFCIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicmVnZW5lcmF0b3ItcnVudGltZVwiKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/regenerator/index.js\n");

/***/ }),

/***/ "./node_modules/betsy/es/index.js":
/*!****************************************!*\
  !*** ./node_modules/betsy/es/index.js ***!
  \****************************************/
/*! exports provided: EventEmitter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EventEmitter\", function() { return EventEmitter; });\nvar EventEmitter = /** @class */ (function () {\n    function EventEmitter() {\n        this.events = new Map();\n    }\n    EventEmitter.prototype.emit = function (event, msg) {\n        var listeners = this.events.get(event) || [];\n        for (var i = listeners.length - 1; i >= 0; i--) {\n            var listener = listeners[i];\n            listener.cb(msg);\n            if (listener.once) {\n                listeners.splice(i, 1);\n            }\n        }\n    };\n    EventEmitter.prototype.emitAsync = function (event, msg) {\n        var listeners = this.events.get(event) || [];\n        setTimeout(function () {\n            for (var i = listeners.length - 1; i >= 0; i--) {\n                var listener = listeners[i];\n                listener.cb(msg);\n                if (listener.once) {\n                    listeners.splice(i, 1);\n                }\n            }\n        });\n    };\n    EventEmitter.prototype.on = function (event, cb) {\n        this.addListener(event, cb, false);\n    };\n    EventEmitter.prototype.once = function (event, cb) {\n        this.addListener(event, cb, true);\n    };\n    EventEmitter.prototype.addListener = function (event, cb, once) {\n        var listeners = this.events.get(event) || [];\n        listeners.push({\n            once: once,\n            cb: cb,\n        });\n        this.events.set(event, listeners);\n    };\n    return EventEmitter;\n}());\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2JldHN5L2VzL2luZGV4LmpzPzQ0MTAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxRQUFRO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLFFBQVE7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ3VCO0FBQ3hCIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2JldHN5L2VzL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIEV2ZW50RW1pdHRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBFdmVudEVtaXR0ZXIoKSB7XG4gICAgICAgIHRoaXMuZXZlbnRzID0gbmV3IE1hcCgpO1xuICAgIH1cbiAgICBFdmVudEVtaXR0ZXIucHJvdG90eXBlLmVtaXQgPSBmdW5jdGlvbiAoZXZlbnQsIG1zZykge1xuICAgICAgICB2YXIgbGlzdGVuZXJzID0gdGhpcy5ldmVudHMuZ2V0KGV2ZW50KSB8fCBbXTtcbiAgICAgICAgZm9yICh2YXIgaSA9IGxpc3RlbmVycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgICAgICAgdmFyIGxpc3RlbmVyID0gbGlzdGVuZXJzW2ldO1xuICAgICAgICAgICAgbGlzdGVuZXIuY2IobXNnKTtcbiAgICAgICAgICAgIGlmIChsaXN0ZW5lci5vbmNlKSB7XG4gICAgICAgICAgICAgICAgbGlzdGVuZXJzLnNwbGljZShpLCAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG4gICAgRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5lbWl0QXN5bmMgPSBmdW5jdGlvbiAoZXZlbnQsIG1zZykge1xuICAgICAgICB2YXIgbGlzdGVuZXJzID0gdGhpcy5ldmVudHMuZ2V0KGV2ZW50KSB8fCBbXTtcbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gbGlzdGVuZXJzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICAgICAgICAgICAgdmFyIGxpc3RlbmVyID0gbGlzdGVuZXJzW2ldO1xuICAgICAgICAgICAgICAgIGxpc3RlbmVyLmNiKG1zZyk7XG4gICAgICAgICAgICAgICAgaWYgKGxpc3RlbmVyLm9uY2UpIHtcbiAgICAgICAgICAgICAgICAgICAgbGlzdGVuZXJzLnNwbGljZShpLCAxKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5vbiA9IGZ1bmN0aW9uIChldmVudCwgY2IpIHtcbiAgICAgICAgdGhpcy5hZGRMaXN0ZW5lcihldmVudCwgY2IsIGZhbHNlKTtcbiAgICB9O1xuICAgIEV2ZW50RW1pdHRlci5wcm90b3R5cGUub25jZSA9IGZ1bmN0aW9uIChldmVudCwgY2IpIHtcbiAgICAgICAgdGhpcy5hZGRMaXN0ZW5lcihldmVudCwgY2IsIHRydWUpO1xuICAgIH07XG4gICAgRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5hZGRMaXN0ZW5lciA9IGZ1bmN0aW9uIChldmVudCwgY2IsIG9uY2UpIHtcbiAgICAgICAgdmFyIGxpc3RlbmVycyA9IHRoaXMuZXZlbnRzLmdldChldmVudCkgfHwgW107XG4gICAgICAgIGxpc3RlbmVycy5wdXNoKHtcbiAgICAgICAgICAgIG9uY2U6IG9uY2UsXG4gICAgICAgICAgICBjYjogY2IsXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmV2ZW50cy5zZXQoZXZlbnQsIGxpc3RlbmVycyk7XG4gICAgfTtcbiAgICByZXR1cm4gRXZlbnRFbWl0dGVyO1xufSgpKTtcbmV4cG9ydCB7IEV2ZW50RW1pdHRlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/betsy/es/index.js\n");

/***/ }),

/***/ "./node_modules/is-plain-obj/index.js":
/*!********************************************!*\
  !*** ./node_modules/is-plain-obj/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar toString = Object.prototype.toString;\n\nmodule.exports = function (x) {\n\tvar prototype;\n\treturn toString.call(x) === '[object Object]' && (prototype = Object.getPrototypeOf(x), prototype === null || prototype === Object.getPrototypeOf({}));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2lzLXBsYWluLW9iai9pbmRleC5qcz8zNjQyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7O0FBRUE7QUFDQTtBQUNBLHFKQUFxSjtBQUNySiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9pcy1wbGFpbi1vYmovaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgdG9TdHJpbmcgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh4KSB7XG5cdHZhciBwcm90b3R5cGU7XG5cdHJldHVybiB0b1N0cmluZy5jYWxsKHgpID09PSAnW29iamVjdCBPYmplY3RdJyAmJiAocHJvdG90eXBlID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKHgpLCBwcm90b3R5cGUgPT09IG51bGwgfHwgcHJvdG90eXBlID09PSBPYmplY3QuZ2V0UHJvdG90eXBlT2Yoe30pKTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/is-plain-obj/index.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/object-assign.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/object-assign.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var assign=Object.assign.bind(Object);module.exports=assign;module.exports.default=module.exports;\n//# sourceMappingURL=object-assign.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC9wb2x5ZmlsbHMvb2JqZWN0LWFzc2lnbi5qcz80MWViIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhLHNDQUFzQyxzQkFBc0I7QUFDekUiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9vYmplY3QtYXNzaWduLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7dmFyIGFzc2lnbj1PYmplY3QuYXNzaWduLmJpbmQoT2JqZWN0KTttb2R1bGUuZXhwb3J0cz1hc3NpZ247bW9kdWxlLmV4cG9ydHMuZGVmYXVsdD1tb2R1bGUuZXhwb3J0cztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9iamVjdC1hc3NpZ24uanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/polyfills/object-assign.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=%2FUsers%2Fsaravieira%2FProjects%2Fpixel-splash%2Fpages%2Findex.js!./":
/*!*******************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=%2FUsers%2Fsaravieira%2FProjects%2Fpixel-splash%2Fpages%2Findex.js ***!
  \*******************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\n      (window.__NEXT_P = window.__NEXT_P || []).push([\n        \"/\",\n        function () {\n          return __webpack_require__(/*! ./pages/index.js */ \"./pages/index.js\");\n        }\n      ]);\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1jbGllbnQtcGFnZXMtbG9hZGVyLmpzPzkyZjkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixtQkFBTyxDQUFDLDBDQUF3RDtBQUNqRjtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1jbGllbnQtcGFnZXMtbG9hZGVyLmpzP3BhZ2U9JTJGJmFic29sdXRlUGFnZVBhdGg9JTJGVXNlcnMlMkZzYXJhdmllaXJhJTJGUHJvamVjdHMlMkZwaXhlbC1zcGxhc2glMkZwYWdlcyUyRmluZGV4LmpzIS4vLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgICAod2luZG93Ll9fTkVYVF9QID0gd2luZG93Ll9fTkVYVF9QIHx8IFtdKS5wdXNoKFtcbiAgICAgICAgXCIvXCIsXG4gICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gcmVxdWlyZShcIi9Vc2Vycy9zYXJhdmllaXJhL1Byb2plY3RzL3BpeGVsLXNwbGFzaC9wYWdlcy9pbmRleC5qc1wiKTtcbiAgICAgICAgfVxuICAgICAgXSk7XG4gICAgIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=%2FUsers%2Fsaravieira%2FProjects%2Fpixel-splash%2Fpages%2Findex.js!./\n");

/***/ }),

/***/ "./node_modules/overmind-react/es/index.js":
/*!*************************************************!*\
  !*** ./node_modules/overmind-react/es/index.js ***!
  \*************************************************/
/*! exports provided: Provider, createStateHook, createActionsHook, createEffectsHook, createReactionHook, createHook, createConnect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Provider\", function() { return Provider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createStateHook\", function() { return createStateHook; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createActionsHook\", function() { return createActionsHook; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createEffectsHook\", function() { return createEffectsHook; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createReactionHook\", function() { return createReactionHook; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createHook\", function() { return createHook; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createConnect\", function() { return createConnect; });\n/* harmony import */ var overmind__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! overmind */ \"./node_modules/overmind/es/index.js\");\n/* harmony import */ var proxy_state_tree__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! proxy-state-tree */ \"./node_modules/proxy-state-tree/es/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var scheduler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! scheduler */ \"./node_modules/scheduler/index.js\");\n/* harmony import */ var scheduler__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(scheduler__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nconst IS_PRODUCTION = \"development\" === 'production';\nconst IS_TEST = \"development\" === 'test';\nconst isNode = !IS_TEST && process && process.title && process.title.includes('node');\nfunction getFiberType(component) {\n    if (component.type) {\n        // React.memo\n        return getFiberType(component.type);\n    }\n    // React.forwardRef\n    return component.render || component;\n}\n// Inspired from https://github.com/facebook/react/blob/master/packages/react-devtools-shared/src/backend/renderer.js\nfunction getDisplayName(component) {\n    const type = getFiberType(component);\n    return (type.displayName ||\n        type.name ||\n        'Anonymous');\n}\nfunction throwMissingContextError() {\n    throw new Error('The Overmind hook could not find an Overmind instance on the context of React. Please make sure you use the Provider component at the top of your application and expose the Overmind instance there. Please read more in the React guide on the website');\n}\nconst context = react__WEBPACK_IMPORTED_MODULE_2__[\"createContext\"]({});\nlet nextComponentId = 0;\nconst Provider = context.Provider;\nfunction useForceRerender() {\n    const [{ flushId }, setTick] = react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"]({ tick: 0, flushId: 0 });\n    const forceRerender = react__WEBPACK_IMPORTED_MODULE_2__[\"useCallback\"]((flushId) => {\n        setTick(current => (Object.assign(Object.assign({}, current), { tick: current.tick + 1, flushId: flushId || current.flushId })));\n    }, []);\n    return {\n        flushId,\n        forceRerender\n    };\n}\nlet currentComponentInstanceId = 0;\nconst { ReactCurrentOwner, } = react__WEBPACK_IMPORTED_MODULE_2__[\"__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\"];\nconst useCurrentComponent = () => {\n    return ReactCurrentOwner &&\n        ReactCurrentOwner.current &&\n        ReactCurrentOwner.current.elementType\n        ? ReactCurrentOwner.current.elementType\n        : {};\n};\nconst useState = () => {\n    const overmind = react__WEBPACK_IMPORTED_MODULE_2__[\"useContext\"](context);\n    if (!overmind.mode) {\n        throwMissingContextError();\n    }\n    if (isNode || overmind.mode.mode === overmind__WEBPACK_IMPORTED_MODULE_0__[\"MODE_SSR\"]) {\n        return overmind.state;\n    }\n    const trackingRef = react__WEBPACK_IMPORTED_MODULE_2__[\"useRef\"](null);\n    const { flushId, forceRerender } = useForceRerender();\n    if (!trackingRef.current) {\n        trackingRef.current = {\n            tree: overmind.proxyStateTree.getTrackStateTree(),\n            hasUpdatedBeforeCommit: false,\n            stopTrackingTask: Object(scheduler__WEBPACK_IMPORTED_MODULE_3__[\"unstable_scheduleCallback\"])(Object(scheduler__WEBPACK_IMPORTED_MODULE_3__[\"unstable_getCurrentPriorityLevel\"])(), () => {\n                trackingRef.current.tree.stopTracking();\n            })\n        };\n    }\n    if (IS_PRODUCTION) {\n        react__WEBPACK_IMPORTED_MODULE_2__[\"useLayoutEffect\"](() => {\n            trackingRef.current.mounted = true;\n            if (trackingRef.current.hasUpdatedBeforeCommit) {\n                forceRerender();\n            }\n            return () => {\n                ;\n                overmind.proxyStateTree.disposeTree(trackingRef.current.tree);\n            };\n        }, []);\n        react__WEBPACK_IMPORTED_MODULE_2__[\"useLayoutEffect\"](() => {\n            if (trackingRef.current.stopTrackingTask) {\n                Object(scheduler__WEBPACK_IMPORTED_MODULE_3__[\"unstable_cancelCallback\"])(trackingRef.current.stopTrackingTask);\n                trackingRef.current.stopTrackingTask = null;\n            }\n            trackingRef.current.tree.stopTracking();\n        });\n        trackingRef.current.tree.track(() => {\n            if (trackingRef.current.mounted) {\n                forceRerender();\n            }\n            else {\n                trackingRef.current.hasUpdatedBeforeCommit = true;\n            }\n        });\n    }\n    else {\n        const component = useCurrentComponent();\n        const name = getDisplayName(component);\n        component.__componentId =\n            typeof component.__componentId === 'undefined'\n                ? nextComponentId++\n                : component.__componentId;\n        const { current: componentInstanceId } = react__WEBPACK_IMPORTED_MODULE_2__[\"useRef\"](currentComponentInstanceId++);\n        react__WEBPACK_IMPORTED_MODULE_2__[\"useLayoutEffect\"](() => {\n            trackingRef.current.mounted = true;\n            overmind.eventHub.emitAsync(overmind__WEBPACK_IMPORTED_MODULE_0__[\"EventType\"].COMPONENT_ADD, {\n                componentId: component.__componentId,\n                componentInstanceId,\n                name,\n                paths: Array.from(trackingRef.current.tree.pathDependencies),\n            });\n            if (trackingRef.current.hasUpdatedBeforeCommit) {\n                forceRerender();\n            }\n            return () => {\n                ;\n                overmind.proxyStateTree.disposeTree(trackingRef.current.tree);\n                overmind.eventHub.emitAsync(overmind__WEBPACK_IMPORTED_MODULE_0__[\"EventType\"].COMPONENT_REMOVE, {\n                    componentId: component.__componentId,\n                    componentInstanceId,\n                    name,\n                });\n            };\n        }, []);\n        react__WEBPACK_IMPORTED_MODULE_2__[\"useLayoutEffect\"](() => {\n            if (trackingRef.current.stopTrackingTask) {\n                Object(scheduler__WEBPACK_IMPORTED_MODULE_3__[\"unstable_cancelCallback\"])(trackingRef.current.stopTrackingTask);\n                trackingRef.current.stopTrackingTask = null;\n            }\n            trackingRef.current.tree.stopTracking();\n            overmind.eventHub.emitAsync(overmind__WEBPACK_IMPORTED_MODULE_0__[\"EventType\"].COMPONENT_UPDATE, {\n                componentId: component.__componentId,\n                componentInstanceId,\n                name,\n                flushId,\n                paths: Array.from(trackingRef.current.tree.pathDependencies),\n            });\n        });\n        trackingRef.current.tree.track(() => {\n            if (trackingRef.current.mounted) {\n                forceRerender();\n            }\n            else {\n                trackingRef.current.hasUpdatedBeforeCommit = true;\n            }\n        });\n    }\n    return trackingRef.current.tree.state;\n};\nconst useActions = () => {\n    const overmind = react__WEBPACK_IMPORTED_MODULE_2__[\"useContext\"](context);\n    if (!overmind.mode) {\n        throwMissingContextError();\n    }\n    return overmind.actions;\n};\nconst useEffects = () => {\n    const overmind = react__WEBPACK_IMPORTED_MODULE_2__[\"useContext\"](context);\n    if (!overmind.mode) {\n        throwMissingContextError();\n    }\n    return overmind.effects;\n};\nconst useReaction = () => {\n    const overmind = react__WEBPACK_IMPORTED_MODULE_2__[\"useContext\"](context);\n    if (!overmind.mode) {\n        throwMissingContextError();\n    }\n    return overmind.reaction;\n};\nconst createStateHook = () => {\n    return useState;\n};\nconst createActionsHook = () => {\n    return useActions;\n};\nconst createEffectsHook = () => {\n    return useEffects;\n};\nconst createReactionHook = () => {\n    return useReaction;\n};\nconst createHook = () => {\n    return () => {\n        const state = useState();\n        const actions = useActions();\n        const effects = useEffects();\n        const overmind = react__WEBPACK_IMPORTED_MODULE_2__[\"useContext\"](context);\n        return {\n            state,\n            actions,\n            effects,\n            reaction: overmind.reaction,\n            addMutationListener: overmind.addMutationListener\n        };\n    };\n};\nconst createConnect = () => {\n    return (component) => {\n        let componentInstanceId = 0;\n        const name = component.displayName || component.name || 'Anonymous';\n        const populatedComponent = component;\n        populatedComponent.__componentId =\n            typeof populatedComponent.__componentId === 'undefined'\n                ? nextComponentId++\n                : populatedComponent.__componentId;\n        const isClassComponent = component.prototype && typeof component.prototype.render === 'function';\n        if (isClassComponent) {\n            const originalRender = component.prototype.render;\n            component.prototype.render = function () {\n                if (this.props.overmind) {\n                    return this.props.overmind.tree.trackScope(() => originalRender.call(this), this.props.overmind.onUpdate);\n                }\n                return originalRender.call(this);\n            };\n        }\n        if (IS_PRODUCTION) {\n            class HOC extends react__WEBPACK_IMPORTED_MODULE_2__[\"Component\"] {\n                constructor(props, context) {\n                    super(props);\n                    this.onUpdate = () => {\n                        this.setState({\n                            overmind: {\n                                state: this.tree.state,\n                                effects: this.overmind.effects,\n                                actions: this.overmind.actions,\n                                addMutationListener: this.overmind.addMutationListener,\n                                onUpdate: this.onUpdate,\n                                tree: this.tree,\n                                reaction: this.overmind.reaction,\n                            },\n                        });\n                    };\n                    if (!context) {\n                        throwMissingContextError();\n                    }\n                    this.overmind = context;\n                    this.tree = this.overmind.proxyStateTree.getTrackStateTree();\n                    this.state = {\n                        overmind: {\n                            state: this.tree.state,\n                            effects: this.overmind.effects,\n                            actions: this.overmind.actions,\n                            addMutationListener: this.overmind.addMutationListener,\n                            onUpdate: this.onUpdate,\n                            tree: this.tree,\n                            reaction: this.overmind.reaction,\n                        },\n                    };\n                    this.wrappedComponent = (...args) => this.tree.trackScope(() => component(...args), this.onUpdate);\n                }\n                componentWillUnmount() {\n                    this.overmind.proxyStateTree.disposeTree(this.tree);\n                }\n                render() {\n                    if (isClassComponent) {\n                        return react__WEBPACK_IMPORTED_MODULE_2__[\"createElement\"](component, Object.assign(Object.assign({}, this.props), { overmind: this.state.overmind }));\n                    }\n                    return react__WEBPACK_IMPORTED_MODULE_2__[\"createElement\"](this.wrappedComponent, Object.assign(Object.assign({}, this.props), { overmind: this.state.overmind }));\n                }\n            }\n            HOC.contextType = context;\n            return HOC;\n        }\n        else {\n            class HOC extends react__WEBPACK_IMPORTED_MODULE_2__[\"Component\"] {\n                constructor(props, context) {\n                    super(props);\n                    this.componentInstanceId = componentInstanceId++;\n                    this.currentFlushId = 0;\n                    this.onUpdate = (mutatons, paths, flushId) => {\n                        this.currentFlushId = flushId;\n                        this.isUpdating = true;\n                        this.setState({\n                            overmind: {\n                                state: this.tree.state,\n                                effects: this.overmind.effects,\n                                actions: this.overmind.actions,\n                                addMutationListener: this.overmind.addMutationListener,\n                                onUpdate: this.onUpdate,\n                                tree: this.tree,\n                                reaction: this.overmind.reaction,\n                            },\n                        });\n                    };\n                    if (!context) {\n                        throwMissingContextError();\n                    }\n                    this.overmind = context;\n                    this.tree = this.overmind.proxyStateTree.getTrackStateTree();\n                    this.state = {\n                        overmind: {\n                            state: this.tree.state,\n                            effects: this.overmind.effects,\n                            actions: this.overmind.actions,\n                            addMutationListener: this.overmind.addMutationListener,\n                            onUpdate: this.onUpdate,\n                            tree: this.tree,\n                            reaction: this.overmind.reaction,\n                        },\n                    };\n                    this.wrappedComponent = (...args) => this.tree.trackScope(() => component(...args), this.onUpdate);\n                }\n                componentDidMount() {\n                    this.overmind.eventHub.emitAsync(overmind__WEBPACK_IMPORTED_MODULE_0__[\"EventType\"].COMPONENT_ADD, {\n                        componentId: populatedComponent.__componentId,\n                        componentInstanceId: this.componentInstanceId,\n                        name,\n                        paths: Array.from(this.tree.pathDependencies),\n                    });\n                }\n                componentDidUpdate() {\n                    if (this.isUpdating) {\n                        this.overmind.eventHub.emitAsync(overmind__WEBPACK_IMPORTED_MODULE_0__[\"EventType\"].COMPONENT_UPDATE, {\n                            componentId: populatedComponent.__componentId,\n                            componentInstanceId: this.componentInstanceId,\n                            name,\n                            flushId: this.currentFlushId,\n                            paths: Array.from(this.tree.pathDependencies),\n                        });\n                        this.isUpdating = false;\n                    }\n                }\n                componentWillUnmount() {\n                    this.overmind.proxyStateTree.disposeTree(this.tree);\n                    this.overmind.eventHub.emitAsync(overmind__WEBPACK_IMPORTED_MODULE_0__[\"EventType\"].COMPONENT_REMOVE, {\n                        componentId: populatedComponent.__componentId,\n                        componentInstanceId: this.componentInstanceId,\n                        name,\n                    });\n                }\n                render() {\n                    if (isClassComponent) {\n                        return react__WEBPACK_IMPORTED_MODULE_2__[\"createElement\"](component, Object.assign(Object.assign({}, this.props), { overmind: this.state.overmind }));\n                    }\n                    return react__WEBPACK_IMPORTED_MODULE_2__[\"createElement\"](this.wrappedComponent, Object.assign(Object.assign({}, this.props), { overmind: this.state.overmind }));\n                }\n            }\n            HOC.contextType = context;\n            Object.defineProperties(HOC, {\n                name: {\n                    value: 'Connect' + name,\n                },\n            });\n            return HOC;\n        }\n    };\n};\n//# sourceMappingURL=index.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/overmind-react/es/index.js\n");

/***/ }),

/***/ "./node_modules/overmind/es/Devtools.js":
/*!**********************************************!*\
  !*** ./node_modules/overmind/es/Devtools.js ***!
  \**********************************************/
/*! exports provided: Devtools */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Devtools\", function() { return Devtools; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _rehydrate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rehydrate */ \"./node_modules/overmind/es/rehydrate.js\");\n\n\nclass Devtools {\n    constructor(name) {\n        this.safeClassNames = new Set();\n        this.unsafeClassNames = new Set();\n        this.circularReferenceCache = [];\n        this.buffer = [];\n        this.serializer = Promise.resolve();\n        this.isConnected = false;\n        this.doReconnect = false;\n        this.hasWarnedReconnect = false;\n        this.reconnectInterval = 10000;\n        this.connect = (host, onMessage) => {\n            host = host || 'localhost:3031';\n            this.ws = new WebSocket(`ws://${host}?name=${this.name}`);\n            this.ws.onmessage = (event) => {\n                const data = JSON.parse(event.data);\n                if (data.appName !== this.name) {\n                    return;\n                }\n                onMessage(data);\n            };\n            this.ws.onopen = () => {\n                this.isConnected = true;\n                this.flushBuffer();\n            };\n            this.ws.onerror = () => {\n                console.error(`OVERMIND DEVTOOLS: Not able to connect. You are trying to connect to \"${host}\", but there was no devtool there. Try the following:\n        \n          - Make sure you are running the latest version of the devtools, using \"npx overmind-devtools@latest\" or install latest extension for VSCode\n          - Close the current tab and open a new one\n          - Make sure the correct port is configured in the devtools\n        `);\n            };\n            this.ws.onclose = () => {\n                this.isConnected = false;\n                if (this.doReconnect && !this.hasWarnedReconnect) {\n                    console.warn('Debugger application is not running on selected port... will reconnect automatically behind the scenes');\n                    this.hasWarnedReconnect = true;\n                }\n                if (this.doReconnect) {\n                    this.reconnect(host, onMessage);\n                }\n            };\n        };\n        this.sendMessage = (payload) => {\n            if (!this.isConnected) {\n                this.buffer.push(payload);\n                return;\n            }\n            this.ws.send(`{\"appName\":\"${this.name}\",\"message\":${payload}}`);\n        };\n        this.flushBuffer = () => Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__awaiter\"])(this, void 0, void 0, function* () {\n            this.buffer.forEach((payload) => {\n                this.sendMessage(payload);\n            });\n            this.buffer.length = 0;\n        });\n        this.name = typeof location !== 'undefined' && location.search.includes('OVERMIND_DEVTOOL') ? name + ' (Overmind Devtool)' : name;\n    }\n    reconnect(host, onMessage) {\n        setTimeout(() => this.connect(host, onMessage), this.reconnectInterval);\n    }\n    send(message) {\n        const safeClassNames = this.safeClassNames;\n        const unsafeClassNames = this.unsafeClassNames;\n        const circularReferenceCache = this.circularReferenceCache;\n        this.sendMessage(JSON.stringify(message, function (_, value) {\n            if (typeof value === 'function') {\n                return '[Function]';\n            }\n            if (this.__CLASS__) {\n                return value;\n            }\n            if (value && value[_rehydrate__WEBPACK_IMPORTED_MODULE_1__[\"SERIALIZE\"]]) {\n                return {\n                    __CLASS__: true,\n                    name: value.constructor.name,\n                    value\n                };\n            }\n            if (typeof value === 'object' &&\n                value !== null &&\n                !Array.isArray(value) &&\n                value.constructor &&\n                value.constructor.name !== 'Object') {\n                if (circularReferenceCache.includes(value)) {\n                    return `[CIRCULAR REFERENCE: ${value.constructor.name}]`;\n                }\n                circularReferenceCache.push(value);\n                if (!safeClassNames.has(value.constructor.name) && !unsafeClassNames.has(value.constructor.name)) {\n                    try {\n                        JSON.stringify(value);\n                        safeClassNames.add(value.constructor.name);\n                    }\n                    catch (_a) {\n                        unsafeClassNames.add(value.constructor.name);\n                    }\n                }\n                if (safeClassNames.has(value.constructor.name)) {\n                    return {\n                        __CLASS__: true,\n                        name: value.constructor.name,\n                        value\n                    };\n                }\n                else {\n                    return `[${value.constructor.name || 'NOT SERIALIZABLE'}]`;\n                }\n            }\n            return value;\n        }));\n        circularReferenceCache.length = 0;\n    }\n}\n//# sourceMappingURL=Devtools.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL292ZXJtaW5kL2VzL0RldnRvb2xzLmpzPzAyYzEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBa0M7QUFDTTtBQUNqQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxLQUFLLFFBQVEsVUFBVTtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1R0FBdUcsS0FBSzs7QUFFNUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLGFBQWEsVUFBVSxjQUFjLFNBQVM7QUFDekU7QUFDQSxpQ0FBaUMsdURBQVM7QUFDMUM7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixvREFBUztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsdUJBQXVCO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLDZDQUE2QztBQUM1RTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvb3Zlcm1pbmQvZXMvRGV2dG9vbHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX2F3YWl0ZXIgfSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IFNFUklBTElaRSB9IGZyb20gJy4vcmVoeWRyYXRlJztcbmV4cG9ydCBjbGFzcyBEZXZ0b29scyB7XG4gICAgY29uc3RydWN0b3IobmFtZSkge1xuICAgICAgICB0aGlzLnNhZmVDbGFzc05hbWVzID0gbmV3IFNldCgpO1xuICAgICAgICB0aGlzLnVuc2FmZUNsYXNzTmFtZXMgPSBuZXcgU2V0KCk7XG4gICAgICAgIHRoaXMuY2lyY3VsYXJSZWZlcmVuY2VDYWNoZSA9IFtdO1xuICAgICAgICB0aGlzLmJ1ZmZlciA9IFtdO1xuICAgICAgICB0aGlzLnNlcmlhbGl6ZXIgPSBQcm9taXNlLnJlc29sdmUoKTtcbiAgICAgICAgdGhpcy5pc0Nvbm5lY3RlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmRvUmVjb25uZWN0ID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaGFzV2FybmVkUmVjb25uZWN0ID0gZmFsc2U7XG4gICAgICAgIHRoaXMucmVjb25uZWN0SW50ZXJ2YWwgPSAxMDAwMDtcbiAgICAgICAgdGhpcy5jb25uZWN0ID0gKGhvc3QsIG9uTWVzc2FnZSkgPT4ge1xuICAgICAgICAgICAgaG9zdCA9IGhvc3QgfHwgJ2xvY2FsaG9zdDozMDMxJztcbiAgICAgICAgICAgIHRoaXMud3MgPSBuZXcgV2ViU29ja2V0KGB3czovLyR7aG9zdH0/bmFtZT0ke3RoaXMubmFtZX1gKTtcbiAgICAgICAgICAgIHRoaXMud3Mub25tZXNzYWdlID0gKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IEpTT04ucGFyc2UoZXZlbnQuZGF0YSk7XG4gICAgICAgICAgICAgICAgaWYgKGRhdGEuYXBwTmFtZSAhPT0gdGhpcy5uYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgb25NZXNzYWdlKGRhdGEpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHRoaXMud3Mub25vcGVuID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuaXNDb25uZWN0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHRoaXMuZmx1c2hCdWZmZXIoKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB0aGlzLndzLm9uZXJyb3IgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihgT1ZFUk1JTkQgREVWVE9PTFM6IE5vdCBhYmxlIHRvIGNvbm5lY3QuIFlvdSBhcmUgdHJ5aW5nIHRvIGNvbm5lY3QgdG8gXCIke2hvc3R9XCIsIGJ1dCB0aGVyZSB3YXMgbm8gZGV2dG9vbCB0aGVyZS4gVHJ5IHRoZSBmb2xsb3dpbmc6XG4gICAgICAgIFxuICAgICAgICAgIC0gTWFrZSBzdXJlIHlvdSBhcmUgcnVubmluZyB0aGUgbGF0ZXN0IHZlcnNpb24gb2YgdGhlIGRldnRvb2xzLCB1c2luZyBcIm5weCBvdmVybWluZC1kZXZ0b29sc0BsYXRlc3RcIiBvciBpbnN0YWxsIGxhdGVzdCBleHRlbnNpb24gZm9yIFZTQ29kZVxuICAgICAgICAgIC0gQ2xvc2UgdGhlIGN1cnJlbnQgdGFiIGFuZCBvcGVuIGEgbmV3IG9uZVxuICAgICAgICAgIC0gTWFrZSBzdXJlIHRoZSBjb3JyZWN0IHBvcnQgaXMgY29uZmlndXJlZCBpbiB0aGUgZGV2dG9vbHNcbiAgICAgICAgYCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdGhpcy53cy5vbmNsb3NlID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuaXNDb25uZWN0ZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5kb1JlY29ubmVjdCAmJiAhdGhpcy5oYXNXYXJuZWRSZWNvbm5lY3QpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKCdEZWJ1Z2dlciBhcHBsaWNhdGlvbiBpcyBub3QgcnVubmluZyBvbiBzZWxlY3RlZCBwb3J0Li4uIHdpbGwgcmVjb25uZWN0IGF1dG9tYXRpY2FsbHkgYmVoaW5kIHRoZSBzY2VuZXMnKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5oYXNXYXJuZWRSZWNvbm5lY3QgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodGhpcy5kb1JlY29ubmVjdCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlY29ubmVjdChob3N0LCBvbk1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuc2VuZE1lc3NhZ2UgPSAocGF5bG9hZCkgPT4ge1xuICAgICAgICAgICAgaWYgKCF0aGlzLmlzQ29ubmVjdGVkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5idWZmZXIucHVzaChwYXlsb2FkKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLndzLnNlbmQoYHtcImFwcE5hbWVcIjpcIiR7dGhpcy5uYW1lfVwiLFwibWVzc2FnZVwiOiR7cGF5bG9hZH19YCk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuZmx1c2hCdWZmZXIgPSAoKSA9PiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICB0aGlzLmJ1ZmZlci5mb3JFYWNoKChwYXlsb2FkKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZW5kTWVzc2FnZShwYXlsb2FkKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5idWZmZXIubGVuZ3RoID0gMDtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMubmFtZSA9IHR5cGVvZiBsb2NhdGlvbiAhPT0gJ3VuZGVmaW5lZCcgJiYgbG9jYXRpb24uc2VhcmNoLmluY2x1ZGVzKCdPVkVSTUlORF9ERVZUT09MJykgPyBuYW1lICsgJyAoT3Zlcm1pbmQgRGV2dG9vbCknIDogbmFtZTtcbiAgICB9XG4gICAgcmVjb25uZWN0KGhvc3QsIG9uTWVzc2FnZSkge1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHRoaXMuY29ubmVjdChob3N0LCBvbk1lc3NhZ2UpLCB0aGlzLnJlY29ubmVjdEludGVydmFsKTtcbiAgICB9XG4gICAgc2VuZChtZXNzYWdlKSB7XG4gICAgICAgIGNvbnN0IHNhZmVDbGFzc05hbWVzID0gdGhpcy5zYWZlQ2xhc3NOYW1lcztcbiAgICAgICAgY29uc3QgdW5zYWZlQ2xhc3NOYW1lcyA9IHRoaXMudW5zYWZlQ2xhc3NOYW1lcztcbiAgICAgICAgY29uc3QgY2lyY3VsYXJSZWZlcmVuY2VDYWNoZSA9IHRoaXMuY2lyY3VsYXJSZWZlcmVuY2VDYWNoZTtcbiAgICAgICAgdGhpcy5zZW5kTWVzc2FnZShKU09OLnN0cmluZ2lmeShtZXNzYWdlLCBmdW5jdGlvbiAoXywgdmFsdWUpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gJ1tGdW5jdGlvbl0nO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMuX19DTEFTU19fKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHZhbHVlICYmIHZhbHVlW1NFUklBTElaRV0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBfX0NMQVNTX186IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IHZhbHVlLmNvbnN0cnVjdG9yLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmXG4gICAgICAgICAgICAgICAgdmFsdWUgIT09IG51bGwgJiZcbiAgICAgICAgICAgICAgICAhQXJyYXkuaXNBcnJheSh2YWx1ZSkgJiZcbiAgICAgICAgICAgICAgICB2YWx1ZS5jb25zdHJ1Y3RvciAmJlxuICAgICAgICAgICAgICAgIHZhbHVlLmNvbnN0cnVjdG9yLm5hbWUgIT09ICdPYmplY3QnKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNpcmN1bGFyUmVmZXJlbmNlQ2FjaGUuaW5jbHVkZXModmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBgW0NJUkNVTEFSIFJFRkVSRU5DRTogJHt2YWx1ZS5jb25zdHJ1Y3Rvci5uYW1lfV1gO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjaXJjdWxhclJlZmVyZW5jZUNhY2hlLnB1c2godmFsdWUpO1xuICAgICAgICAgICAgICAgIGlmICghc2FmZUNsYXNzTmFtZXMuaGFzKHZhbHVlLmNvbnN0cnVjdG9yLm5hbWUpICYmICF1bnNhZmVDbGFzc05hbWVzLmhhcyh2YWx1ZS5jb25zdHJ1Y3Rvci5uYW1lKSkge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgSlNPTi5zdHJpbmdpZnkodmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2FmZUNsYXNzTmFtZXMuYWRkKHZhbHVlLmNvbnN0cnVjdG9yLm5hbWUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNhdGNoIChfYSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdW5zYWZlQ2xhc3NOYW1lcy5hZGQodmFsdWUuY29uc3RydWN0b3IubmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHNhZmVDbGFzc05hbWVzLmhhcyh2YWx1ZS5jb25zdHJ1Y3Rvci5uYW1lKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgX19DTEFTU19fOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogdmFsdWUuY29uc3RydWN0b3IubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYFske3ZhbHVlLmNvbnN0cnVjdG9yLm5hbWUgfHwgJ05PVCBTRVJJQUxJWkFCTEUnfV1gO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfSkpO1xuICAgICAgICBjaXJjdWxhclJlZmVyZW5jZUNhY2hlLmxlbmd0aCA9IDA7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RGV2dG9vbHMuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/overmind/es/Devtools.js\n");

/***/ }),

/***/ "./node_modules/overmind/es/derived.js":
/*!*********************************************!*\
  !*** ./node_modules/overmind/es/derived.js ***!
  \*********************************************/
/*! exports provided: IS_DERIVED, IS_DERIVED_CONSTRUCTOR, Derived */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IS_DERIVED\", function() { return IS_DERIVED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IS_DERIVED_CONSTRUCTOR\", function() { return IS_DERIVED_CONSTRUCTOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Derived\", function() { return Derived; });\n/* harmony import */ var proxy_state_tree__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! proxy-state-tree */ \"./node_modules/proxy-state-tree/es/index.js\");\n/* harmony import */ var _internalTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internalTypes */ \"./node_modules/overmind/es/internalTypes.js\");\n\n\nconst IS_DERIVED = Symbol('IS_DERIVED');\nconst IS_DERIVED_CONSTRUCTOR = Symbol('IS_DERIVED_CONSTRUCTOR');\nclass Derived {\n    constructor(cb) {\n        this.cb = cb;\n        this.isDirty = true;\n        this.updateCount = 0;\n        const boundEvaluate = this.evaluate.bind(this);\n        if (true) {\n            boundEvaluate.dispose = () => {\n                this.disposeOnMutation();\n            };\n        }\n        boundEvaluate[IS_DERIVED] = true;\n        return boundEvaluate;\n    }\n    runScope(tree, path) {\n        const parent = path.slice(0, path.length - 1).reduce((curr, key) => curr[key], tree.state);\n        return this.cb(parent, tree.state);\n    }\n    evaluate(eventHub, tree, proxyStateTree, path) {\n        if (!this.disposeOnMutation) {\n            this.disposeOnMutation = proxyStateTree.onMutation((_, paths, flushId) => {\n                if (typeof path.reduce((aggr, key) => aggr && aggr[key], proxyStateTree.sourceState) !== 'function') {\n                    this.disposeOnMutation();\n                    return;\n                }\n                if (this.isDirty) {\n                    return;\n                }\n                for (let mutationPath of paths) {\n                    if (this.paths.has(mutationPath)) {\n                        this.isDirty = true;\n                        eventHub.emitAsync(_internalTypes__WEBPACK_IMPORTED_MODULE_1__[\"EventType\"].DERIVED_DIRTY, {\n                            derivedPath: path,\n                            path: mutationPath,\n                            flushId,\n                        });\n                        return;\n                    }\n                }\n            });\n        }\n        // During development we need to move the ownership of whatever state is returned from\n        // the derived to track it correctly. In production we only have one proxifier, so no worries\n        if (this.isDirty || this.previousProxifier !== tree.proxifier) {\n            const getPaths = tree.trackPaths();\n            this.value = this.runScope(tree, path);\n            this.isDirty = false;\n            this.paths = getPaths();\n            if (true) {\n                eventHub.emitAsync(_internalTypes__WEBPACK_IMPORTED_MODULE_1__[\"EventType\"].DERIVED, {\n                    path,\n                    paths: Array.from(this.paths),\n                    updateCount: this.updateCount,\n                    value: this.value,\n                });\n                this.updateCount++;\n            }\n        }\n        if (tree instanceof proxy_state_tree__WEBPACK_IMPORTED_MODULE_0__[\"TrackStateTree\"]) {\n            // If we access a cached value we have to make sure that we move\n            // the tracked paths into the tree looking at it, where\n            // addTrackingPath is for initial tree and \"trackPathListeners\"\n            // is for nested derived\n            for (let path of this.paths) {\n                tree.addTrackingPath(path);\n                tree.trackPathListeners.forEach((cb) => cb(path));\n            }\n        }\n        this.previousProxifier = tree.proxifier;\n        // This value might be a proxy, we need to rescope\n        // it to the current tree looking\n        if (this.value && this.value[proxy_state_tree__WEBPACK_IMPORTED_MODULE_0__[\"IS_PROXY\"]]) {\n            return proxyStateTree.rescope(this.value, tree);\n        }\n        return this.value;\n    }\n}\n//# sourceMappingURL=derived.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL292ZXJtaW5kL2VzL2Rlcml2ZWQuanM/NzA2MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBNkQ7QUFDakI7QUFDckM7QUFDQTtBQUNBO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksSUFBc0M7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLHdEQUFTO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixJQUFzQztBQUN0RCxtQ0FBbUMsd0RBQVM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLCtEQUFjO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyx5REFBUTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvb3Zlcm1pbmQvZXMvZGVyaXZlZC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElTX1BST1hZLCBUcmFja1N0YXRlVHJlZSwgfSBmcm9tICdwcm94eS1zdGF0ZS10cmVlJztcbmltcG9ydCB7IEV2ZW50VHlwZSB9IGZyb20gJy4vaW50ZXJuYWxUeXBlcyc7XG5leHBvcnQgY29uc3QgSVNfREVSSVZFRCA9IFN5bWJvbCgnSVNfREVSSVZFRCcpO1xuZXhwb3J0IGNvbnN0IElTX0RFUklWRURfQ09OU1RSVUNUT1IgPSBTeW1ib2woJ0lTX0RFUklWRURfQ09OU1RSVUNUT1InKTtcbmV4cG9ydCBjbGFzcyBEZXJpdmVkIHtcbiAgICBjb25zdHJ1Y3RvcihjYikge1xuICAgICAgICB0aGlzLmNiID0gY2I7XG4gICAgICAgIHRoaXMuaXNEaXJ0eSA9IHRydWU7XG4gICAgICAgIHRoaXMudXBkYXRlQ291bnQgPSAwO1xuICAgICAgICBjb25zdCBib3VuZEV2YWx1YXRlID0gdGhpcy5ldmFsdWF0ZS5iaW5kKHRoaXMpO1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHtcbiAgICAgICAgICAgIGJvdW5kRXZhbHVhdGUuZGlzcG9zZSA9ICgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmRpc3Bvc2VPbk11dGF0aW9uKCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGJvdW5kRXZhbHVhdGVbSVNfREVSSVZFRF0gPSB0cnVlO1xuICAgICAgICByZXR1cm4gYm91bmRFdmFsdWF0ZTtcbiAgICB9XG4gICAgcnVuU2NvcGUodHJlZSwgcGF0aCkge1xuICAgICAgICBjb25zdCBwYXJlbnQgPSBwYXRoLnNsaWNlKDAsIHBhdGgubGVuZ3RoIC0gMSkucmVkdWNlKChjdXJyLCBrZXkpID0+IGN1cnJba2V5XSwgdHJlZS5zdGF0ZSk7XG4gICAgICAgIHJldHVybiB0aGlzLmNiKHBhcmVudCwgdHJlZS5zdGF0ZSk7XG4gICAgfVxuICAgIGV2YWx1YXRlKGV2ZW50SHViLCB0cmVlLCBwcm94eVN0YXRlVHJlZSwgcGF0aCkge1xuICAgICAgICBpZiAoIXRoaXMuZGlzcG9zZU9uTXV0YXRpb24pIHtcbiAgICAgICAgICAgIHRoaXMuZGlzcG9zZU9uTXV0YXRpb24gPSBwcm94eVN0YXRlVHJlZS5vbk11dGF0aW9uKChfLCBwYXRocywgZmx1c2hJZCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgcGF0aC5yZWR1Y2UoKGFnZ3IsIGtleSkgPT4gYWdnciAmJiBhZ2dyW2tleV0sIHByb3h5U3RhdGVUcmVlLnNvdXJjZVN0YXRlKSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmRpc3Bvc2VPbk11dGF0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuaXNEaXJ0eSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGZvciAobGV0IG11dGF0aW9uUGF0aCBvZiBwYXRocykge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5wYXRocy5oYXMobXV0YXRpb25QYXRoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pc0RpcnR5ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50SHViLmVtaXRBc3luYyhFdmVudFR5cGUuREVSSVZFRF9ESVJUWSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlcml2ZWRQYXRoOiBwYXRoLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdGg6IG11dGF0aW9uUGF0aCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbHVzaElkLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICAvLyBEdXJpbmcgZGV2ZWxvcG1lbnQgd2UgbmVlZCB0byBtb3ZlIHRoZSBvd25lcnNoaXAgb2Ygd2hhdGV2ZXIgc3RhdGUgaXMgcmV0dXJuZWQgZnJvbVxuICAgICAgICAvLyB0aGUgZGVyaXZlZCB0byB0cmFjayBpdCBjb3JyZWN0bHkuIEluIHByb2R1Y3Rpb24gd2Ugb25seSBoYXZlIG9uZSBwcm94aWZpZXIsIHNvIG5vIHdvcnJpZXNcbiAgICAgICAgaWYgKHRoaXMuaXNEaXJ0eSB8fCB0aGlzLnByZXZpb3VzUHJveGlmaWVyICE9PSB0cmVlLnByb3hpZmllcikge1xuICAgICAgICAgICAgY29uc3QgZ2V0UGF0aHMgPSB0cmVlLnRyYWNrUGF0aHMoKTtcbiAgICAgICAgICAgIHRoaXMudmFsdWUgPSB0aGlzLnJ1blNjb3BlKHRyZWUsIHBhdGgpO1xuICAgICAgICAgICAgdGhpcy5pc0RpcnR5ID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLnBhdGhzID0gZ2V0UGF0aHMoKTtcbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jykge1xuICAgICAgICAgICAgICAgIGV2ZW50SHViLmVtaXRBc3luYyhFdmVudFR5cGUuREVSSVZFRCwge1xuICAgICAgICAgICAgICAgICAgICBwYXRoLFxuICAgICAgICAgICAgICAgICAgICBwYXRoczogQXJyYXkuZnJvbSh0aGlzLnBhdGhzKSxcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlQ291bnQ6IHRoaXMudXBkYXRlQ291bnQsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiB0aGlzLnZhbHVlLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlQ291bnQrKztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAodHJlZSBpbnN0YW5jZW9mIFRyYWNrU3RhdGVUcmVlKSB7XG4gICAgICAgICAgICAvLyBJZiB3ZSBhY2Nlc3MgYSBjYWNoZWQgdmFsdWUgd2UgaGF2ZSB0byBtYWtlIHN1cmUgdGhhdCB3ZSBtb3ZlXG4gICAgICAgICAgICAvLyB0aGUgdHJhY2tlZCBwYXRocyBpbnRvIHRoZSB0cmVlIGxvb2tpbmcgYXQgaXQsIHdoZXJlXG4gICAgICAgICAgICAvLyBhZGRUcmFja2luZ1BhdGggaXMgZm9yIGluaXRpYWwgdHJlZSBhbmQgXCJ0cmFja1BhdGhMaXN0ZW5lcnNcIlxuICAgICAgICAgICAgLy8gaXMgZm9yIG5lc3RlZCBkZXJpdmVkXG4gICAgICAgICAgICBmb3IgKGxldCBwYXRoIG9mIHRoaXMucGF0aHMpIHtcbiAgICAgICAgICAgICAgICB0cmVlLmFkZFRyYWNraW5nUGF0aChwYXRoKTtcbiAgICAgICAgICAgICAgICB0cmVlLnRyYWNrUGF0aExpc3RlbmVycy5mb3JFYWNoKChjYikgPT4gY2IocGF0aCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMucHJldmlvdXNQcm94aWZpZXIgPSB0cmVlLnByb3hpZmllcjtcbiAgICAgICAgLy8gVGhpcyB2YWx1ZSBtaWdodCBiZSBhIHByb3h5LCB3ZSBuZWVkIHRvIHJlc2NvcGVcbiAgICAgICAgLy8gaXQgdG8gdGhlIGN1cnJlbnQgdHJlZSBsb29raW5nXG4gICAgICAgIGlmICh0aGlzLnZhbHVlICYmIHRoaXMudmFsdWVbSVNfUFJPWFldKSB7XG4gICAgICAgICAgICByZXR1cm4gcHJveHlTdGF0ZVRyZWUucmVzY29wZSh0aGlzLnZhbHVlLCB0cmVlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy52YWx1ZTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZXJpdmVkLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/overmind/es/derived.js\n");

/***/ }),

/***/ "./node_modules/overmind/es/index.js":
/*!*******************************************!*\
  !*** ./node_modules/overmind/es/index.js ***!
  \*******************************************/
/*! exports provided: EventType, createOperator, createMutationOperator, MODE_DEFAULT, MODE_TEST, MODE_SSR, SERIALIZE, rehydrate, statemachine, derived, json, createOvermindSSR, createOvermindMock, createOvermind, Overmind, pipe, forEach, parallel, map, noop, filter, action, mutate, run, catchError, tryCatch, fork, when, wait, debounce, throttle, waitUntil */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"derived\", function() { return derived; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createOvermindSSR\", function() { return createOvermindSSR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createOvermindMock\", function() { return createOvermindMock; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createOvermind\", function() { return createOvermind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Overmind\", function() { return Overmind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pipe\", function() { return pipe; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"forEach\", function() { return forEach; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parallel\", function() { return parallel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"map\", function() { return map; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"noop\", function() { return noop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"filter\", function() { return filter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"action\", function() { return action; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mutate\", function() { return mutate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"run\", function() { return run; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"catchError\", function() { return catchError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tryCatch\", function() { return tryCatch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fork\", function() { return fork; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"when\", function() { return when; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"wait\", function() { return wait; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"debounce\", function() { return debounce; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"throttle\", function() { return throttle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"waitUntil\", function() { return waitUntil; });\n/* harmony import */ var betsy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! betsy */ \"./node_modules/betsy/es/index.js\");\n/* harmony import */ var is_plain_obj__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! is-plain-obj */ \"./node_modules/is-plain-obj/index.js\");\n/* harmony import */ var is_plain_obj__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(is_plain_obj__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var proxy_state_tree__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! proxy-state-tree */ \"./node_modules/proxy-state-tree/es/index.js\");\n/* harmony import */ var _derived__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./derived */ \"./node_modules/overmind/es/derived.js\");\n/* harmony import */ var _Devtools__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Devtools */ \"./node_modules/overmind/es/Devtools.js\");\n/* harmony import */ var _internalTypes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./internalTypes */ \"./node_modules/overmind/es/internalTypes.js\");\n/* harmony import */ var _operator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./operator */ \"./node_modules/overmind/es/operator.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createOperator\", function() { return _operator__WEBPACK_IMPORTED_MODULE_6__[\"createOperator\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createMutationOperator\", function() { return _operator__WEBPACK_IMPORTED_MODULE_6__[\"createMutationOperator\"]; });\n\n/* harmony import */ var _proxyfyEffects__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./proxyfyEffects */ \"./node_modules/overmind/es/proxyfyEffects.js\");\n/* harmony import */ var _rehydrate__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./rehydrate */ \"./node_modules/overmind/es/rehydrate.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils */ \"./node_modules/overmind/es/utils.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./types */ \"./node_modules/overmind/es/types.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"EventType\", function() { return _types__WEBPACK_IMPORTED_MODULE_10__[\"EventType\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MODE_DEFAULT\", function() { return _utils__WEBPACK_IMPORTED_MODULE_9__[\"MODE_DEFAULT\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MODE_TEST\", function() { return _utils__WEBPACK_IMPORTED_MODULE_9__[\"MODE_TEST\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MODE_SSR\", function() { return _utils__WEBPACK_IMPORTED_MODULE_9__[\"MODE_SSR\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SERIALIZE\", function() { return _rehydrate__WEBPACK_IMPORTED_MODULE_8__[\"SERIALIZE\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"rehydrate\", function() { return _rehydrate__WEBPACK_IMPORTED_MODULE_8__[\"rehydrate\"]; });\n\n/* harmony import */ var _statemachine__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./statemachine */ \"./node_modules/overmind/es/statemachine.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"statemachine\", function() { return _statemachine__WEBPACK_IMPORTED_MODULE_11__[\"statemachine\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"json\", function() { return _utils__WEBPACK_IMPORTED_MODULE_9__[\"json\"]; });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst derived = (cb) => {\n    cb[_derived__WEBPACK_IMPORTED_MODULE_3__[\"IS_DERIVED_CONSTRUCTOR\"]] = true;\n    return cb;\n};\n\nfunction createOvermindSSR(config) {\n    const ssr = new Overmind(config, {\n        devtools: false,\n    }, {\n        mode: _utils__WEBPACK_IMPORTED_MODULE_9__[\"MODE_SSR\"],\n    });\n    const mutationTree = ssr.proxyStateTree.getMutationTree();\n    ssr.state = mutationTree.state;\n    ssr.hydrate = () => {\n        return mutationTree.flush().mutations;\n    };\n    return ssr;\n}\nfunction createOvermindMock(config, mockedEffects) {\n    const mock = new Overmind(Object.assign({}, config, {\n        state: Object(_utils__WEBPACK_IMPORTED_MODULE_9__[\"deepCopy\"])(config.state),\n    }), {\n        devtools: false,\n    }, {\n        mode: _utils__WEBPACK_IMPORTED_MODULE_9__[\"MODE_TEST\"],\n        options: {\n            effectsCallback: (effect) => {\n                const mockedEffect = (effect.name\n                    ? effect.name.split('.')\n                    : []).reduce((aggr, key) => (aggr ? aggr[key] : aggr), mockedEffects);\n                if (!mockedEffect || (mockedEffect && !mockedEffect[effect.method])) {\n                    throw new Error(`The effect \"${effect.name}\" with method ${effect.method} has not been mocked`);\n                }\n                return mockedEffect[effect.method](...effect.args);\n            },\n        },\n    });\n    const action = mock.createAction('onInitialize', config.onInitialize);\n    mock.onInitialize = () => action(mock);\n    mock.mutations = [];\n    return mock;\n}\nfunction createOvermind(config, options) {\n    return new Overmind(config, options, { mode: _utils__WEBPACK_IMPORTED_MODULE_9__[\"MODE_DEFAULT\"] });\n}\nconst hotReloadingCache = {};\n// We do not use IConfig<Config> directly to type the class in order to avoid\n// the 'import(...)' function to be used in exported types.\nclass Overmind {\n    constructor(configuration, options = {}, mode = {\n        mode: _utils__WEBPACK_IMPORTED_MODULE_9__[\"MODE_DEFAULT\"],\n    }) {\n        this.actionReferences = {};\n        this.nextExecutionId = 0;\n        this.reydrateMutationsForHotReloading = [];\n        this.isStrict = false;\n        this.reaction = (stateCallback, updateCallback, options = {}) => {\n            let disposer;\n            if (options.nested) {\n                const value = stateCallback(this.state);\n                if (!value || !value[proxy_state_tree__WEBPACK_IMPORTED_MODULE_2__[\"IS_PROXY\"]]) {\n                    throw new Error('You have to return an object or array from the Overmind state when using a \"nested\" reaction');\n                }\n                const path = value[proxy_state_tree__WEBPACK_IMPORTED_MODULE_2__[\"PATH\"]];\n                disposer = this.addFlushListener((mutations) => {\n                    mutations.forEach((mutation) => {\n                        if (mutation.path.startsWith(path)) {\n                            updateCallback(path ? path.split(this.delimiter).reduce((aggr, key) => aggr[key], this.state) : this.state);\n                        }\n                    });\n                });\n            }\n            else {\n                const tree = this.proxyStateTree.getTrackStateTree();\n                let returnValue;\n                const updateReaction = () => {\n                    tree.trackScope(() => (returnValue = stateCallback(tree.state)), () => {\n                        updateReaction();\n                        updateCallback(returnValue);\n                    });\n                };\n                updateReaction();\n                disposer = () => {\n                    tree.dispose();\n                };\n            }\n            if (options.immediate) {\n                updateCallback(stateCallback(this.state));\n            }\n            return disposer;\n        };\n        this.addMutationListener = (cb) => {\n            return this.proxyStateTree.onMutation(cb);\n        };\n        this.addFlushListener = (cb) => {\n            return this.proxyStateTree.onFlush(cb);\n        };\n        const name = options.name || 'OvermindApp';\n        const devEnv = options.devEnv || 'development';\n        this.delimiter = options.delimiter || '.';\n        this.isStrict = Boolean(options.strict);\n        if (( false || \"development\" === devEnv) &&\n            mode.mode === _utils__WEBPACK_IMPORTED_MODULE_9__[\"MODE_DEFAULT\"] &&\n            options.hotReloading !== false &&\n            !(process && process.title && process.title.includes('node'))) {\n            if (hotReloadingCache[name]) {\n                return hotReloadingCache[name].reconfigure(configuration);\n            }\n            else {\n                hotReloadingCache[name] = this;\n            }\n        }\n        /*\n          Set up an eventHub to trigger information from derived, computed and reactions\n        */\n        const eventHub = mode.mode === _utils__WEBPACK_IMPORTED_MODULE_9__[\"MODE_SSR\"]\n            ? new _utils__WEBPACK_IMPORTED_MODULE_9__[\"MockedEventEmitter\"]()\n            : new betsy__WEBPACK_IMPORTED_MODULE_0__[\"EventEmitter\"]();\n        /*\n          Create the proxy state tree instance with the state and a wrapper to expose\n          the eventHub\n        */\n        const proxyStateTree = this.createProxyStateTree(configuration, eventHub, mode.mode === _utils__WEBPACK_IMPORTED_MODULE_9__[\"MODE_TEST\"] || \"development\" === devEnv);\n        this.originalConfiguration = configuration;\n        this.state = proxyStateTree.state;\n        this.effects = configuration.effects || {};\n        this.proxyStateTree = proxyStateTree;\n        this.eventHub = eventHub;\n        this.mode = mode;\n        /*\n          Expose the created actions\n        */\n        this.actions = this.getActions(configuration.actions);\n        if (mode.mode === _utils__WEBPACK_IMPORTED_MODULE_9__[\"MODE_SSR\"]) {\n            return;\n        }\n        if (\"development\" === devEnv &&\n            mode.mode === _utils__WEBPACK_IMPORTED_MODULE_9__[\"MODE_DEFAULT\"] &&\n            typeof window !== 'undefined') {\n            let warning = 'OVERMIND: You are running in DEVELOPMENT mode.';\n            if (options.logProxies !== true) {\n                const originalConsoleLog = console.log;\n                console.log = (...args) => originalConsoleLog.apply(console, args.map((arg) => (arg && arg[proxy_state_tree__WEBPACK_IMPORTED_MODULE_2__[\"IS_PROXY\"]] ? arg[proxy_state_tree__WEBPACK_IMPORTED_MODULE_2__[\"VALUE\"]] : arg)));\n                warning +=\n                    '\\n\\n - To improve debugging experience \"console.log\" will NOT log proxies from Overmind, but the actual value. Please see docs to turn off this behaviour';\n            }\n            if (options.devtools ||\n                (typeof location !== 'undefined' &&\n                    location.hostname === 'localhost' &&\n                    options.devtools !== false)) {\n                const host = options.devtools === true ? 'localhost:3031' : options.devtools;\n                const name = options.name\n                    ? options.name\n                    : typeof document === 'undefined'\n                        ? 'NoName'\n                        : document.title || 'NoName';\n                this.initializeDevtools(host, name, eventHub, proxyStateTree.sourceState, configuration.actions);\n            }\n            else if (options.devtools !== false) {\n                warning +=\n                    '\\n\\n - You are not running on localhost. You will have to manually define the devtools option to connect';\n            }\n            if (!_utils__WEBPACK_IMPORTED_MODULE_9__[\"IS_TEST\"]) {\n                console.warn(warning);\n            }\n        }\n        if (false) {}\n        else if (mode.mode === _utils__WEBPACK_IMPORTED_MODULE_9__[\"MODE_DEFAULT\"] || mode.mode === _utils__WEBPACK_IMPORTED_MODULE_9__[\"MODE_TEST\"]) {\n            if ( false || (this.devtools && options.hotReloading !== false)) {\n                eventHub.on(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].MUTATIONS, (execution) => {\n                    this.reydrateMutationsForHotReloading = this.reydrateMutationsForHotReloading.concat(execution.mutations);\n                });\n            }\n            eventHub.on(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].OPERATOR_ASYNC, (execution) => {\n                if (!execution.parentExecution ||\n                    !execution.parentExecution.isRunning) {\n                    const flushData = execution.flush(true);\n                    if (this.devtools && flushData.mutations.length) {\n                        this.devtools.send({\n                            type: 'flush',\n                            data: Object.assign(Object.assign({}, execution), flushData),\n                        });\n                    }\n                }\n            });\n            eventHub.on(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].ACTION_END, (execution) => {\n                if (!execution.parentExecution ||\n                    !execution.parentExecution.isRunning) {\n                    const flushData = execution.flush();\n                    if (this.devtools && flushData.mutations.length) {\n                        this.devtools.send({\n                            type: 'flush',\n                            data: Object.assign(Object.assign({}, execution), flushData),\n                        });\n                    }\n                }\n            });\n        }\n        if (mode.mode === _utils__WEBPACK_IMPORTED_MODULE_9__[\"MODE_DEFAULT\"] && configuration.onInitialize) {\n            const onInitialize = this.createAction('onInitialize', configuration.onInitialize);\n            this.initialized = Promise.resolve(onInitialize(this));\n        }\n        else {\n            this.initialized = Promise.resolve(null);\n        }\n    }\n    createProxyStateTree(configuration, eventHub, devmode) {\n        const proxyStateTree = new proxy_state_tree__WEBPACK_IMPORTED_MODULE_2__[\"ProxyStateTree\"](this.getState(configuration), {\n            devmode,\n            delimiter: this.delimiter,\n            onSetFunction: (tree, path, target, prop, func) => {\n                if (func[_derived__WEBPACK_IMPORTED_MODULE_3__[\"IS_DERIVED_CONSTRUCTOR\"]]) {\n                    return new _derived__WEBPACK_IMPORTED_MODULE_3__[\"Derived\"](func);\n                }\n                return func;\n            },\n            onGetFunction: (tree, path, target, prop) => {\n                let func = target[prop];\n                if (func[_derived__WEBPACK_IMPORTED_MODULE_3__[\"IS_DERIVED\"]]) {\n                    return func(eventHub, tree, proxyStateTree, path.split(this.delimiter));\n                }\n                if (func[_derived__WEBPACK_IMPORTED_MODULE_3__[\"IS_DERIVED_CONSTRUCTOR\"]]) {\n                    const derived = new _derived__WEBPACK_IMPORTED_MODULE_3__[\"Derived\"](func);\n                    target[prop] = derived;\n                    return derived(eventHub, tree, proxyStateTree, path.split(this.delimiter));\n                }\n                return func;\n            },\n            onGetter: devmode\n                ? (path, value) => {\n                    this.eventHub.emitAsync(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].GETTER, {\n                        path,\n                        value\n                    });\n                }\n                : undefined,\n        });\n        return proxyStateTree;\n    }\n    createExecution(name, action, parentExecution) {\n        const namespacePath = name.split('.');\n        namespacePath.pop();\n        if (false) {}\n        const mutationTrees = [];\n        const execution = {\n            [_utils__WEBPACK_IMPORTED_MODULE_9__[\"EXECUTION\"]]: true,\n            namespacePath,\n            actionId: name,\n            executionId: this.nextExecutionId++,\n            actionName: name,\n            operatorId: 0,\n            isRunning: true,\n            parentExecution,\n            path: [],\n            emit: this.eventHub.emit.bind(this.eventHub),\n            send: this.devtools ? this.devtools.send.bind(this.devtools) : () => { },\n            trackEffects: this.trackEffects.bind(this, this.effects),\n            getNextOperatorId: (() => {\n                let currentOperatorId = 0;\n                return () => ++currentOperatorId;\n            })(),\n            flush: parentExecution\n                ? parentExecution.flush\n                : (isAsync) => {\n                    return this.proxyStateTree.flush(mutationTrees, isAsync);\n                },\n            getMutationTree: parentExecution\n                ? parentExecution.getMutationTree\n                : () => {\n                    const mutationTree = this.proxyStateTree.getMutationTree();\n                    mutationTrees.push(mutationTree);\n                    if (this.mode.mode === _utils__WEBPACK_IMPORTED_MODULE_9__[\"MODE_TEST\"]) {\n                        mutationTree.onMutation((mutation) => {\n                            this.addExecutionMutation(mutation);\n                        });\n                    }\n                    return mutationTree;\n                },\n            getTrackStateTree: () => {\n                return this.proxyStateTree.getTrackStateTree();\n            },\n            onFlush: (cb) => {\n                return this.proxyStateTree.onFlush(cb);\n            },\n            scopeValue: (value, tree) => {\n                return this.scopeValue(value, tree);\n            },\n        };\n        return execution;\n    }\n    createContext(execution, tree) {\n        return {\n            state: tree.state,\n            actions: Object(_utils__WEBPACK_IMPORTED_MODULE_9__[\"createActionsProxy\"])(this.actions, (action) => {\n                return (value) => action(value, execution.isRunning ? execution : null);\n            }),\n            execution,\n            proxyStateTree: this.proxyStateTree,\n            effects: this.trackEffects(this.effects, execution),\n        };\n    }\n    scopeValue(value, tree) {\n        if (!value) {\n            return value;\n        }\n        if (value[proxy_state_tree__WEBPACK_IMPORTED_MODULE_2__[\"IS_PROXY\"]]) {\n            return this.proxyStateTree.rescope(value, tree);\n        }\n        else if (is_plain_obj__WEBPACK_IMPORTED_MODULE_1___default()(value)) {\n            return Object.assign({}, ...Object.keys(value).map((key) => ({\n                [key]: this.proxyStateTree.rescope(value[key], tree),\n            })));\n        }\n        else {\n            return value;\n        }\n    }\n    addExecutionMutation(mutation) {\n        ;\n        this.mutations.push(mutation);\n    }\n    createAction(name, originalAction) {\n        this.actionReferences[name] = originalAction;\n        const actionFunc = (value, boundExecution) => {\n            const action = this.actionReferences[name];\n            // Developer might unintentionally pass more arguments, so have to ensure\n            // that it is an actual execution\n            boundExecution =\n                boundExecution && boundExecution[_utils__WEBPACK_IMPORTED_MODULE_9__[\"EXECUTION\"]] ? boundExecution : undefined;\n            if ( false || action[_utils__WEBPACK_IMPORTED_MODULE_9__[\"IS_OPERATOR\"]]) {\n                const execution = this.createExecution(name, action, boundExecution);\n                this.eventHub.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].ACTION_START, Object.assign(Object.assign({}, execution), { value }));\n                if (action[_utils__WEBPACK_IMPORTED_MODULE_9__[\"IS_OPERATOR\"]]) {\n                    return new Promise((resolve, reject) => {\n                        action(null, Object.assign(Object.assign({}, this.createContext(execution, this.proxyStateTree)), { value }), (err, finalContext) => {\n                            execution.isRunning = false;\n                            finalContext &&\n                                this.eventHub.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].ACTION_END, Object.assign(Object.assign({}, finalContext.execution), { operatorId: finalContext.execution.operatorId - 1 }));\n                            if (err)\n                                reject(err);\n                            else {\n                                resolve(this.mode.mode === _utils__WEBPACK_IMPORTED_MODULE_9__[\"MODE_TEST\"]\n                                    ? finalContext.execution\n                                    : undefined);\n                            }\n                        });\n                    });\n                }\n                else {\n                    const mutationTree = execution.getMutationTree();\n                    if (this.isStrict) {\n                        mutationTree.blockMutations();\n                    }\n                    const returnValue = action(this.createContext(execution, mutationTree), value);\n                    this.eventHub.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].ACTION_END, execution);\n                    return returnValue;\n                }\n            }\n            else {\n                const execution = Object.assign(Object.assign({}, this.createExecution(name, action, boundExecution)), { operatorId: 0, type: 'action' });\n                this.eventHub.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].ACTION_START, Object.assign(Object.assign({}, execution), { value }));\n                this.eventHub.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].OPERATOR_START, execution);\n                const mutationTree = execution.getMutationTree();\n                if (this.isStrict) {\n                    mutationTree.blockMutations();\n                }\n                mutationTree.onMutation((mutation) => {\n                    this.eventHub.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].MUTATIONS, Object.assign(Object.assign({}, execution), { mutations: [mutation] }));\n                });\n                const scopedValue = this.scopeValue(value, mutationTree);\n                const context = this.createContext(execution, mutationTree);\n                try {\n                    let result = action(context, scopedValue);\n                    if (Object(_utils__WEBPACK_IMPORTED_MODULE_9__[\"isPromise\"])(result)) {\n                        this.eventHub.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].OPERATOR_ASYNC, execution);\n                        result = result\n                            .then((promiseResult) => {\n                            execution.isRunning = false;\n                            if (!boundExecution) {\n                                mutationTree.dispose();\n                            }\n                            this.eventHub.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].OPERATOR_END, Object.assign(Object.assign({}, execution), { isAsync: true, result: undefined }));\n                            this.eventHub.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].ACTION_END, execution);\n                            return promiseResult;\n                        })\n                            .catch((error) => {\n                            execution.isRunning = false;\n                            if (!boundExecution) {\n                                mutationTree.dispose();\n                            }\n                            this.eventHub.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].OPERATOR_END, Object.assign(Object.assign({}, execution), { isAsync: true, result: undefined, error: error.message }));\n                            this.eventHub.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].ACTION_END, execution);\n                            throw error;\n                        });\n                    }\n                    else {\n                        execution.isRunning = false;\n                        if (!boundExecution) {\n                            mutationTree.dispose();\n                        }\n                        this.eventHub.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].OPERATOR_END, Object.assign(Object.assign({}, execution), { isAsync: false, result: undefined }));\n                        this.eventHub.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].ACTION_END, execution);\n                    }\n                    let pendingFlush;\n                    mutationTree.onMutation((mutation) => {\n                        if (pendingFlush) {\n                            clearTimeout(pendingFlush);\n                        }\n                        if (this.mode.mode === _utils__WEBPACK_IMPORTED_MODULE_9__[\"MODE_TEST\"]) {\n                            this.addExecutionMutation(mutation);\n                        }\n                        pendingFlush = setTimeout(() => {\n                            pendingFlush = null;\n                            const flushData = execution.flush(true);\n                            if (this.devtools && flushData.mutations.length) {\n                                this.devtools.send({\n                                    type: 'flush',\n                                    data: Object.assign(Object.assign(Object.assign({}, execution), flushData), { mutations: flushData.mutations }),\n                                });\n                            }\n                        });\n                    });\n                    return result;\n                }\n                catch (err) {\n                    this.eventHub.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].OPERATOR_END, Object.assign(Object.assign({}, execution), { isAsync: false, result: undefined, error: err.message }));\n                    this.eventHub.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].ACTION_END, execution);\n                    throw err;\n                }\n            }\n        };\n        return actionFunc;\n    }\n    trackEffects(effects = {}, execution) {\n        if (false) {}\n        return Object(_proxyfyEffects__WEBPACK_IMPORTED_MODULE_7__[\"proxifyEffects\"])(this.effects, (effect) => {\n            let result;\n            try {\n                if (this.mode.mode === _utils__WEBPACK_IMPORTED_MODULE_9__[\"MODE_TEST\"]) {\n                    const mode = this.mode;\n                    result = mode.options.effectsCallback(effect);\n                }\n                else {\n                    this.eventHub.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].EFFECT, Object.assign(Object.assign(Object.assign({}, execution), effect), { args: effect.args, isPending: true, error: false }));\n                    result = effect.func.apply(this, effect.args);\n                }\n            }\n            catch (error) {\n                // eslint-disable-next-line standard/no-callback-literal\n                this.eventHub.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].EFFECT, Object.assign(Object.assign(Object.assign({}, execution), effect), { args: effect.args, isPending: false, error: error.message }));\n                throw error;\n            }\n            if (Object(_utils__WEBPACK_IMPORTED_MODULE_9__[\"isPromise\"])(result)) {\n                // eslint-disable-next-line standard/no-callback-literal\n                this.eventHub.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].EFFECT, Object.assign(Object.assign(Object.assign({}, execution), effect), { args: effect.args, isPending: true, error: false }));\n                return result\n                    .then((promisedResult) => {\n                    // eslint-disable-next-line standard/no-callback-literal\n                    this.eventHub.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].EFFECT, Object.assign(Object.assign(Object.assign({}, execution), effect), { args: effect.args, result: promisedResult, isPending: false, error: false }));\n                    return promisedResult;\n                })\n                    .catch((error) => {\n                    this.eventHub.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].EFFECT, Object.assign(Object.assign(Object.assign({}, execution), effect), { args: effect.args, isPending: false, error: error && error.message }));\n                    throw error;\n                });\n            }\n            // eslint-disable-next-line standard/no-callback-literal\n            this.eventHub.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].EFFECT, Object.assign(Object.assign(Object.assign({}, execution), effect), { args: effect.args, result: result, isPending: false, error: false }));\n            return result;\n        });\n    }\n    initializeDevtools(host, name, eventHub, initialState, actions) {\n        if (false)\n            {}\n        const devtools = new _Devtools__WEBPACK_IMPORTED_MODULE_4__[\"Devtools\"](name);\n        devtools.connect(host, (message) => {\n            switch (message.type) {\n                case 'refresh':\n                    location.reload(true);\n                    break;\n                case 'executeAction':\n                    const action = message.data.name\n                        .split('.')\n                        .reduce((aggr, key) => aggr[key], this.actions);\n                    message.data.payload\n                        ? action(JSON.parse(message.data.payload))\n                        : action();\n                    break;\n                case 'mutation':\n                    const tree = this.proxyStateTree.getMutationTree();\n                    const path = message.data.path.slice();\n                    const value = JSON.parse(`{ \"value\": ${message.data.value} }`).value;\n                    const key = path.pop();\n                    const state = path.reduce((aggr, key) => aggr[key], tree.state);\n                    state[key] = value;\n                    tree.flush(true);\n                    tree.dispose();\n                    this.devtools.send({\n                        type: 'state',\n                        data: {\n                            path: message.data.path,\n                            value,\n                        },\n                    });\n            }\n        });\n        for (let type in _internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"]) {\n            eventHub.on(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"][type], ((eventType) => (data) => {\n                devtools.send({\n                    type: _internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"][type],\n                    data,\n                });\n                if (eventType === _internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].MUTATIONS) {\n                    // We want to trigger property access when setting objects and arrays, as any derived set would\n                    // then trigger and update the devtools\n                    data.mutations.forEach((mutation) => {\n                        const value = mutation.path.split(this.delimiter).reduce((aggr, key) => aggr[key], this.proxyStateTree.state);\n                        if (is_plain_obj__WEBPACK_IMPORTED_MODULE_1___default()(value)) {\n                            Object.keys(value).forEach((key) => value[key]);\n                        }\n                        else if (Array.isArray(value)) {\n                            value.forEach((item) => {\n                                if (is_plain_obj__WEBPACK_IMPORTED_MODULE_1___default()(item)) {\n                                    Object.keys(item).forEach((key) => item[key]);\n                                }\n                            });\n                        }\n                    });\n                }\n                // Access the derived which will trigger calculation and devtools\n                if (eventType === _internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"].DERIVED_DIRTY) {\n                    data.derivedPath\n                        .reduce((aggr, key) => aggr[key], this.proxyStateTree.state);\n                }\n            })(_internalTypes__WEBPACK_IMPORTED_MODULE_5__[\"EventType\"][type]));\n        }\n        devtools.send({\n            type: 'init',\n            data: {\n                state: this.proxyStateTree.state,\n                actions: Object(_utils__WEBPACK_IMPORTED_MODULE_9__[\"getActionPaths\"])(actions),\n                delimiter: this.delimiter\n            },\n        });\n        this.devtools = devtools;\n    }\n    getState(configuration) {\n        let state = {};\n        if (configuration.state) {\n            state = Object(_utils__WEBPACK_IMPORTED_MODULE_9__[\"processState\"])(configuration.state);\n        }\n        return state;\n    }\n    getActions(actions = {}, path = []) {\n        return Object.keys(actions).reduce((aggr, name) => {\n            if (typeof actions[name] === 'function') {\n                const action = this.createAction(path.concat(name).join('.'), actions[name]);\n                action.displayName = path.concat(name).join('.');\n                return Object.assign(aggr, {\n                    [name]: action,\n                });\n            }\n            return Object.assign(aggr, {\n                [name]: this.getActions(actions[name], path.concat(name)),\n            });\n        }, {});\n    }\n    /*\n      Related to hot reloading we update the existing action references and add any new\n      actions.\n    */\n    updateActions(actions = {}, path = []) {\n        Object.keys(actions).forEach((name) => {\n            if (typeof actions[name] === 'function') {\n                const actionName = path.concat(name).join('.');\n                if (this.actionReferences[actionName]) {\n                    this.actionReferences[actionName] = actions[name];\n                }\n                else {\n                    const target = path.reduce((aggr, key) => {\n                        if (!aggr[key]) {\n                            aggr[key] = {};\n                        }\n                        return aggr[key];\n                    }, this.actions);\n                    target[name] = this.createAction(actionName, actions[name]);\n                    target[name].displayName = path.concat(name).join('.');\n                }\n            }\n            else {\n                this.updateActions(actions[name], path.concat(name));\n            }\n        }, {});\n    }\n    getTrackStateTree() {\n        return this.proxyStateTree.getTrackStateTree();\n    }\n    getMutationTree() {\n        return this.proxyStateTree.getMutationTree();\n    }\n    reconfigure(configuration) {\n        const changeMutations = Object(_utils__WEBPACK_IMPORTED_MODULE_9__[\"getChangeMutations\"])(this.originalConfiguration.state, configuration.state || {});\n        this.updateActions(configuration.actions);\n        this.effects = configuration.effects || {};\n        const mutationTree = this.proxyStateTree.getMutationTree();\n        // We change the state to match the new structure\n        Object(_rehydrate__WEBPACK_IMPORTED_MODULE_8__[\"rehydrate\"])(mutationTree.state, changeMutations);\n        // We run any mutations ran during the session, it might fail though\n        // as the state structure might have changed, but no worries we just\n        // ignore that\n        this.reydrateMutationsForHotReloading.forEach((mutation) => {\n            try {\n                Object(_rehydrate__WEBPACK_IMPORTED_MODULE_8__[\"rehydrate\"])(mutationTree.state, [mutation]);\n            }\n            catch (error) {\n                // No worries, structure changed and we do not want to mutate anyways\n            }\n        });\n        mutationTree.flush();\n        mutationTree.dispose();\n        if (this.devtools) {\n            this.devtools.send({\n                type: 're_init',\n                data: {\n                    state: this.state,\n                    actions: Object(_utils__WEBPACK_IMPORTED_MODULE_9__[\"getActionPaths\"])(configuration.actions),\n                },\n            });\n        }\n        return this;\n    }\n}\nfunction pipe(...operators) {\n    const instance = (err, context, next, final = next) => {\n        if (err)\n            next(err, context);\n        else {\n            let operatorIndex = 0;\n            const run = (operatorErr, operatorContext) => {\n                const operator = operators[operatorIndex++];\n                try {\n                    ;\n                    (operator || next)(operatorErr, operatorContext, run, final);\n                }\n                catch (operatorError) {\n                    ;\n                    (operator || next)(operatorError, operatorContext, run, final);\n                }\n            };\n            run(null, context);\n        }\n    };\n    instance[_utils__WEBPACK_IMPORTED_MODULE_9__[\"IS_OPERATOR\"]] = true;\n    return instance;\n}\n/*\n  OPERATORS\n*/\nfunction forEach(forEachItemOperator) {\n    const instance = (err, context, next) => {\n        if (err)\n            next(err, context);\n        else {\n            let array = context.value;\n            let evaluatingCount = array.length;\n            let lastContext;\n            let hasErrored = false;\n            const evaluate = (err) => {\n                if (hasErrored) {\n                    return;\n                }\n                if (err) {\n                    hasErrored = true;\n                    return next(err);\n                }\n                evaluatingCount--;\n                if (!evaluatingCount) {\n                    Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"operatorStopped\"])(context, context.value);\n                    next(null, Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"createContext\"])(lastContext, context.value, lastContext.execution.path &&\n                        lastContext.execution.path.slice(0, lastContext.execution.path.length - 1)));\n                }\n            };\n            Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"operatorStarted\"])('forEach', '', context);\n            if (array.length) {\n                array.forEach((value, index) => {\n                    lastContext = Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"createContext\"])(lastContext || context, value, context.execution.path &&\n                        context.execution.path.concat(String(index)));\n                    const nextWithPath = Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"createNextPath\"])(evaluate);\n                    // @ts-ignore\n                    forEachItemOperator(null, lastContext, nextWithPath);\n                });\n            }\n            else {\n                Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"operatorStopped\"])(context, context.value);\n                next(null, Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"createContext\"])(context, context.value));\n            }\n        }\n    };\n    instance[_utils__WEBPACK_IMPORTED_MODULE_9__[\"IS_OPERATOR\"]] = true;\n    return instance;\n}\nfunction parallel(...operators) {\n    const instance = (err, context, next) => {\n        if (err)\n            next(err, context);\n        else {\n            let evaluatingCount = operators.length;\n            let lastContext;\n            let hasErrored = false;\n            const evaluate = (err) => {\n                if (hasErrored) {\n                    return;\n                }\n                if (err) {\n                    hasErrored = true;\n                    return next(err, lastContext);\n                }\n                evaluatingCount--;\n                if (!evaluatingCount) {\n                    Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"operatorStopped\"])(context, context.value);\n                    next(null, Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"createContext\"])(lastContext, context.value, lastContext.execution.path &&\n                        lastContext.execution.path.slice(0, lastContext.execution.path.length - 1)));\n                }\n            };\n            Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"operatorStarted\"])('parallel', '', context);\n            operators.forEach((operator, index) => {\n                lastContext = Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"createContext\"])(lastContext || context, context.value, context.execution.path && context.execution.path.concat(String(index)));\n                const nextWithPath = Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"createNextPath\"])(evaluate);\n                // @ts-ignore\n                operator(null, lastContext, nextWithPath);\n            });\n        }\n    };\n    instance[_utils__WEBPACK_IMPORTED_MODULE_9__[\"IS_OPERATOR\"]] = true;\n    return instance;\n}\nfunction map(operation) {\n    return Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"createOperator\"])('map', Object(_utils__WEBPACK_IMPORTED_MODULE_9__[\"getFunctionName\"])(operation), (err, context, value, next) => {\n        if (err)\n            next(err, value);\n        else\n            next(null, operation(context, value));\n    });\n}\nfunction noop() {\n    return Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"createOperator\"])('noop', '', (err, context, value, next) => {\n        if (err)\n            next(err, value);\n        else\n            next(null, value);\n    });\n}\nfunction filter(operation) {\n    return Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"createOperator\"])('filter', Object(_utils__WEBPACK_IMPORTED_MODULE_9__[\"getFunctionName\"])(operation), (err, context, value, next, final) => {\n        if (err)\n            next(err, value);\n        else if (operation(context, value))\n            next(null, value);\n        else\n            final(null, value);\n    });\n}\nlet hasShownActionDeprecation = false;\nfunction action(operation) {\n    if (!hasShownActionDeprecation) {\n        console.warn(`DEPRECATION - The action operator is deprecated in favor of \"mutate\". The reason is to avoid confusion between actions and operators. Check out action \"${Object(_utils__WEBPACK_IMPORTED_MODULE_9__[\"getFunctionName\"])(operation)}\"`);\n        hasShownActionDeprecation = true;\n    }\n    return Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"createMutationOperator\"])('action', Object(_utils__WEBPACK_IMPORTED_MODULE_9__[\"getFunctionName\"])(operation), (err, context, value, next) => {\n        if (err)\n            next(err, value);\n        else {\n            const result = operation(context, value);\n            if (Object(_utils__WEBPACK_IMPORTED_MODULE_9__[\"isPromise\"])(result)) {\n                next(null, result.then(() => value));\n            }\n            else {\n                next(null, value);\n            }\n        }\n    });\n}\nfunction mutate(operation) {\n    return Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"createMutationOperator\"])('mutate', Object(_utils__WEBPACK_IMPORTED_MODULE_9__[\"getFunctionName\"])(operation), (err, context, value, next) => {\n        if (err)\n            next(err, value);\n        else {\n            const result = operation(context, value);\n            if (Object(_utils__WEBPACK_IMPORTED_MODULE_9__[\"isPromise\"])(result)) {\n                next(null, result.then(() => value));\n            }\n            else {\n                next(null, value);\n            }\n        }\n    });\n}\nfunction run(operation) {\n    return Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"createOperator\"])('run', Object(_utils__WEBPACK_IMPORTED_MODULE_9__[\"getFunctionName\"])(operation), (err, context, value, next) => {\n        if (err)\n            next(err, value);\n        else {\n            const result = operation(context, value);\n            if (Object(_utils__WEBPACK_IMPORTED_MODULE_9__[\"isPromise\"])(result)) {\n                next(null, result.then(() => value));\n            }\n            else {\n                next(null, value);\n            }\n        }\n    });\n}\nfunction catchError(operation) {\n    return Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"createMutationOperator\"])('catchError', Object(_utils__WEBPACK_IMPORTED_MODULE_9__[\"getFunctionName\"])(operation), (err, context, value, next) => {\n        if (err)\n            next(null, operation(context, err));\n        else\n            next(null, value, {\n                isSkipped: true,\n            });\n    });\n}\nfunction tryCatch(paths) {\n    const instance = (err, context, next) => {\n        if (err)\n            next(err, context);\n        else {\n            const evaluateCatch = (err, catchContext) => {\n                Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"operatorStopped\"])(context, context.value);\n                next(err, Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"createContext\"])(catchContext, context.value));\n            };\n            const evaluateTry = (err, tryContext) => {\n                if (err) {\n                    const newContext = Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"createContext\"])(tryContext, err, context.execution.path && context.execution.path.concat('catch'));\n                    const nextWithPath = Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"createNextPath\"])(evaluateCatch);\n                    // @ts-ignore\n                    paths.catch(null, newContext, nextWithPath);\n                }\n                else {\n                    Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"operatorStopped\"])(context, context.value);\n                    next(null, Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"createContext\"])(tryContext, context.value));\n                }\n            };\n            Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"operatorStarted\"])('tryCatch', '', context);\n            const newContext = Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"createContext\"])(context, context.value, context.execution.path && context.execution.path.concat('try'));\n            const nextWithPath = Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"createNextPath\"])(evaluateTry);\n            // @ts-ignore\n            paths.try(null, newContext, nextWithPath);\n        }\n    };\n    instance[_utils__WEBPACK_IMPORTED_MODULE_9__[\"IS_OPERATOR\"]] = true;\n    return instance;\n}\nfunction fork(operation, paths) {\n    return Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"createOperator\"])('fork', Object(_utils__WEBPACK_IMPORTED_MODULE_9__[\"getFunctionName\"])(operation), (err, context, value, next) => {\n        if (err)\n            next(err, value);\n        else {\n            const path = operation(context, value);\n            next(null, value, {\n                path: {\n                    name: String(path),\n                    operator: paths[path],\n                },\n            });\n        }\n    });\n}\nfunction when(operation, paths) {\n    return Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"createOperator\"])('when', Object(_utils__WEBPACK_IMPORTED_MODULE_9__[\"getFunctionName\"])(operation), (err, context, value, next) => {\n        if (err)\n            next(err, value);\n        else if (operation(context, value))\n            next(null, value, {\n                path: {\n                    name: 'true',\n                    operator: paths.true,\n                },\n            });\n        else\n            next(null, value, {\n                path: {\n                    name: 'false',\n                    operator: paths.false,\n                },\n            });\n    });\n}\nfunction wait(ms) {\n    return Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"createOperator\"])('wait', String(ms), (err, context, value, next) => {\n        if (err)\n            next(err, value);\n        else\n            setTimeout(() => next(null, value), ms);\n    });\n}\nfunction debounce(ms) {\n    let timeout;\n    let previousFinal;\n    return Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"createOperator\"])('debounce', String(ms), (err, context, value, next, final) => {\n        if (err)\n            next(err, value);\n        else {\n            if (timeout) {\n                clearTimeout(timeout);\n                previousFinal(null, value);\n            }\n            previousFinal = final;\n            timeout = setTimeout(() => {\n                timeout = null;\n                next(null, value);\n            }, ms);\n        }\n    });\n}\nfunction throttle(ms) {\n    let timeout;\n    let previousFinal;\n    let currentNext;\n    return Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"createOperator\"])('throttle', String(ms), (err, context, value, next, final) => {\n        if (err)\n            next(err, value);\n        else {\n            if (timeout) {\n                previousFinal(null, value);\n                currentNext = next;\n            }\n            else {\n                timeout = setTimeout(() => {\n                    timeout = null;\n                    currentNext(null, value);\n                }, ms);\n            }\n            previousFinal = final;\n            currentNext = next;\n        }\n    });\n}\nfunction waitUntil(operation) {\n    return Object(_operator__WEBPACK_IMPORTED_MODULE_6__[\"createOperator\"])('waitUntil', operation.name, (err, context, value, next) => {\n        if (err)\n            next(err, value);\n        else {\n            const tree = context.execution.getTrackStateTree();\n            const test = () => {\n                if (operation(tree.state)) {\n                    tree.dispose();\n                    next(null, value);\n                }\n            };\n            tree.trackScope(test, test);\n        }\n    });\n}\n//# sourceMappingURL=index.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/overmind/es/index.js\n");

/***/ }),

/***/ "./node_modules/overmind/es/internalTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/overmind/es/internalTypes.js ***!
  \***************************************************/
/*! exports provided: EventType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EventType\", function() { return EventType; });\nvar EventType;\n(function (EventType) {\n    EventType[\"ACTION_START\"] = \"action:start\";\n    EventType[\"ACTION_END\"] = \"action:end\";\n    EventType[\"OPERATOR_START\"] = \"operator:start\";\n    EventType[\"OPERATOR_END\"] = \"operator:end\";\n    EventType[\"OPERATOR_ASYNC\"] = \"operator:async\";\n    EventType[\"MUTATIONS\"] = \"mutations\";\n    EventType[\"EFFECT\"] = \"effect\";\n    EventType[\"DERIVED\"] = \"derived\";\n    EventType[\"DERIVED_DIRTY\"] = \"derived:dirty\";\n    EventType[\"COMPONENT_ADD\"] = \"component:add\";\n    EventType[\"COMPONENT_UPDATE\"] = \"component:update\";\n    EventType[\"COMPONENT_REMOVE\"] = \"component:remove\";\n    EventType[\"GETTER\"] = \"getter\";\n})(EventType || (EventType = {}));\n//# sourceMappingURL=internalTypes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL292ZXJtaW5kL2VzL2ludGVybmFsVHlwZXMuanM/YjE4MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw4QkFBOEI7QUFDL0IiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvb3Zlcm1pbmQvZXMvaW50ZXJuYWxUeXBlcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgRXZlbnRUeXBlO1xuKGZ1bmN0aW9uIChFdmVudFR5cGUpIHtcbiAgICBFdmVudFR5cGVbXCJBQ1RJT05fU1RBUlRcIl0gPSBcImFjdGlvbjpzdGFydFwiO1xuICAgIEV2ZW50VHlwZVtcIkFDVElPTl9FTkRcIl0gPSBcImFjdGlvbjplbmRcIjtcbiAgICBFdmVudFR5cGVbXCJPUEVSQVRPUl9TVEFSVFwiXSA9IFwib3BlcmF0b3I6c3RhcnRcIjtcbiAgICBFdmVudFR5cGVbXCJPUEVSQVRPUl9FTkRcIl0gPSBcIm9wZXJhdG9yOmVuZFwiO1xuICAgIEV2ZW50VHlwZVtcIk9QRVJBVE9SX0FTWU5DXCJdID0gXCJvcGVyYXRvcjphc3luY1wiO1xuICAgIEV2ZW50VHlwZVtcIk1VVEFUSU9OU1wiXSA9IFwibXV0YXRpb25zXCI7XG4gICAgRXZlbnRUeXBlW1wiRUZGRUNUXCJdID0gXCJlZmZlY3RcIjtcbiAgICBFdmVudFR5cGVbXCJERVJJVkVEXCJdID0gXCJkZXJpdmVkXCI7XG4gICAgRXZlbnRUeXBlW1wiREVSSVZFRF9ESVJUWVwiXSA9IFwiZGVyaXZlZDpkaXJ0eVwiO1xuICAgIEV2ZW50VHlwZVtcIkNPTVBPTkVOVF9BRERcIl0gPSBcImNvbXBvbmVudDphZGRcIjtcbiAgICBFdmVudFR5cGVbXCJDT01QT05FTlRfVVBEQVRFXCJdID0gXCJjb21wb25lbnQ6dXBkYXRlXCI7XG4gICAgRXZlbnRUeXBlW1wiQ09NUE9ORU5UX1JFTU9WRVwiXSA9IFwiY29tcG9uZW50OnJlbW92ZVwiO1xuICAgIEV2ZW50VHlwZVtcIkdFVFRFUlwiXSA9IFwiZ2V0dGVyXCI7XG59KShFdmVudFR5cGUgfHwgKEV2ZW50VHlwZSA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcm5hbFR5cGVzLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/overmind/es/internalTypes.js\n");

/***/ }),

/***/ "./node_modules/overmind/es/operator.js":
/*!**********************************************!*\
  !*** ./node_modules/overmind/es/operator.js ***!
  \**********************************************/
/*! exports provided: operatorStarted, operatorStopped, createContext, createNextPath, createOperator, createMutationOperator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"operatorStarted\", function() { return operatorStarted; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"operatorStopped\", function() { return operatorStopped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createContext\", function() { return createContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNextPath\", function() { return createNextPath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createOperator\", function() { return createOperator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createMutationOperator\", function() { return createMutationOperator; });\n/* harmony import */ var _internalTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internalTypes */ \"./node_modules/overmind/es/internalTypes.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./node_modules/overmind/es/utils.js\");\n\n\nfunction operatorStarted(type, arg, context) {\n    if (false) {}\n    const name = typeof arg === 'function' ? arg.displayName || arg.name : String(arg);\n    context.execution.isRunning = true;\n    context.execution.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_0__[\"EventType\"].OPERATOR_START, Object.assign(Object.assign({}, context.execution), { name,\n        type }));\n}\nfunction operatorStopped(context, value, details = {}) {\n    if (false) {}\n    const evaluatedDetails = {\n        error: details.error ? details.error.message : undefined,\n        isIntercepted: Boolean(details.isIntercepted),\n        isSkipped: Boolean(details.isSkipped),\n    };\n    if (value instanceof Promise) {\n        value\n            .then((promiseValue) => {\n            context.execution.isRunning = false;\n            context.execution.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_0__[\"EventType\"].OPERATOR_END, Object.assign(Object.assign(Object.assign({}, context.execution), { result: promiseValue, isAsync: true }), evaluatedDetails));\n        })\n            .catch(() => {\n            // Make sure an error does not cause uncaught\n        });\n    }\n    else {\n        context.execution.isRunning = false;\n        context.execution.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_0__[\"EventType\"].OPERATOR_END, Object.assign(Object.assign(Object.assign({}, context.execution), { result: value, isAsync: false }), evaluatedDetails));\n    }\n}\nfunction createContext(context, value, path) {\n    if (false) {}\n    const newExecution = Object.assign(Object.assign({}, context.execution), { operatorId: context.execution.getNextOperatorId(), path: path || context.execution.path });\n    const mutationTrees = [];\n    return Object.assign(Object.assign({}, context), { actions: Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"createActionsProxy\"])(context.actions[_utils__WEBPACK_IMPORTED_MODULE_1__[\"ORIGINAL_ACTIONS\"]] || context.actions, (action) => {\n            return (value) => action(value, newExecution.isRunning ? newExecution : null);\n        }), value, execution: newExecution, effects: context.execution.trackEffects(newExecution), flush: context.parentExecution\n            ? context.parentExecution.flush\n            : (isAsync) => {\n                return this.proxyStateTree.flush(mutationTrees, isAsync);\n            }, getMutationTree: context.parentExecution\n            ? context.parentExecution.getMutationTree\n            : () => {\n                const mutationTree = this.proxyStateTree.getMutationTree();\n                mutationTrees.push(mutationTree);\n                if (this.mode.mode === _utils__WEBPACK_IMPORTED_MODULE_1__[\"MODE_TEST\"]) {\n                    mutationTree.onMutation((mutation) => {\n                        this.addExecutionMutation(mutation);\n                    });\n                }\n                return mutationTree;\n            } });\n}\nfunction createNextPath(next) {\n    if (false) {}\n    return (err, context) => {\n        const newContext = Object.assign(Object.assign({}, context), { execution: Object.assign(Object.assign({}, context.execution), { path: context.execution.path.slice(0, context.execution.path.length - 1) }) });\n        if (err)\n            next(err, newContext);\n        else\n            next(null, newContext);\n    };\n}\nfunction createOperator(type, name, cb) {\n    const operator = (err, context, next, final) => {\n        operatorStarted(type, name, context);\n        let nextIsCalled = false;\n        try {\n            cb(err, {\n                state: context.state,\n                effects: context.effects,\n                actions: context.actions,\n                execution: context.execution,\n                revertable: context.revertable,\n            }, context.value, (err, value, options = {}) => {\n                function run(err, value) {\n                    if (options.path) {\n                        const newContext = createContext(context, value, context.execution.path &&\n                            context.execution.path.concat(options.path.name));\n                        const nextWithPath = createNextPath(next);\n                        options.path.operator(err, newContext, (...args) => {\n                            operatorStopped(context, args[1].value);\n                            nextWithPath(...args);\n                        });\n                    }\n                    else {\n                        operatorStopped(context, err || value, {\n                            isSkipped: err ? true : options.isSkipped,\n                        });\n                        next(err, createContext(context, value));\n                    }\n                }\n                if (value && value instanceof Promise) {\n                    value\n                        .then((promiseValue) => run(err, promiseValue))\n                        .catch((promiseError) => run(promiseError, promiseError));\n                }\n                else {\n                    nextIsCalled = true;\n                    run(err, value);\n                }\n            }, (err, value) => {\n                nextIsCalled = true;\n                operatorStopped(context, err || value, {\n                    isSkipped: Boolean(err),\n                    isIntercepted: !err,\n                });\n                final(err, createContext(context, value));\n            });\n        }\n        catch (error) {\n            nextIsCalled = true;\n            operatorStopped(context, context.value, {\n                error,\n            });\n            next(error, createContext(context, context.value));\n        }\n        if (!nextIsCalled) {\n            context.execution.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_0__[\"EventType\"].OPERATOR_ASYNC, Object.assign(Object.assign({}, context.execution), { isAsync: true }));\n        }\n    };\n    operator[_utils__WEBPACK_IMPORTED_MODULE_1__[\"IS_OPERATOR\"]] = true;\n    return operator;\n}\nfunction createMutationOperator(type, name, cb) {\n    const operator = (err, context, next, final) => {\n        operatorStarted(type, name, context);\n        const mutationTree = context.execution.getMutationTree();\n        if (true) {\n            mutationTree.onMutation((mutation) => {\n                context.execution.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_0__[\"EventType\"].MUTATIONS, Object.assign(Object.assign({}, context.execution), { mutations: [mutation] }));\n            });\n        }\n        let nextIsCalled = false;\n        try {\n            cb(err, {\n                state: mutationTree.state,\n                effects: context.effects,\n                actions: context.actions,\n                execution: context.execution,\n                revertable: context.revertable,\n            },  false\n                ? undefined\n                : context.execution.scopeValue(context.value, mutationTree), (err, value, options = {}) => {\n                function run(err, value) {\n                    operatorStopped(context, err || value, {\n                        isSkipped: err ? true : options.isSkipped,\n                    });\n                    mutationTree.dispose();\n                    next(err, createContext(context, value));\n                }\n                if (value && value instanceof Promise) {\n                    value\n                        .then((promiseValue) => run(err, promiseValue))\n                        .catch((promiseError) => run(promiseError, promiseError));\n                }\n                else {\n                    nextIsCalled = true;\n                    run(err, value);\n                }\n            }, (err, value) => {\n                nextIsCalled = true;\n                operatorStopped(context, err || value, {\n                    isSkipped: Boolean(err),\n                    isIntercepted: !err,\n                });\n                final(err, createContext(context, value));\n            });\n            if (true) {\n                let pendingFlush;\n                mutationTree.onMutation(() => {\n                    if (pendingFlush) {\n                        clearTimeout(pendingFlush);\n                    }\n                    pendingFlush = setTimeout(() => {\n                        const flushData = context.execution.flush(true);\n                        if (flushData.mutations.length) {\n                            context.execution.send({\n                                type: 'flush',\n                                data: Object.assign(Object.assign(Object.assign({}, context.execution), flushData), { mutations: flushData.mutations }),\n                            });\n                        }\n                    });\n                });\n            }\n        }\n        catch (error) {\n            nextIsCalled = true;\n            operatorStopped(context, context.value, {\n                error,\n            });\n            next(error, createContext(context, context.value));\n        }\n        if (!nextIsCalled) {\n            context.execution.emit(_internalTypes__WEBPACK_IMPORTED_MODULE_0__[\"EventType\"].OPERATOR_ASYNC, Object.assign(Object.assign({}, context.execution), { isAsync: true }));\n        }\n    };\n    operator[_utils__WEBPACK_IMPORTED_MODULE_1__[\"IS_OPERATOR\"]] = true;\n    return operator;\n}\n//# sourceMappingURL=operator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/overmind/es/operator.js\n");

/***/ }),

/***/ "./node_modules/overmind/es/proxyfyEffects.js":
/*!****************************************************!*\
  !*** ./node_modules/overmind/es/proxyfyEffects.js ***!
  \****************************************************/
/*! exports provided: doNotProxy, proxifyEffects */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"doNotProxy\", function() { return doNotProxy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"proxifyEffects\", function() { return proxifyEffects; });\nconst doNotProxy = Symbol('doNotProxy');\nfunction isObject(value) {\n    return typeof value === 'object' && !Array.isArray(value) && value !== null;\n}\nlet hasWarnedConstructor = false;\nlet currentEffectId = 0;\nconst ORIGIN_TARGET = Symbol('ORIGIN_TARGET');\nfunction proxifyEffects(effects, cb, path = '') {\n    if (!isObject(effects) && !(typeof effects === 'function')) {\n        return effects;\n    }\n    return new Proxy(effects, {\n        apply(target, thisArg, agumentsList) {\n            const effectId = currentEffectId++;\n            const name = path.split('.');\n            const method = name.pop();\n            return cb({\n                func: target.bind(thisArg ? thisArg[ORIGIN_TARGET] : undefined),\n                effectId,\n                name: name.join('.'),\n                method,\n                args: agumentsList,\n            });\n        },\n        construct(Target, args) {\n            if (!hasWarnedConstructor) {\n                console.warn(`EFFECTS - It is highly recommended to create a custom effect, exposing a method that deals with the instantiation of \"${path}\". It improves readability and debugability of your app`);\n                hasWarnedConstructor = true;\n            }\n            return new Target(...args);\n        },\n        get(target, prop) {\n            if (prop === ORIGIN_TARGET) {\n                return target;\n            }\n            return proxifyEffects(target[prop], cb, path ? path + '.' + prop.toString() : prop.toString());\n        }\n    });\n}\n//# sourceMappingURL=proxyfyEffects.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL292ZXJtaW5kL2VzL3Byb3h5ZnlFZmZlY3RzLmpzPzI5NDkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSxzSkFBc0osS0FBSztBQUMzSjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvb3Zlcm1pbmQvZXMvcHJveHlmeUVmZmVjdHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZG9Ob3RQcm94eSA9IFN5bWJvbCgnZG9Ob3RQcm94eScpO1xuZnVuY3Rpb24gaXNPYmplY3QodmFsdWUpIHtcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiAhQXJyYXkuaXNBcnJheSh2YWx1ZSkgJiYgdmFsdWUgIT09IG51bGw7XG59XG5sZXQgaGFzV2FybmVkQ29uc3RydWN0b3IgPSBmYWxzZTtcbmxldCBjdXJyZW50RWZmZWN0SWQgPSAwO1xuY29uc3QgT1JJR0lOX1RBUkdFVCA9IFN5bWJvbCgnT1JJR0lOX1RBUkdFVCcpO1xuZXhwb3J0IGZ1bmN0aW9uIHByb3hpZnlFZmZlY3RzKGVmZmVjdHMsIGNiLCBwYXRoID0gJycpIHtcbiAgICBpZiAoIWlzT2JqZWN0KGVmZmVjdHMpICYmICEodHlwZW9mIGVmZmVjdHMgPT09ICdmdW5jdGlvbicpKSB7XG4gICAgICAgIHJldHVybiBlZmZlY3RzO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IFByb3h5KGVmZmVjdHMsIHtcbiAgICAgICAgYXBwbHkodGFyZ2V0LCB0aGlzQXJnLCBhZ3VtZW50c0xpc3QpIHtcbiAgICAgICAgICAgIGNvbnN0IGVmZmVjdElkID0gY3VycmVudEVmZmVjdElkKys7XG4gICAgICAgICAgICBjb25zdCBuYW1lID0gcGF0aC5zcGxpdCgnLicpO1xuICAgICAgICAgICAgY29uc3QgbWV0aG9kID0gbmFtZS5wb3AoKTtcbiAgICAgICAgICAgIHJldHVybiBjYih7XG4gICAgICAgICAgICAgICAgZnVuYzogdGFyZ2V0LmJpbmQodGhpc0FyZyA/IHRoaXNBcmdbT1JJR0lOX1RBUkdFVF0gOiB1bmRlZmluZWQpLFxuICAgICAgICAgICAgICAgIGVmZmVjdElkLFxuICAgICAgICAgICAgICAgIG5hbWU6IG5hbWUuam9pbignLicpLFxuICAgICAgICAgICAgICAgIG1ldGhvZCxcbiAgICAgICAgICAgICAgICBhcmdzOiBhZ3VtZW50c0xpc3QsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgY29uc3RydWN0KFRhcmdldCwgYXJncykge1xuICAgICAgICAgICAgaWYgKCFoYXNXYXJuZWRDb25zdHJ1Y3Rvcikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihgRUZGRUNUUyAtIEl0IGlzIGhpZ2hseSByZWNvbW1lbmRlZCB0byBjcmVhdGUgYSBjdXN0b20gZWZmZWN0LCBleHBvc2luZyBhIG1ldGhvZCB0aGF0IGRlYWxzIHdpdGggdGhlIGluc3RhbnRpYXRpb24gb2YgXCIke3BhdGh9XCIuIEl0IGltcHJvdmVzIHJlYWRhYmlsaXR5IGFuZCBkZWJ1Z2FiaWxpdHkgb2YgeW91ciBhcHBgKTtcbiAgICAgICAgICAgICAgICBoYXNXYXJuZWRDb25zdHJ1Y3RvciA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbmV3IFRhcmdldCguLi5hcmdzKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0KHRhcmdldCwgcHJvcCkge1xuICAgICAgICAgICAgaWYgKHByb3AgPT09IE9SSUdJTl9UQVJHRVQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGFyZ2V0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHByb3hpZnlFZmZlY3RzKHRhcmdldFtwcm9wXSwgY2IsIHBhdGggPyBwYXRoICsgJy4nICsgcHJvcC50b1N0cmluZygpIDogcHJvcC50b1N0cmluZygpKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJveHlmeUVmZmVjdHMuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/overmind/es/proxyfyEffects.js\n");

/***/ }),

/***/ "./node_modules/overmind/es/rehydrate.js":
/*!***********************************************!*\
  !*** ./node_modules/overmind/es/rehydrate.js ***!
  \***********************************************/
/*! exports provided: rehydrateState, SERIALIZE, rehydrate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rehydrateState\", function() { return rehydrateState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SERIALIZE\", function() { return SERIALIZE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rehydrate\", function() { return rehydrate; });\nfunction rehydrateState(target, source, classes = {}) {\n    if (!target || !source) {\n        throw new Error(`You have to pass a \"target\" and \"source\" object to rehydrate`);\n    }\n    Object.keys(source).forEach((key) => {\n        const value = source[key];\n        const classInstance = classes[key];\n        if (typeof classInstance === 'function' && Array.isArray(target[key])) {\n            target[key] = source[key].map(value => classInstance(value));\n        }\n        else if (typeof classInstance === 'function' && typeof target[key] === 'object' && target[key] !== null && target[key].constructor.name === 'Object') {\n            target[key] = Object.keys(source[key]).reduce((aggr, subKey) => {\n                aggr[subKey] = classInstance(source[key][subKey]);\n                return aggr;\n            }, {});\n        }\n        else if (typeof classInstance === 'function') {\n            target[key] = classInstance(source[key]);\n        }\n        else if (typeof value === 'object' && !Array.isArray(value) && value !== null) {\n            if (!target[key])\n                target[key] = {};\n            rehydrateState(target[key], source[key], classes[key]);\n        }\n        else {\n            target[key] = source[key];\n        }\n    });\n}\nconst SERIALIZE = Symbol('SERIALIZE');\nconst rehydrate = (state, source, classes = {}) => {\n    if (Array.isArray(source)) {\n        const mutations = source;\n        mutations.forEach((mutation) => {\n            const pathArray = mutation.path.split(mutation.delimiter);\n            const key = pathArray.pop();\n            const target = pathArray.reduce((aggr, key) => aggr[key], state);\n            const classInstance = pathArray.reduce((aggr, key) => aggr && aggr[key], classes);\n            if (mutation.method === 'set') {\n                if (typeof classInstance === 'function' && Array.isArray(mutation.args[0])) {\n                    target[key] = mutation.args[0].map((arg) => classInstance(arg));\n                }\n                else if (typeof classInstance === 'function') {\n                    target[key] = classInstance(mutation.args[0]);\n                }\n                else {\n                    target[key] = mutation.args[0];\n                }\n            }\n            else if (mutation.method === 'unset') {\n                delete target[key];\n            }\n            else {\n                target[key][mutation.method].apply(target[key], typeof classInstance === 'function' ? mutation.args.map((arg) => {\n                    return typeof arg === 'object' && arg !== null ? classInstance(arg) : arg;\n                }) : mutation.args);\n            }\n        });\n    }\n    else {\n        rehydrateState(state, source, classes);\n    }\n};\n//# sourceMappingURL=rehydrate.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL292ZXJtaW5kL2VzL3JlaHlkcmF0ZS5qcz9iZGNkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQU8sb0RBQW9EO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxJQUFJO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ0EsOENBQThDO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvb3Zlcm1pbmQvZXMvcmVoeWRyYXRlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHJlaHlkcmF0ZVN0YXRlKHRhcmdldCwgc291cmNlLCBjbGFzc2VzID0ge30pIHtcbiAgICBpZiAoIXRhcmdldCB8fCAhc291cmNlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgWW91IGhhdmUgdG8gcGFzcyBhIFwidGFyZ2V0XCIgYW5kIFwic291cmNlXCIgb2JqZWN0IHRvIHJlaHlkcmF0ZWApO1xuICAgIH1cbiAgICBPYmplY3Qua2V5cyhzb3VyY2UpLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IHNvdXJjZVtrZXldO1xuICAgICAgICBjb25zdCBjbGFzc0luc3RhbmNlID0gY2xhc3Nlc1trZXldO1xuICAgICAgICBpZiAodHlwZW9mIGNsYXNzSW5zdGFuY2UgPT09ICdmdW5jdGlvbicgJiYgQXJyYXkuaXNBcnJheSh0YXJnZXRba2V5XSkpIHtcbiAgICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV0ubWFwKHZhbHVlID0+IGNsYXNzSW5zdGFuY2UodmFsdWUpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2YgY2xhc3NJbnN0YW5jZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgdGFyZ2V0W2tleV0gPT09ICdvYmplY3QnICYmIHRhcmdldFtrZXldICE9PSBudWxsICYmIHRhcmdldFtrZXldLmNvbnN0cnVjdG9yLm5hbWUgPT09ICdPYmplY3QnKSB7XG4gICAgICAgICAgICB0YXJnZXRba2V5XSA9IE9iamVjdC5rZXlzKHNvdXJjZVtrZXldKS5yZWR1Y2UoKGFnZ3IsIHN1YktleSkgPT4ge1xuICAgICAgICAgICAgICAgIGFnZ3Jbc3ViS2V5XSA9IGNsYXNzSW5zdGFuY2Uoc291cmNlW2tleV1bc3ViS2V5XSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFnZ3I7XG4gICAgICAgICAgICB9LCB7fSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIGNsYXNzSW5zdGFuY2UgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHRhcmdldFtrZXldID0gY2xhc3NJbnN0YW5jZShzb3VyY2Vba2V5XSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiAhQXJyYXkuaXNBcnJheSh2YWx1ZSkgJiYgdmFsdWUgIT09IG51bGwpIHtcbiAgICAgICAgICAgIGlmICghdGFyZ2V0W2tleV0pXG4gICAgICAgICAgICAgICAgdGFyZ2V0W2tleV0gPSB7fTtcbiAgICAgICAgICAgIHJlaHlkcmF0ZVN0YXRlKHRhcmdldFtrZXldLCBzb3VyY2Vba2V5XSwgY2xhc3Nlc1trZXldKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmV4cG9ydCBjb25zdCBTRVJJQUxJWkUgPSBTeW1ib2woJ1NFUklBTElaRScpO1xuZXhwb3J0IGNvbnN0IHJlaHlkcmF0ZSA9IChzdGF0ZSwgc291cmNlLCBjbGFzc2VzID0ge30pID0+IHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShzb3VyY2UpKSB7XG4gICAgICAgIGNvbnN0IG11dGF0aW9ucyA9IHNvdXJjZTtcbiAgICAgICAgbXV0YXRpb25zLmZvckVhY2goKG11dGF0aW9uKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBwYXRoQXJyYXkgPSBtdXRhdGlvbi5wYXRoLnNwbGl0KG11dGF0aW9uLmRlbGltaXRlcik7XG4gICAgICAgICAgICBjb25zdCBrZXkgPSBwYXRoQXJyYXkucG9wKCk7XG4gICAgICAgICAgICBjb25zdCB0YXJnZXQgPSBwYXRoQXJyYXkucmVkdWNlKChhZ2dyLCBrZXkpID0+IGFnZ3Jba2V5XSwgc3RhdGUpO1xuICAgICAgICAgICAgY29uc3QgY2xhc3NJbnN0YW5jZSA9IHBhdGhBcnJheS5yZWR1Y2UoKGFnZ3IsIGtleSkgPT4gYWdnciAmJiBhZ2dyW2tleV0sIGNsYXNzZXMpO1xuICAgICAgICAgICAgaWYgKG11dGF0aW9uLm1ldGhvZCA9PT0gJ3NldCcpIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGNsYXNzSW5zdGFuY2UgPT09ICdmdW5jdGlvbicgJiYgQXJyYXkuaXNBcnJheShtdXRhdGlvbi5hcmdzWzBdKSkge1xuICAgICAgICAgICAgICAgICAgICB0YXJnZXRba2V5XSA9IG11dGF0aW9uLmFyZ3NbMF0ubWFwKChhcmcpID0+IGNsYXNzSW5zdGFuY2UoYXJnKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiBjbGFzc0luc3RhbmNlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgIHRhcmdldFtrZXldID0gY2xhc3NJbnN0YW5jZShtdXRhdGlvbi5hcmdzWzBdKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRhcmdldFtrZXldID0gbXV0YXRpb24uYXJnc1swXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChtdXRhdGlvbi5tZXRob2QgPT09ICd1bnNldCcpIHtcbiAgICAgICAgICAgICAgICBkZWxldGUgdGFyZ2V0W2tleV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0YXJnZXRba2V5XVttdXRhdGlvbi5tZXRob2RdLmFwcGx5KHRhcmdldFtrZXldLCB0eXBlb2YgY2xhc3NJbnN0YW5jZSA9PT0gJ2Z1bmN0aW9uJyA/IG11dGF0aW9uLmFyZ3MubWFwKChhcmcpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdvYmplY3QnICYmIGFyZyAhPT0gbnVsbCA/IGNsYXNzSW5zdGFuY2UoYXJnKSA6IGFyZztcbiAgICAgICAgICAgICAgICB9KSA6IG11dGF0aW9uLmFyZ3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJlaHlkcmF0ZVN0YXRlKHN0YXRlLCBzb3VyY2UsIGNsYXNzZXMpO1xuICAgIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWh5ZHJhdGUuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/overmind/es/rehydrate.js\n");

/***/ }),

/***/ "./node_modules/overmind/es/statemachine.js":
/*!**************************************************!*\
  !*** ./node_modules/overmind/es/statemachine.js ***!
  \**************************************************/
/*! exports provided: StateMachine, statemachine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StateMachine\", function() { return StateMachine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"statemachine\", function() { return statemachine; });\n/* harmony import */ var proxy_state_tree__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! proxy-state-tree */ \"./node_modules/proxy-state-tree/es/index.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./node_modules/overmind/es/utils.js\");\nvar _a;\n\n\nconst INITIAL_STATE = Symbol('INITIAL_STATE');\nconst TRANSITIONS = Symbol('TRANSITIONS');\nconst STATE = Symbol('STATE');\nconst IS_DISPOSED = Symbol('IS_DISPOSED');\nconst CURRENT_KEYS = Symbol('CURRENT_KEYS');\nconst BASE_STATE = Symbol('BASE_STATE');\nclass StateMachine {\n    constructor(transitions, state, baseState) {\n        this[_a] = false;\n        this[STATE] = state;\n        this[BASE_STATE] = baseState;\n        this[INITIAL_STATE] = state.current;\n        this[BASE_STATE] = baseState;\n        this[TRANSITIONS] = transitions;\n        this[CURRENT_KEYS] = Object.keys(state);\n        Object.assign(this, state, baseState);\n    }\n    clone() {\n        return new StateMachine(this[TRANSITIONS], Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"deepCopy\"])(this[STATE]), Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"deepCopy\"])(this[BASE_STATE]));\n    }\n    dispose() {\n        Object.keys(this[proxy_state_tree__WEBPACK_IMPORTED_MODULE_0__[\"VALUE\"]]).forEach((key) => {\n            if (this[proxy_state_tree__WEBPACK_IMPORTED_MODULE_0__[\"VALUE\"]][key] instanceof StateMachine) {\n                this[key].dispose();\n            }\n        });\n        this[proxy_state_tree__WEBPACK_IMPORTED_MODULE_0__[\"VALUE\"]][IS_DISPOSED] = true;\n    }\n    send(type, data) {\n        if (this[proxy_state_tree__WEBPACK_IMPORTED_MODULE_0__[\"VALUE\"]][IS_DISPOSED]) {\n            if (true) {\n                console.warn(`Overmind - The statemachine at \"${this[proxy_state_tree__WEBPACK_IMPORTED_MODULE_0__[\"PATH\"]]}\" has been disposed, but you tried to transition on it`);\n            }\n            return this;\n        }\n        const tree = (this[proxy_state_tree__WEBPACK_IMPORTED_MODULE_0__[\"PROXY_TREE\"]].master.mutationTree || this[proxy_state_tree__WEBPACK_IMPORTED_MODULE_0__[\"PROXY_TREE\"]]);\n        const transition = this[proxy_state_tree__WEBPACK_IMPORTED_MODULE_0__[\"VALUE\"]][TRANSITIONS][type];\n        tree.enableMutations();\n        const result = transition(this, data);\n        if (result) {\n            this[proxy_state_tree__WEBPACK_IMPORTED_MODULE_0__[\"VALUE\"]][CURRENT_KEYS].forEach((key) => {\n                if (key !== 'current') {\n                    delete this[key];\n                }\n            });\n            this[proxy_state_tree__WEBPACK_IMPORTED_MODULE_0__[\"VALUE\"]][CURRENT_KEYS] = Object.keys(result);\n            Object.assign(this, result);\n        }\n        tree.blockMutations();\n        return this;\n    }\n    matches(state) {\n        if (this.current === state) {\n            return this;\n        }\n    }\n}\n_a = IS_DISPOSED;\nfunction statemachine(transitions) {\n    return {\n        create(state, baseState) {\n            return new StateMachine(transitions, state, baseState);\n        }\n    };\n}\n//# sourceMappingURL=statemachine.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL292ZXJtaW5kL2VzL3N0YXRlbWFjaGluZS5qcz83ZTMwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUMyRDtBQUN4QjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsdURBQVEsZUFBZSx1REFBUTtBQUNsRjtBQUNBO0FBQ0EseUJBQXlCLHNEQUFLO0FBQzlCLHFCQUFxQixzREFBSztBQUMxQjtBQUNBO0FBQ0EsU0FBUztBQUNULGFBQWEsc0RBQUs7QUFDbEI7QUFDQTtBQUNBLGlCQUFpQixzREFBSztBQUN0QixnQkFBZ0IsSUFBc0M7QUFDdEQsZ0VBQWdFLEtBQUsscURBQUksRUFBRTtBQUMzRTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsMkRBQVUsOEJBQThCLDJEQUFVO0FBQzdFLGdDQUFnQyxzREFBSztBQUNyQztBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsc0RBQUs7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLGlCQUFpQixzREFBSztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL292ZXJtaW5kL2VzL3N0YXRlbWFjaGluZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBfYTtcbmltcG9ydCB7IFBBVEgsIFBST1hZX1RSRUUsIFZBTFVFIH0gZnJvbSAncHJveHktc3RhdGUtdHJlZSc7XG5pbXBvcnQgeyBkZWVwQ29weSB9IGZyb20gJy4vdXRpbHMnO1xuY29uc3QgSU5JVElBTF9TVEFURSA9IFN5bWJvbCgnSU5JVElBTF9TVEFURScpO1xuY29uc3QgVFJBTlNJVElPTlMgPSBTeW1ib2woJ1RSQU5TSVRJT05TJyk7XG5jb25zdCBTVEFURSA9IFN5bWJvbCgnU1RBVEUnKTtcbmNvbnN0IElTX0RJU1BPU0VEID0gU3ltYm9sKCdJU19ESVNQT1NFRCcpO1xuY29uc3QgQ1VSUkVOVF9LRVlTID0gU3ltYm9sKCdDVVJSRU5UX0tFWVMnKTtcbmNvbnN0IEJBU0VfU1RBVEUgPSBTeW1ib2woJ0JBU0VfU1RBVEUnKTtcbmV4cG9ydCBjbGFzcyBTdGF0ZU1hY2hpbmUge1xuICAgIGNvbnN0cnVjdG9yKHRyYW5zaXRpb25zLCBzdGF0ZSwgYmFzZVN0YXRlKSB7XG4gICAgICAgIHRoaXNbX2FdID0gZmFsc2U7XG4gICAgICAgIHRoaXNbU1RBVEVdID0gc3RhdGU7XG4gICAgICAgIHRoaXNbQkFTRV9TVEFURV0gPSBiYXNlU3RhdGU7XG4gICAgICAgIHRoaXNbSU5JVElBTF9TVEFURV0gPSBzdGF0ZS5jdXJyZW50O1xuICAgICAgICB0aGlzW0JBU0VfU1RBVEVdID0gYmFzZVN0YXRlO1xuICAgICAgICB0aGlzW1RSQU5TSVRJT05TXSA9IHRyYW5zaXRpb25zO1xuICAgICAgICB0aGlzW0NVUlJFTlRfS0VZU10gPSBPYmplY3Qua2V5cyhzdGF0ZSk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24odGhpcywgc3RhdGUsIGJhc2VTdGF0ZSk7XG4gICAgfVxuICAgIGNsb25lKCkge1xuICAgICAgICByZXR1cm4gbmV3IFN0YXRlTWFjaGluZSh0aGlzW1RSQU5TSVRJT05TXSwgZGVlcENvcHkodGhpc1tTVEFURV0pLCBkZWVwQ29weSh0aGlzW0JBU0VfU1RBVEVdKSk7XG4gICAgfVxuICAgIGRpc3Bvc2UoKSB7XG4gICAgICAgIE9iamVjdC5rZXlzKHRoaXNbVkFMVUVdKS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgICAgICAgIGlmICh0aGlzW1ZBTFVFXVtrZXldIGluc3RhbmNlb2YgU3RhdGVNYWNoaW5lKSB7XG4gICAgICAgICAgICAgICAgdGhpc1trZXldLmRpc3Bvc2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXNbVkFMVUVdW0lTX0RJU1BPU0VEXSA9IHRydWU7XG4gICAgfVxuICAgIHNlbmQodHlwZSwgZGF0YSkge1xuICAgICAgICBpZiAodGhpc1tWQUxVRV1bSVNfRElTUE9TRURdKSB7XG4gICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oYE92ZXJtaW5kIC0gVGhlIHN0YXRlbWFjaGluZSBhdCBcIiR7dGhpc1tQQVRIXX1cIiBoYXMgYmVlbiBkaXNwb3NlZCwgYnV0IHlvdSB0cmllZCB0byB0cmFuc2l0aW9uIG9uIGl0YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB0cmVlID0gKHRoaXNbUFJPWFlfVFJFRV0ubWFzdGVyLm11dGF0aW9uVHJlZSB8fCB0aGlzW1BST1hZX1RSRUVdKTtcbiAgICAgICAgY29uc3QgdHJhbnNpdGlvbiA9IHRoaXNbVkFMVUVdW1RSQU5TSVRJT05TXVt0eXBlXTtcbiAgICAgICAgdHJlZS5lbmFibGVNdXRhdGlvbnMoKTtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gdHJhbnNpdGlvbih0aGlzLCBkYXRhKTtcbiAgICAgICAgaWYgKHJlc3VsdCkge1xuICAgICAgICAgICAgdGhpc1tWQUxVRV1bQ1VSUkVOVF9LRVlTXS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoa2V5ICE9PSAnY3VycmVudCcpIHtcbiAgICAgICAgICAgICAgICAgICAgZGVsZXRlIHRoaXNba2V5XTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXNbVkFMVUVdW0NVUlJFTlRfS0VZU10gPSBPYmplY3Qua2V5cyhyZXN1bHQpO1xuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLCByZXN1bHQpO1xuICAgICAgICB9XG4gICAgICAgIHRyZWUuYmxvY2tNdXRhdGlvbnMoKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIG1hdGNoZXMoc3RhdGUpIHtcbiAgICAgICAgaWYgKHRoaXMuY3VycmVudCA9PT0gc3RhdGUpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9XG4gICAgfVxufVxuX2EgPSBJU19ESVNQT1NFRDtcbmV4cG9ydCBmdW5jdGlvbiBzdGF0ZW1hY2hpbmUodHJhbnNpdGlvbnMpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBjcmVhdGUoc3RhdGUsIGJhc2VTdGF0ZSkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBTdGF0ZU1hY2hpbmUodHJhbnNpdGlvbnMsIHN0YXRlLCBiYXNlU3RhdGUpO1xuICAgICAgICB9XG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0YXRlbWFjaGluZS5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/overmind/es/statemachine.js\n");

/***/ }),

/***/ "./node_modules/overmind/es/types.js":
/*!*******************************************!*\
  !*** ./node_modules/overmind/es/types.js ***!
  \*******************************************/
/*! exports provided: EventType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./node_modules/overmind/es/utils.js\");\n/* harmony import */ var _internalTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internalTypes */ \"./node_modules/overmind/es/internalTypes.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"EventType\", function() { return _internalTypes__WEBPACK_IMPORTED_MODULE_1__[\"EventType\"]; });\n\n\n/** ===== PUBLIC API\n */\n\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL292ZXJtaW5kL2VzL3R5cGVzLmpzPzdjNTIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFzQztBQUN0QztBQUNBO0FBQzRDO0FBQzVDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL292ZXJtaW5kL2VzL3R5cGVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSVNfT1BFUkFUT1IgfSBmcm9tICcuL3V0aWxzJztcbi8qKiA9PT09PSBQVUJMSUMgQVBJXG4gKi9cbmV4cG9ydCB7IEV2ZW50VHlwZSB9IGZyb20gJy4vaW50ZXJuYWxUeXBlcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/overmind/es/types.js\n");

/***/ }),

/***/ "./node_modules/overmind/es/utils.js":
/*!*******************************************!*\
  !*** ./node_modules/overmind/es/utils.js ***!
  \*******************************************/
/*! exports provided: IS_TEST, IS_OPERATOR, ORIGINAL_ACTIONS, EXECUTION, MODE_DEFAULT, MODE_TEST, MODE_SSR, MockedEventEmitter, json, isPromise, processState, getFunctionName, deepCopy, getChangeMutations, getActionPaths, createActionsProxy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IS_TEST\", function() { return IS_TEST; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IS_OPERATOR\", function() { return IS_OPERATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ORIGINAL_ACTIONS\", function() { return ORIGINAL_ACTIONS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EXECUTION\", function() { return EXECUTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MODE_DEFAULT\", function() { return MODE_DEFAULT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MODE_TEST\", function() { return MODE_TEST; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MODE_SSR\", function() { return MODE_SSR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MockedEventEmitter\", function() { return MockedEventEmitter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"json\", function() { return json; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isPromise\", function() { return isPromise; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"processState\", function() { return processState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getFunctionName\", function() { return getFunctionName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deepCopy\", function() { return deepCopy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getChangeMutations\", function() { return getChangeMutations; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getActionPaths\", function() { return getActionPaths; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createActionsProxy\", function() { return createActionsProxy; });\n/* harmony import */ var is_plain_obj__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! is-plain-obj */ \"./node_modules/is-plain-obj/index.js\");\n/* harmony import */ var is_plain_obj__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(is_plain_obj__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var proxy_state_tree__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! proxy-state-tree */ \"./node_modules/proxy-state-tree/es/index.js\");\n/* harmony import */ var _statemachine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./statemachine */ \"./node_modules/overmind/es/statemachine.js\");\n\n\n\nconst IS_TEST = \"development\" === 'test';\nconst IS_OPERATOR = Symbol('operator');\nconst ORIGINAL_ACTIONS = Symbol('origina_actions');\nconst EXECUTION = Symbol('execution');\nconst MODE_DEFAULT = Symbol('MODE_DEFAULT');\nconst MODE_TEST = Symbol('MODE_TEST');\nconst MODE_SSR = Symbol('MODE_SSR');\nclass MockedEventEmitter {\n    emit() { }\n    emitAsync() { }\n    on() { }\n    once() { }\n    addListener() { }\n}\nconst json = (obj) => {\n    return deepCopy(obj && obj[proxy_state_tree__WEBPACK_IMPORTED_MODULE_1__[\"IS_PROXY\"]] ? obj[proxy_state_tree__WEBPACK_IMPORTED_MODULE_1__[\"VALUE\"]] : obj);\n};\nfunction isPromise(maybePromise) {\n    return (maybePromise instanceof Promise ||\n        (maybePromise &&\n            typeof maybePromise.then === 'function' &&\n            typeof maybePromise.catch === 'function'));\n}\nfunction processState(state) {\n    return Object.keys(state).reduce((aggr, key) => {\n        if (key === '__esModule') {\n            return aggr;\n        }\n        const originalDescriptor = Object.getOwnPropertyDescriptor(state, key);\n        if (originalDescriptor && 'get' in originalDescriptor) {\n            Object.defineProperty(aggr, key, originalDescriptor);\n            return aggr;\n        }\n        const value = state[key];\n        if (is_plain_obj__WEBPACK_IMPORTED_MODULE_0___default()(value)) {\n            aggr[key] = processState(value);\n        }\n        else {\n            Object.defineProperty(aggr, key, originalDescriptor);\n        }\n        return aggr;\n    }, is_plain_obj__WEBPACK_IMPORTED_MODULE_0___default()(state) ? {} : state);\n}\nfunction getFunctionName(func) {\n    return func.name || func.displayName || '';\n}\nfunction deepCopy(obj) {\n    if (obj instanceof _statemachine__WEBPACK_IMPORTED_MODULE_2__[\"StateMachine\"]) {\n        return obj.clone();\n    }\n    else if (is_plain_obj__WEBPACK_IMPORTED_MODULE_0___default()(obj)) {\n        return Object.keys(obj).reduce((aggr, key) => {\n            if (key === '__esModule') {\n                return aggr;\n            }\n            const originalDescriptor = Object.getOwnPropertyDescriptor(obj, key);\n            const isAGetter = originalDescriptor && 'get' in originalDescriptor;\n            const value = obj[key];\n            if (isAGetter) {\n                Object.defineProperty(aggr, key, originalDescriptor);\n            }\n            else {\n                aggr[key] = deepCopy(value);\n            }\n            return aggr;\n        }, {});\n    }\n    else if (Array.isArray(obj)) {\n        return obj.map((item) => deepCopy(item));\n    }\n    return obj;\n}\nconst getChangeMutationsDelimiter = '.';\nfunction getChangeMutations(stateA, stateB, path = [], mutations = []) {\n    const stateAKeys = Object.keys(stateA);\n    const stateBKeys = Object.keys(stateB);\n    stateAKeys.forEach((key) => {\n        if (!stateBKeys.includes(key)) {\n            mutations.push({\n                delimiter: getChangeMutationsDelimiter,\n                args: [],\n                path: path.concat(key).join('.'),\n                hasChangedValue: false,\n                method: 'unset',\n            });\n        }\n    });\n    stateBKeys.forEach((key) => {\n        if (is_plain_obj__WEBPACK_IMPORTED_MODULE_0___default()(stateA[key]) && is_plain_obj__WEBPACK_IMPORTED_MODULE_0___default()(stateB[key])) {\n            getChangeMutations(stateA[key], stateB[key], path.concat(key), mutations);\n        }\n        else if (stateA[key] !== stateB[key]) {\n            mutations.push({\n                delimiter: getChangeMutationsDelimiter,\n                args: [stateB[key]],\n                path: path.concat(key).join('.'),\n                hasChangedValue: false,\n                method: 'set'\n            });\n        }\n    });\n    return mutations;\n}\nfunction getActionPaths(actions = {}, currentPath = []) {\n    return Object.keys(actions).reduce((aggr, key) => {\n        if (typeof actions[key] === 'function') {\n            return aggr.concat(currentPath.concat(key).join('.'));\n        }\n        return aggr.concat(getActionPaths(actions[key], currentPath.concat(key)));\n    }, []);\n}\nfunction createActionsProxy(actions, cb) {\n    return new Proxy(actions, {\n        get(target, prop) {\n            if (prop === ORIGINAL_ACTIONS) {\n                return actions;\n            }\n            if (typeof target[prop] === 'function') {\n                return cb(target[prop]);\n            }\n            if (!target[prop]) {\n                return undefined;\n            }\n            return createActionsProxy(target[prop], cb);\n        },\n    });\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL292ZXJtaW5kL2VzL3V0aWxzLmpzPzNlZjgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXlDO0FBQ1U7QUFDTDtBQUN2QyxnQkFBZ0IsYUFBb0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDUCxZQUFZO0FBQ1osaUJBQWlCO0FBQ2pCLFVBQVU7QUFDVixZQUFZO0FBQ1osbUJBQW1CO0FBQ25CO0FBQ087QUFDUCwrQkFBK0IseURBQVEsUUFBUSxzREFBSztBQUNwRDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG1EQUFhO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssRUFBRSxtREFBYSxZQUFZO0FBQ2hDO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUCx1QkFBdUIsMERBQVk7QUFDbkM7QUFDQTtBQUNBLGFBQWEsbURBQWE7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsSUFBSTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLEtBQUs7QUFDTDtBQUNBLFlBQVksbURBQWEsaUJBQWlCLG1EQUFhO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ08sb0NBQW9DO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9vdmVybWluZC9lcy91dGlscy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpc1BsYWluT2JqZWN0IGZyb20gJ2lzLXBsYWluLW9iaic7XG5pbXBvcnQgeyBJU19QUk9YWSwgVkFMVUUgfSBmcm9tICdwcm94eS1zdGF0ZS10cmVlJztcbmltcG9ydCB7IFN0YXRlTWFjaGluZSB9IGZyb20gJy4vc3RhdGVtYWNoaW5lJztcbmV4cG9ydCBjb25zdCBJU19URVNUID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICd0ZXN0JztcbmV4cG9ydCBjb25zdCBJU19PUEVSQVRPUiA9IFN5bWJvbCgnb3BlcmF0b3InKTtcbmV4cG9ydCBjb25zdCBPUklHSU5BTF9BQ1RJT05TID0gU3ltYm9sKCdvcmlnaW5hX2FjdGlvbnMnKTtcbmV4cG9ydCBjb25zdCBFWEVDVVRJT04gPSBTeW1ib2woJ2V4ZWN1dGlvbicpO1xuZXhwb3J0IGNvbnN0IE1PREVfREVGQVVMVCA9IFN5bWJvbCgnTU9ERV9ERUZBVUxUJyk7XG5leHBvcnQgY29uc3QgTU9ERV9URVNUID0gU3ltYm9sKCdNT0RFX1RFU1QnKTtcbmV4cG9ydCBjb25zdCBNT0RFX1NTUiA9IFN5bWJvbCgnTU9ERV9TU1InKTtcbmV4cG9ydCBjbGFzcyBNb2NrZWRFdmVudEVtaXR0ZXIge1xuICAgIGVtaXQoKSB7IH1cbiAgICBlbWl0QXN5bmMoKSB7IH1cbiAgICBvbigpIHsgfVxuICAgIG9uY2UoKSB7IH1cbiAgICBhZGRMaXN0ZW5lcigpIHsgfVxufVxuZXhwb3J0IGNvbnN0IGpzb24gPSAob2JqKSA9PiB7XG4gICAgcmV0dXJuIGRlZXBDb3B5KG9iaiAmJiBvYmpbSVNfUFJPWFldID8gb2JqW1ZBTFVFXSA6IG9iaik7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIGlzUHJvbWlzZShtYXliZVByb21pc2UpIHtcbiAgICByZXR1cm4gKG1heWJlUHJvbWlzZSBpbnN0YW5jZW9mIFByb21pc2UgfHxcbiAgICAgICAgKG1heWJlUHJvbWlzZSAmJlxuICAgICAgICAgICAgdHlwZW9mIG1heWJlUHJvbWlzZS50aGVuID09PSAnZnVuY3Rpb24nICYmXG4gICAgICAgICAgICB0eXBlb2YgbWF5YmVQcm9taXNlLmNhdGNoID09PSAnZnVuY3Rpb24nKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gcHJvY2Vzc1N0YXRlKHN0YXRlKSB7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKHN0YXRlKS5yZWR1Y2UoKGFnZ3IsIGtleSkgPT4ge1xuICAgICAgICBpZiAoa2V5ID09PSAnX19lc01vZHVsZScpIHtcbiAgICAgICAgICAgIHJldHVybiBhZ2dyO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG9yaWdpbmFsRGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc3RhdGUsIGtleSk7XG4gICAgICAgIGlmIChvcmlnaW5hbERlc2NyaXB0b3IgJiYgJ2dldCcgaW4gb3JpZ2luYWxEZXNjcmlwdG9yKSB7XG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoYWdnciwga2V5LCBvcmlnaW5hbERlc2NyaXB0b3IpO1xuICAgICAgICAgICAgcmV0dXJuIGFnZ3I7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdmFsdWUgPSBzdGF0ZVtrZXldO1xuICAgICAgICBpZiAoaXNQbGFpbk9iamVjdCh2YWx1ZSkpIHtcbiAgICAgICAgICAgIGFnZ3Jba2V5XSA9IHByb2Nlc3NTdGF0ZSh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoYWdnciwga2V5LCBvcmlnaW5hbERlc2NyaXB0b3IpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhZ2dyO1xuICAgIH0sIGlzUGxhaW5PYmplY3Qoc3RhdGUpID8ge30gOiBzdGF0ZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0RnVuY3Rpb25OYW1lKGZ1bmMpIHtcbiAgICByZXR1cm4gZnVuYy5uYW1lIHx8IGZ1bmMuZGlzcGxheU5hbWUgfHwgJyc7XG59XG5leHBvcnQgZnVuY3Rpb24gZGVlcENvcHkob2JqKSB7XG4gICAgaWYgKG9iaiBpbnN0YW5jZW9mIFN0YXRlTWFjaGluZSkge1xuICAgICAgICByZXR1cm4gb2JqLmNsb25lKCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzUGxhaW5PYmplY3Qob2JqKSkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmtleXMob2JqKS5yZWR1Y2UoKGFnZ3IsIGtleSkgPT4ge1xuICAgICAgICAgICAgaWYgKGtleSA9PT0gJ19fZXNNb2R1bGUnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFnZ3I7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBvcmlnaW5hbERlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KTtcbiAgICAgICAgICAgIGNvbnN0IGlzQUdldHRlciA9IG9yaWdpbmFsRGVzY3JpcHRvciAmJiAnZ2V0JyBpbiBvcmlnaW5hbERlc2NyaXB0b3I7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IG9ialtrZXldO1xuICAgICAgICAgICAgaWYgKGlzQUdldHRlcikge1xuICAgICAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShhZ2dyLCBrZXksIG9yaWdpbmFsRGVzY3JpcHRvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBhZ2dyW2tleV0gPSBkZWVwQ29weSh2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gYWdncjtcbiAgICAgICAgfSwge30pO1xuICAgIH1cbiAgICBlbHNlIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHtcbiAgICAgICAgcmV0dXJuIG9iai5tYXAoKGl0ZW0pID0+IGRlZXBDb3B5KGl0ZW0pKTtcbiAgICB9XG4gICAgcmV0dXJuIG9iajtcbn1cbmNvbnN0IGdldENoYW5nZU11dGF0aW9uc0RlbGltaXRlciA9ICcuJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRDaGFuZ2VNdXRhdGlvbnMoc3RhdGVBLCBzdGF0ZUIsIHBhdGggPSBbXSwgbXV0YXRpb25zID0gW10pIHtcbiAgICBjb25zdCBzdGF0ZUFLZXlzID0gT2JqZWN0LmtleXMoc3RhdGVBKTtcbiAgICBjb25zdCBzdGF0ZUJLZXlzID0gT2JqZWN0LmtleXMoc3RhdGVCKTtcbiAgICBzdGF0ZUFLZXlzLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgICBpZiAoIXN0YXRlQktleXMuaW5jbHVkZXMoa2V5KSkge1xuICAgICAgICAgICAgbXV0YXRpb25zLnB1c2goe1xuICAgICAgICAgICAgICAgIGRlbGltaXRlcjogZ2V0Q2hhbmdlTXV0YXRpb25zRGVsaW1pdGVyLFxuICAgICAgICAgICAgICAgIGFyZ3M6IFtdLFxuICAgICAgICAgICAgICAgIHBhdGg6IHBhdGguY29uY2F0KGtleSkuam9pbignLicpLFxuICAgICAgICAgICAgICAgIGhhc0NoYW5nZWRWYWx1ZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgbWV0aG9kOiAndW5zZXQnLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBzdGF0ZUJLZXlzLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgICBpZiAoaXNQbGFpbk9iamVjdChzdGF0ZUFba2V5XSkgJiYgaXNQbGFpbk9iamVjdChzdGF0ZUJba2V5XSkpIHtcbiAgICAgICAgICAgIGdldENoYW5nZU11dGF0aW9ucyhzdGF0ZUFba2V5XSwgc3RhdGVCW2tleV0sIHBhdGguY29uY2F0KGtleSksIG11dGF0aW9ucyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoc3RhdGVBW2tleV0gIT09IHN0YXRlQltrZXldKSB7XG4gICAgICAgICAgICBtdXRhdGlvbnMucHVzaCh7XG4gICAgICAgICAgICAgICAgZGVsaW1pdGVyOiBnZXRDaGFuZ2VNdXRhdGlvbnNEZWxpbWl0ZXIsXG4gICAgICAgICAgICAgICAgYXJnczogW3N0YXRlQltrZXldXSxcbiAgICAgICAgICAgICAgICBwYXRoOiBwYXRoLmNvbmNhdChrZXkpLmpvaW4oJy4nKSxcbiAgICAgICAgICAgICAgICBoYXNDaGFuZ2VkVmFsdWU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIG1ldGhvZDogJ3NldCdcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIG11dGF0aW9ucztcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRBY3Rpb25QYXRocyhhY3Rpb25zID0ge30sIGN1cnJlbnRQYXRoID0gW10pIHtcbiAgICByZXR1cm4gT2JqZWN0LmtleXMoYWN0aW9ucykucmVkdWNlKChhZ2dyLCBrZXkpID0+IHtcbiAgICAgICAgaWYgKHR5cGVvZiBhY3Rpb25zW2tleV0gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHJldHVybiBhZ2dyLmNvbmNhdChjdXJyZW50UGF0aC5jb25jYXQoa2V5KS5qb2luKCcuJykpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhZ2dyLmNvbmNhdChnZXRBY3Rpb25QYXRocyhhY3Rpb25zW2tleV0sIGN1cnJlbnRQYXRoLmNvbmNhdChrZXkpKSk7XG4gICAgfSwgW10pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUFjdGlvbnNQcm94eShhY3Rpb25zLCBjYikge1xuICAgIHJldHVybiBuZXcgUHJveHkoYWN0aW9ucywge1xuICAgICAgICBnZXQodGFyZ2V0LCBwcm9wKSB7XG4gICAgICAgICAgICBpZiAocHJvcCA9PT0gT1JJR0lOQUxfQUNUSU9OUykge1xuICAgICAgICAgICAgICAgIHJldHVybiBhY3Rpb25zO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHR5cGVvZiB0YXJnZXRbcHJvcF0gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY2IodGFyZ2V0W3Byb3BdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghdGFyZ2V0W3Byb3BdKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjcmVhdGVBY3Rpb25zUHJveHkodGFyZ2V0W3Byb3BdLCBjYik7XG4gICAgICAgIH0sXG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/overmind/es/utils.js\n");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/process/browser.js\n");

/***/ }),

/***/ "./node_modules/proxy-state-tree/es/MutationTree.js":
/*!**********************************************************!*\
  !*** ./node_modules/proxy-state-tree/es/MutationTree.js ***!
  \**********************************************************/
/*! exports provided: MutationTree */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MutationTree\", function() { return MutationTree; });\n/* harmony import */ var _Proxyfier__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Proxyfier */ \"./node_modules/proxy-state-tree/es/Proxyfier.js\");\n\nclass MutationTree {\n    constructor(master, proxifier) {\n        this.mutationCallbacks = [];\n        this.mutations = [];\n        this.objectChanges = new Set();\n        this.isTracking = false;\n        this.isBlocking = false;\n        this.trackPathListeners = [];\n        this.isTracking = true;\n        this.master = master;\n        this.proxifier = proxifier || new _Proxyfier__WEBPACK_IMPORTED_MODULE_0__[\"Proxifier\"](this);\n        this.state = this.proxifier.proxify(master.sourceState, '');\n    }\n    trackPaths() {\n        const paths = new Set();\n        const listener = (path) => {\n            paths.add(path);\n        };\n        this.trackPathListeners.push(listener);\n        return () => {\n            this.trackPathListeners.splice(this.trackPathListeners.indexOf(listener), 1);\n            return paths;\n        };\n    }\n    getMutations() {\n        const mutations = this.mutations.slice();\n        this.mutations.length = 0;\n        return mutations;\n    }\n    getObjectChanges() {\n        const objectChanges = new Set([...this.objectChanges]);\n        this.objectChanges.clear();\n        return objectChanges;\n    }\n    addMutation(mutation, objectChangePath) {\n        const currentFlushId = this.master.currentFlushId;\n        this.mutations.push(mutation);\n        if (objectChangePath) {\n            this.objectChanges.add(objectChangePath);\n        }\n        for (let cb of this.master.mutationCallbacks) {\n            cb(mutation, new Set(objectChangePath ? [mutation.path, objectChangePath] : [mutation.path]), currentFlushId);\n        }\n        for (let callback of this.mutationCallbacks) {\n            callback(mutation, new Set(objectChangePath ? [mutation.path, objectChangePath] : [mutation.path]), currentFlushId);\n        }\n    }\n    flush(isAsync = false) {\n        return this.master.flush(this, isAsync);\n    }\n    onMutation(callback) {\n        this.mutationCallbacks.push(callback);\n    }\n    canMutate() {\n        return this.isTracking && !this.isBlocking;\n    }\n    canTrack() {\n        return false;\n    }\n    blockMutations() {\n        this.isBlocking = true;\n    }\n    enableMutations() {\n        this.isBlocking = false;\n    }\n    dispose() {\n        this.isTracking = false;\n        this.mutationCallbacks.length = 0;\n        this.proxifier = this.master.proxifier;\n        return this;\n    }\n}\n//# sourceMappingURL=MutationTree.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3h5LXN0YXRlLXRyZWUvZXMvTXV0YXRpb25UcmVlLmpzPzMzODMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQXdDO0FBQ2pDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLG9EQUFTO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJveHktc3RhdGUtdHJlZS9lcy9NdXRhdGlvblRyZWUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcm94aWZpZXIgfSBmcm9tICcuL1Byb3h5Zmllcic7XG5leHBvcnQgY2xhc3MgTXV0YXRpb25UcmVlIHtcbiAgICBjb25zdHJ1Y3RvcihtYXN0ZXIsIHByb3hpZmllcikge1xuICAgICAgICB0aGlzLm11dGF0aW9uQ2FsbGJhY2tzID0gW107XG4gICAgICAgIHRoaXMubXV0YXRpb25zID0gW107XG4gICAgICAgIHRoaXMub2JqZWN0Q2hhbmdlcyA9IG5ldyBTZXQoKTtcbiAgICAgICAgdGhpcy5pc1RyYWNraW5nID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaXNCbG9ja2luZyA9IGZhbHNlO1xuICAgICAgICB0aGlzLnRyYWNrUGF0aExpc3RlbmVycyA9IFtdO1xuICAgICAgICB0aGlzLmlzVHJhY2tpbmcgPSB0cnVlO1xuICAgICAgICB0aGlzLm1hc3RlciA9IG1hc3RlcjtcbiAgICAgICAgdGhpcy5wcm94aWZpZXIgPSBwcm94aWZpZXIgfHwgbmV3IFByb3hpZmllcih0aGlzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHRoaXMucHJveGlmaWVyLnByb3hpZnkobWFzdGVyLnNvdXJjZVN0YXRlLCAnJyk7XG4gICAgfVxuICAgIHRyYWNrUGF0aHMoKSB7XG4gICAgICAgIGNvbnN0IHBhdGhzID0gbmV3IFNldCgpO1xuICAgICAgICBjb25zdCBsaXN0ZW5lciA9IChwYXRoKSA9PiB7XG4gICAgICAgICAgICBwYXRocy5hZGQocGF0aCk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMudHJhY2tQYXRoTGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy50cmFja1BhdGhMaXN0ZW5lcnMuc3BsaWNlKHRoaXMudHJhY2tQYXRoTGlzdGVuZXJzLmluZGV4T2YobGlzdGVuZXIpLCAxKTtcbiAgICAgICAgICAgIHJldHVybiBwYXRocztcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZ2V0TXV0YXRpb25zKCkge1xuICAgICAgICBjb25zdCBtdXRhdGlvbnMgPSB0aGlzLm11dGF0aW9ucy5zbGljZSgpO1xuICAgICAgICB0aGlzLm11dGF0aW9ucy5sZW5ndGggPSAwO1xuICAgICAgICByZXR1cm4gbXV0YXRpb25zO1xuICAgIH1cbiAgICBnZXRPYmplY3RDaGFuZ2VzKCkge1xuICAgICAgICBjb25zdCBvYmplY3RDaGFuZ2VzID0gbmV3IFNldChbLi4udGhpcy5vYmplY3RDaGFuZ2VzXSk7XG4gICAgICAgIHRoaXMub2JqZWN0Q2hhbmdlcy5jbGVhcigpO1xuICAgICAgICByZXR1cm4gb2JqZWN0Q2hhbmdlcztcbiAgICB9XG4gICAgYWRkTXV0YXRpb24obXV0YXRpb24sIG9iamVjdENoYW5nZVBhdGgpIHtcbiAgICAgICAgY29uc3QgY3VycmVudEZsdXNoSWQgPSB0aGlzLm1hc3Rlci5jdXJyZW50Rmx1c2hJZDtcbiAgICAgICAgdGhpcy5tdXRhdGlvbnMucHVzaChtdXRhdGlvbik7XG4gICAgICAgIGlmIChvYmplY3RDaGFuZ2VQYXRoKSB7XG4gICAgICAgICAgICB0aGlzLm9iamVjdENoYW5nZXMuYWRkKG9iamVjdENoYW5nZVBhdGgpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAobGV0IGNiIG9mIHRoaXMubWFzdGVyLm11dGF0aW9uQ2FsbGJhY2tzKSB7XG4gICAgICAgICAgICBjYihtdXRhdGlvbiwgbmV3IFNldChvYmplY3RDaGFuZ2VQYXRoID8gW211dGF0aW9uLnBhdGgsIG9iamVjdENoYW5nZVBhdGhdIDogW211dGF0aW9uLnBhdGhdKSwgY3VycmVudEZsdXNoSWQpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAobGV0IGNhbGxiYWNrIG9mIHRoaXMubXV0YXRpb25DYWxsYmFja3MpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKG11dGF0aW9uLCBuZXcgU2V0KG9iamVjdENoYW5nZVBhdGggPyBbbXV0YXRpb24ucGF0aCwgb2JqZWN0Q2hhbmdlUGF0aF0gOiBbbXV0YXRpb24ucGF0aF0pLCBjdXJyZW50Rmx1c2hJZCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZmx1c2goaXNBc3luYyA9IGZhbHNlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1hc3Rlci5mbHVzaCh0aGlzLCBpc0FzeW5jKTtcbiAgICB9XG4gICAgb25NdXRhdGlvbihjYWxsYmFjaykge1xuICAgICAgICB0aGlzLm11dGF0aW9uQ2FsbGJhY2tzLnB1c2goY2FsbGJhY2spO1xuICAgIH1cbiAgICBjYW5NdXRhdGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmlzVHJhY2tpbmcgJiYgIXRoaXMuaXNCbG9ja2luZztcbiAgICB9XG4gICAgY2FuVHJhY2soKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgYmxvY2tNdXRhdGlvbnMoKSB7XG4gICAgICAgIHRoaXMuaXNCbG9ja2luZyA9IHRydWU7XG4gICAgfVxuICAgIGVuYWJsZU11dGF0aW9ucygpIHtcbiAgICAgICAgdGhpcy5pc0Jsb2NraW5nID0gZmFsc2U7XG4gICAgfVxuICAgIGRpc3Bvc2UoKSB7XG4gICAgICAgIHRoaXMuaXNUcmFja2luZyA9IGZhbHNlO1xuICAgICAgICB0aGlzLm11dGF0aW9uQ2FsbGJhY2tzLmxlbmd0aCA9IDA7XG4gICAgICAgIHRoaXMucHJveGlmaWVyID0gdGhpcy5tYXN0ZXIucHJveGlmaWVyO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1NdXRhdGlvblRyZWUuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proxy-state-tree/es/MutationTree.js\n");

/***/ }),

/***/ "./node_modules/proxy-state-tree/es/Proxyfier.js":
/*!*******************************************************!*\
  !*** ./node_modules/proxy-state-tree/es/Proxyfier.js ***!
  \*******************************************************/
/*! exports provided: IS_PROXY, PATH, VALUE, PROXY_TREE, Proxifier */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IS_PROXY\", function() { return IS_PROXY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PATH\", function() { return PATH; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VALUE\", function() { return VALUE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PROXY_TREE\", function() { return PROXY_TREE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Proxifier\", function() { return Proxifier; });\n/* harmony import */ var is_plain_obj__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! is-plain-obj */ \"./node_modules/is-plain-obj/index.js\");\n/* harmony import */ var is_plain_obj__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(is_plain_obj__WEBPACK_IMPORTED_MODULE_0__);\n\nconst IS_PROXY = Symbol('IS_PROXY');\nconst PATH = Symbol('PATH');\nconst VALUE = Symbol('VALUE');\nconst PROXY_TREE = Symbol('PROXY_TREE');\nconst arrayMutations = new Set([\n    'push',\n    'shift',\n    'pop',\n    'unshift',\n    'splice',\n    'reverse',\n    'sort',\n    'copyWithin',\n]);\nconst getValue = (proxyOrValue) => proxyOrValue && proxyOrValue[IS_PROXY] ? proxyOrValue[VALUE] : proxyOrValue;\nconst isClass = (value) => typeof value === 'object' && value !== null && !Array.isArray(value) && value.constructor.name !== 'Object' && Object.isExtensible(value);\nclass Proxifier {\n    constructor(tree) {\n        this.tree = tree;\n        this.CACHED_PROXY = Symbol('CACHED_PROXY');\n        this.delimiter = tree.master.options.delimiter;\n    }\n    concat(path, prop) {\n        return path ? path + this.delimiter + prop : prop;\n    }\n    ensureMutationTrackingIsEnabled(path) {\n        if (false)\n            {}\n        if (this.tree.master.options.devmode && !this.tree.canMutate()) {\n            throw new Error(`proxy-state-tree - You are mutating the path \"${path}\", but it is not allowed. The following could have happened:\n        \n        - The mutation is explicitly being blocket\n        - You are passing state to a 3rd party tool trying to manipulate the state\n        - You are running asynchronous code and forgot to \"await\" its execution\n        `);\n        }\n    }\n    isDefaultProxifier() {\n        return this.tree.proxifier === this.tree.master.proxifier;\n    }\n    ensureValueDosntExistInStateTreeElsewhere(value) {\n        if (false)\n            {}\n        if (value && value[IS_PROXY] === true) {\n            throw new Error(`proxy-state-tree - You are trying to insert a value that already exists in the state tree on path \"${value[PATH]}\"`);\n        }\n        return value;\n    }\n    trackPath(path) {\n        if (!this.tree.canTrack()) {\n            return;\n        }\n        if (this.isDefaultProxifier()) {\n            const trackStateTree = this.tree.master.currentTree;\n            if (!trackStateTree) {\n                return;\n            }\n            trackStateTree.addTrackingPath(path);\n        }\n        else {\n            ;\n            this.tree.addTrackingPath(path);\n        }\n    }\n    // With tracking trees we want to ensure that we are always\n    // on the currently tracked tree. This ensures when we access\n    // a tracking proxy that is not part of the current tracking tree (pass as prop)\n    // we move the ownership to the current tracker\n    getTrackingTree() {\n        if (this.tree.master.currentTree && this.isDefaultProxifier()) {\n            return this.tree.master.currentTree;\n        }\n        if (!this.tree.canTrack()) {\n            return null;\n        }\n        if (this.tree.canTrack()) {\n            return this.tree;\n        }\n        return null;\n    }\n    getMutationTree() {\n        return this.tree.master.mutationTree || this.tree;\n    }\n    isProxyCached(value, path) {\n        return (value[this.CACHED_PROXY] &&\n            String(value[this.CACHED_PROXY][PATH]) === String(path));\n    }\n    createArrayProxy(value, path) {\n        if (this.isProxyCached(value, path)) {\n            return value[this.CACHED_PROXY];\n        }\n        const proxifier = this;\n        const proxy = new Proxy(value, {\n            get(target, prop) {\n                if (prop === IS_PROXY)\n                    return true;\n                if (prop === PATH)\n                    return path;\n                if (prop === VALUE)\n                    return value;\n                if (prop === 'indexOf') {\n                    return (searchTerm, offset) => value.indexOf(getValue(searchTerm), getValue(offset));\n                }\n                if (prop === 'length' ||\n                    (typeof target[prop] === 'function' &&\n                        !arrayMutations.has(String(prop))) ||\n                    typeof prop === 'symbol' || target[prop] instanceof Date) {\n                    return target[prop];\n                }\n                const trackingTree = proxifier.getTrackingTree();\n                const nestedPath = proxifier.concat(path, prop);\n                const currentTree = trackingTree || proxifier.tree;\n                trackingTree && trackingTree.proxifier.trackPath(nestedPath);\n                currentTree.trackPathListeners.forEach((cb) => cb(nestedPath));\n                const method = String(prop);\n                if (arrayMutations.has(method)) {\n                    /* @__PURE__ */ proxifier.ensureMutationTrackingIsEnabled(nestedPath);\n                    return (...args) => {\n                        const mutationTree = proxifier.getMutationTree();\n                        let result;\n                        if (false) {}\n                        else {\n                            result = target[prop](...args.map((arg) => \n                            /* @__PURE__ */ proxifier.ensureValueDosntExistInStateTreeElsewhere(arg)));\n                        }\n                        mutationTree.addMutation({\n                            method,\n                            path: path,\n                            delimiter: proxifier.delimiter,\n                            args: args,\n                            hasChangedValue: true,\n                        });\n                        return result;\n                    };\n                }\n                if (target[prop] === undefined) {\n                    return undefined;\n                }\n                return proxifier.proxify(target[prop], nestedPath);\n            },\n            set(target, prop, value) {\n                const nestedPath = proxifier.concat(path, prop);\n                /* @__PURE__ */ proxifier.ensureMutationTrackingIsEnabled(nestedPath);\n                /* @__PURE__ */ proxifier.ensureValueDosntExistInStateTreeElsewhere(value);\n                const mutationTree = proxifier.getMutationTree();\n                const result = Reflect.set(target, prop, value);\n                mutationTree.addMutation({\n                    method: 'set',\n                    path: nestedPath,\n                    args: [value],\n                    delimiter: proxifier.delimiter,\n                    hasChangedValue: true,\n                });\n                return result;\n            },\n        });\n        Object.defineProperty(value, this.CACHED_PROXY, {\n            value: proxy,\n            configurable: true,\n        });\n        return proxy;\n    }\n    createObjectProxy(object, path) {\n        if (this.isProxyCached(object, path)) {\n            return object[this.CACHED_PROXY];\n        }\n        const proxifier = this;\n        const proxy = new Proxy(object, {\n            get(target, prop) {\n                if (prop === IS_PROXY)\n                    return true;\n                if (prop === PATH)\n                    return path;\n                if (prop === VALUE)\n                    return object;\n                if (prop === PROXY_TREE)\n                    return proxifier.tree;\n                if (typeof prop === 'symbol' || prop in Object.prototype || target[prop] instanceof Date)\n                    return target[prop];\n                const descriptor = Object.getOwnPropertyDescriptor(target, prop) || (Object.getPrototypeOf(target) && Object.getOwnPropertyDescriptor(Object.getPrototypeOf(target), prop));\n                if (descriptor && 'get' in descriptor) {\n                    const value = descriptor.get.call(proxy);\n                    if (proxifier.tree.master.options.devmode &&\n                        proxifier.tree.master.options.onGetter) {\n                        proxifier.tree.master.options.onGetter(proxifier.concat(path, prop), value);\n                    }\n                    return value;\n                }\n                const trackingTree = proxifier.getTrackingTree();\n                const targetValue = target[prop];\n                const nestedPath = proxifier.concat(path, prop);\n                const currentTree = trackingTree || proxifier.tree;\n                if (typeof targetValue === 'function') {\n                    if (proxifier.tree.master.options.onGetFunction) {\n                        return proxifier.tree.master.options.onGetFunction(trackingTree || proxifier.tree, nestedPath, target, prop);\n                    }\n                    return isClass(target) ? targetValue : targetValue.call(target, proxifier.tree, nestedPath);\n                }\n                else {\n                    currentTree.trackPathListeners.forEach((cb) => cb(nestedPath));\n                    trackingTree && trackingTree.proxifier.trackPath(nestedPath);\n                }\n                if (targetValue === undefined) {\n                    return undefined;\n                }\n                return proxifier.proxify(targetValue, nestedPath);\n            },\n            set(target, prop, value) {\n                const nestedPath = proxifier.concat(path, prop);\n                /* @__PURE__ */ proxifier.ensureMutationTrackingIsEnabled(nestedPath);\n                /* @__PURE__ */ proxifier.ensureValueDosntExistInStateTreeElsewhere(value);\n                let objectChangePath;\n                if (!(prop in target)) {\n                    objectChangePath = path;\n                }\n                const mutationTree = proxifier.getMutationTree();\n                const existingValue = target[prop];\n                if (typeof value === 'function' && proxifier.tree.master.options.onSetFunction) {\n                    value = proxifier.tree.master.options.onSetFunction(proxifier.getTrackingTree() || proxifier.tree, nestedPath, target, prop, value);\n                }\n                const hasChangedValue = existingValue !== value;\n                const result = Reflect.set(target, prop, value);\n                mutationTree.addMutation({\n                    method: 'set',\n                    path: nestedPath,\n                    args: [value],\n                    delimiter: proxifier.delimiter,\n                    hasChangedValue\n                }, objectChangePath);\n                return result;\n            },\n            deleteProperty(target, prop) {\n                const nestedPath = proxifier.concat(path, prop);\n                /* @__PURE__ */ proxifier.ensureMutationTrackingIsEnabled(nestedPath);\n                let objectChangePath;\n                if (prop in target) {\n                    objectChangePath = path;\n                }\n                const mutationTree = proxifier.getMutationTree();\n                delete target[prop];\n                mutationTree.addMutation({\n                    method: 'unset',\n                    path: nestedPath,\n                    args: [],\n                    delimiter: proxifier.delimiter,\n                    hasChangedValue: true,\n                }, objectChangePath);\n                return true;\n            },\n        });\n        Object.defineProperty(object, this.CACHED_PROXY, {\n            value: proxy,\n            configurable: true,\n        });\n        return proxy;\n    }\n    proxify(value, path) {\n        if (value) {\n            const isUnmatchingProxy = value[IS_PROXY] &&\n                (String(value[PATH]) !== String(path) ||\n                    value[VALUE][this.CACHED_PROXY] !== value);\n            if (isUnmatchingProxy) {\n                return this.proxify(value[VALUE], path);\n            }\n            else if (value[IS_PROXY]) {\n                return value;\n            }\n            else if (Array.isArray(value)) {\n                return this.createArrayProxy(value, path);\n            }\n            else if (is_plain_obj__WEBPACK_IMPORTED_MODULE_0___default()(value) || isClass(value)) {\n                return this.createObjectProxy(value, path);\n            }\n        }\n        return value;\n    }\n}\n//# sourceMappingURL=Proxyfier.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/proxy-state-tree/es/Proxyfier.js\n");

/***/ }),

/***/ "./node_modules/proxy-state-tree/es/TrackStateTree.js":
/*!************************************************************!*\
  !*** ./node_modules/proxy-state-tree/es/TrackStateTree.js ***!
  \************************************************************/
/*! exports provided: TrackStateTree */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TrackStateTree\", function() { return TrackStateTree; });\nclass TrackStateTree {\n    constructor(master) {\n        this.pathDependencies = new Set();\n        this.shouldTrack = false;\n        this.trackPathListeners = [];\n        this.master = master;\n        this.proxifier = master.proxifier;\n        this.state = master.state;\n    }\n    trackPaths() {\n        const paths = new Set();\n        const listener = (path) => {\n            paths.add(path);\n        };\n        this.trackPathListeners.push(listener);\n        return () => {\n            this.trackPathListeners.splice(this.trackPathListeners.indexOf(listener), 1);\n            return paths;\n        };\n    }\n    canMutate() {\n        return false;\n    }\n    canTrack() {\n        return true;\n    }\n    addTrackingPath(path) {\n        if (!this.shouldTrack) {\n            return;\n        }\n        this.pathDependencies.add(path);\n        if (this.callback) {\n            this.master.addPathDependency(path, this.callback);\n        }\n    }\n    track(cb) {\n        this.master.changeTrackStateTree(this);\n        this.shouldTrack = true;\n        this.clearTracking();\n        if (cb) {\n            this.callback = (...args) => {\n                if (!this.callback) {\n                    return;\n                }\n                cb(...args);\n            };\n        }\n        return this;\n    }\n    clearTracking() {\n        if (this.callback) {\n            for (let path of this.pathDependencies) {\n                this.master.removePathDependency(path, this.callback);\n            }\n        }\n        this.pathDependencies.clear();\n    }\n    stopTracking() {\n        this.shouldTrack = false;\n    }\n    trackScope(scope, cb) {\n        const previousPreviousTree = this.master.previousTree;\n        const previousCurrentTree = this.master.currentTree;\n        this.master.currentTree = this;\n        this.track(cb);\n        const result = scope(this);\n        this.master.currentTree = previousCurrentTree;\n        this.master.previousTree = previousPreviousTree;\n        this.stopTracking();\n        return result;\n    }\n    dispose() {\n        if (!this.callback) {\n            this.pathDependencies.clear();\n            return this;\n        }\n        this.clearTracking();\n        this.callback = null;\n        this.proxifier = this.master.proxifier;\n        if (this.master.currentTree === this) {\n            this.master.currentTree = null;\n        }\n        return this;\n    }\n}\n//# sourceMappingURL=TrackStateTree.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3h5LXN0YXRlLXRyZWUvZXMvVHJhY2tTdGF0ZVRyZWUuanM/NmIzOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9wcm94eS1zdGF0ZS10cmVlL2VzL1RyYWNrU3RhdGVUcmVlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIFRyYWNrU3RhdGVUcmVlIHtcbiAgICBjb25zdHJ1Y3RvcihtYXN0ZXIpIHtcbiAgICAgICAgdGhpcy5wYXRoRGVwZW5kZW5jaWVzID0gbmV3IFNldCgpO1xuICAgICAgICB0aGlzLnNob3VsZFRyYWNrID0gZmFsc2U7XG4gICAgICAgIHRoaXMudHJhY2tQYXRoTGlzdGVuZXJzID0gW107XG4gICAgICAgIHRoaXMubWFzdGVyID0gbWFzdGVyO1xuICAgICAgICB0aGlzLnByb3hpZmllciA9IG1hc3Rlci5wcm94aWZpZXI7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBtYXN0ZXIuc3RhdGU7XG4gICAgfVxuICAgIHRyYWNrUGF0aHMoKSB7XG4gICAgICAgIGNvbnN0IHBhdGhzID0gbmV3IFNldCgpO1xuICAgICAgICBjb25zdCBsaXN0ZW5lciA9IChwYXRoKSA9PiB7XG4gICAgICAgICAgICBwYXRocy5hZGQocGF0aCk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMudHJhY2tQYXRoTGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy50cmFja1BhdGhMaXN0ZW5lcnMuc3BsaWNlKHRoaXMudHJhY2tQYXRoTGlzdGVuZXJzLmluZGV4T2YobGlzdGVuZXIpLCAxKTtcbiAgICAgICAgICAgIHJldHVybiBwYXRocztcbiAgICAgICAgfTtcbiAgICB9XG4gICAgY2FuTXV0YXRlKCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGNhblRyYWNrKCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgYWRkVHJhY2tpbmdQYXRoKHBhdGgpIHtcbiAgICAgICAgaWYgKCF0aGlzLnNob3VsZFRyYWNrKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wYXRoRGVwZW5kZW5jaWVzLmFkZChwYXRoKTtcbiAgICAgICAgaWYgKHRoaXMuY2FsbGJhY2spIHtcbiAgICAgICAgICAgIHRoaXMubWFzdGVyLmFkZFBhdGhEZXBlbmRlbmN5KHBhdGgsIHRoaXMuY2FsbGJhY2spO1xuICAgICAgICB9XG4gICAgfVxuICAgIHRyYWNrKGNiKSB7XG4gICAgICAgIHRoaXMubWFzdGVyLmNoYW5nZVRyYWNrU3RhdGVUcmVlKHRoaXMpO1xuICAgICAgICB0aGlzLnNob3VsZFRyYWNrID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5jbGVhclRyYWNraW5nKCk7XG4gICAgICAgIGlmIChjYikge1xuICAgICAgICAgICAgdGhpcy5jYWxsYmFjayA9ICguLi5hcmdzKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2IoLi4uYXJncyk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBjbGVhclRyYWNraW5nKCkge1xuICAgICAgICBpZiAodGhpcy5jYWxsYmFjaykge1xuICAgICAgICAgICAgZm9yIChsZXQgcGF0aCBvZiB0aGlzLnBhdGhEZXBlbmRlbmNpZXMpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm1hc3Rlci5yZW1vdmVQYXRoRGVwZW5kZW5jeShwYXRoLCB0aGlzLmNhbGxiYWNrKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLnBhdGhEZXBlbmRlbmNpZXMuY2xlYXIoKTtcbiAgICB9XG4gICAgc3RvcFRyYWNraW5nKCkge1xuICAgICAgICB0aGlzLnNob3VsZFRyYWNrID0gZmFsc2U7XG4gICAgfVxuICAgIHRyYWNrU2NvcGUoc2NvcGUsIGNiKSB7XG4gICAgICAgIGNvbnN0IHByZXZpb3VzUHJldmlvdXNUcmVlID0gdGhpcy5tYXN0ZXIucHJldmlvdXNUcmVlO1xuICAgICAgICBjb25zdCBwcmV2aW91c0N1cnJlbnRUcmVlID0gdGhpcy5tYXN0ZXIuY3VycmVudFRyZWU7XG4gICAgICAgIHRoaXMubWFzdGVyLmN1cnJlbnRUcmVlID0gdGhpcztcbiAgICAgICAgdGhpcy50cmFjayhjYik7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHNjb3BlKHRoaXMpO1xuICAgICAgICB0aGlzLm1hc3Rlci5jdXJyZW50VHJlZSA9IHByZXZpb3VzQ3VycmVudFRyZWU7XG4gICAgICAgIHRoaXMubWFzdGVyLnByZXZpb3VzVHJlZSA9IHByZXZpb3VzUHJldmlvdXNUcmVlO1xuICAgICAgICB0aGlzLnN0b3BUcmFja2luZygpO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICBkaXNwb3NlKCkge1xuICAgICAgICBpZiAoIXRoaXMuY2FsbGJhY2spIHtcbiAgICAgICAgICAgIHRoaXMucGF0aERlcGVuZGVuY2llcy5jbGVhcigpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jbGVhclRyYWNraW5nKCk7XG4gICAgICAgIHRoaXMuY2FsbGJhY2sgPSBudWxsO1xuICAgICAgICB0aGlzLnByb3hpZmllciA9IHRoaXMubWFzdGVyLnByb3hpZmllcjtcbiAgICAgICAgaWYgKHRoaXMubWFzdGVyLmN1cnJlbnRUcmVlID09PSB0aGlzKSB7XG4gICAgICAgICAgICB0aGlzLm1hc3Rlci5jdXJyZW50VHJlZSA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VHJhY2tTdGF0ZVRyZWUuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proxy-state-tree/es/TrackStateTree.js\n");

/***/ }),

/***/ "./node_modules/proxy-state-tree/es/index.js":
/*!***************************************************!*\
  !*** ./node_modules/proxy-state-tree/es/index.js ***!
  \***************************************************/
/*! exports provided: IS_PROXY, PROXY_TREE, VALUE, PATH, TrackStateTree, MutationTree, ProxyStateTree */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ProxyStateTree\", function() { return ProxyStateTree; });\n/* harmony import */ var _MutationTree__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MutationTree */ \"./node_modules/proxy-state-tree/es/MutationTree.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MutationTree\", function() { return _MutationTree__WEBPACK_IMPORTED_MODULE_0__[\"MutationTree\"]; });\n\n/* harmony import */ var _Proxyfier__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Proxyfier */ \"./node_modules/proxy-state-tree/es/Proxyfier.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"IS_PROXY\", function() { return _Proxyfier__WEBPACK_IMPORTED_MODULE_1__[\"IS_PROXY\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PROXY_TREE\", function() { return _Proxyfier__WEBPACK_IMPORTED_MODULE_1__[\"PROXY_TREE\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"VALUE\", function() { return _Proxyfier__WEBPACK_IMPORTED_MODULE_1__[\"VALUE\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PATH\", function() { return _Proxyfier__WEBPACK_IMPORTED_MODULE_1__[\"PATH\"]; });\n\n/* harmony import */ var _TrackStateTree__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TrackStateTree */ \"./node_modules/proxy-state-tree/es/TrackStateTree.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TrackStateTree\", function() { return _TrackStateTree__WEBPACK_IMPORTED_MODULE_2__[\"TrackStateTree\"]; });\n\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types */ \"./node_modules/proxy-state-tree/es/types.js\");\n/* empty/unused harmony star reexport */\n\n\n\n\nclass ProxyStateTree {\n    constructor(state, options = {}) {\n        this.cache = {\n            mutationTree: [],\n            trackStateTree: [],\n        };\n        this.flushCallbacks = [];\n        this.mutationCallbacks = [];\n        this.currentFlushId = 0;\n        this.pathDependencies = {};\n        if (typeof options.devmode === 'undefined') {\n            options.devmode = true;\n        }\n        if (!options.delimiter) {\n            options.delimiter = '.';\n        }\n        this.master = this;\n        this.sourceState = state;\n        this.options = options;\n        this.createTrackStateProxifier();\n    }\n    /*\n      We create a base proxifier for tracking state. That means there is one\n      proxifier for all track state trees. This works because the actual tracking\n      refers to the current tree on \"master\"\n    */\n    createTrackStateProxifier() {\n        const trackStateTree = new _TrackStateTree__WEBPACK_IMPORTED_MODULE_2__[\"TrackStateTree\"](this);\n        this.proxifier = trackStateTree.proxifier = new _Proxyfier__WEBPACK_IMPORTED_MODULE_1__[\"Proxifier\"](trackStateTree);\n        this.state = trackStateTree.state = this.proxifier.proxify(this.sourceState, '');\n    }\n    getMutationTree() {\n        if (!this.options.devmode) {\n            return (this.mutationTree =\n                this.mutationTree || new _MutationTree__WEBPACK_IMPORTED_MODULE_0__[\"MutationTree\"](this, this.proxifier));\n        }\n        const tree = this.cache.mutationTree.pop() || new _MutationTree__WEBPACK_IMPORTED_MODULE_0__[\"MutationTree\"](this);\n        return tree;\n    }\n    getTrackStateTree() {\n        return this.cache.trackStateTree.pop() || new _TrackStateTree__WEBPACK_IMPORTED_MODULE_2__[\"TrackStateTree\"](this);\n    }\n    getTrackStateTreeWithProxifier() {\n        const tree = this.getTrackStateTree();\n        tree.proxifier = new _Proxyfier__WEBPACK_IMPORTED_MODULE_1__[\"Proxifier\"](tree);\n        tree.state = tree.proxifier.proxify(this.sourceState, '');\n        return tree;\n    }\n    changeTrackStateTree(tree) {\n        this.previousTree = this.currentTree;\n        this.currentTree = tree;\n    }\n    disposeTree(tree) {\n        if (tree instanceof _MutationTree__WEBPACK_IMPORTED_MODULE_0__[\"MutationTree\"]) {\n            this.cache.mutationTree.push(tree.dispose());\n        }\n        else if (tree instanceof _TrackStateTree__WEBPACK_IMPORTED_MODULE_2__[\"TrackStateTree\"]) {\n            this.cache.trackStateTree.push(tree.dispose());\n        }\n    }\n    onMutation(callback) {\n        this.mutationCallbacks.push(callback);\n        return () => {\n            this.mutationCallbacks.splice(this.mutationCallbacks.indexOf(callback), 1);\n        };\n    }\n    forceFlush() {\n        const emptyMutations = [];\n        const emptyPaths = [];\n        for (let key in this.pathDependencies) {\n            const callbacks = this.pathDependencies[key];\n            callbacks.forEach((callback) => {\n                callback(emptyMutations, emptyPaths, this.currentFlushId++, false);\n            });\n        }\n    }\n    flush(trees, isAsync = false) {\n        let changes;\n        if (Array.isArray(trees)) {\n            changes = trees.reduce((aggr, tree) => ({\n                mutations: aggr.mutations.concat(tree.getMutations()),\n                objectChanges: new Set([\n                    ...aggr.objectChanges,\n                    ...tree.getObjectChanges(),\n                ]),\n            }), {\n                mutations: [],\n                objectChanges: new Set(),\n            });\n        }\n        else {\n            changes = {\n                mutations: trees.getMutations(),\n                objectChanges: trees.getObjectChanges(),\n            };\n        }\n        if (!changes.mutations.length && !changes.objectChanges.size) {\n            return {\n                mutations: [],\n                flushId: null,\n            };\n        }\n        const paths = new Set();\n        const pathCallbacksToCall = new Set();\n        const flushId = this.currentFlushId++;\n        for (let objectChange of changes.objectChanges) {\n            if (this.pathDependencies[objectChange]) {\n                paths.add(objectChange);\n            }\n        }\n        for (let mutation of changes.mutations) {\n            if (mutation.hasChangedValue) {\n                paths.add(mutation.path);\n            }\n        }\n        // Sort so that parent paths are called first\n        const sortedPaths = Array.from(paths).sort();\n        for (let path of sortedPaths) {\n            if (this.pathDependencies[path]) {\n                for (let callback of this.pathDependencies[path]) {\n                    pathCallbacksToCall.add(callback);\n                }\n            }\n        }\n        for (let callback of pathCallbacksToCall) {\n            callback(changes.mutations, sortedPaths, flushId, isAsync);\n        }\n        // We have to ensure that we iterate all callbacks. One flush might\n        // lead to a change of the array (disposing), which means something\n        // might be skipped. But we still want to allow removal of callbacks,\n        // we just do not want to skip any, which is why we still check if it\n        // exists in the original array\n        const flushCallbacks = this.flushCallbacks.slice();\n        for (let callback of flushCallbacks) {\n            if (this.flushCallbacks.includes(callback)) {\n                callback(changes.mutations, sortedPaths, flushId, isAsync);\n            }\n        }\n        paths.clear();\n        pathCallbacksToCall.clear();\n        return {\n            mutations: changes.mutations,\n            flushId,\n        };\n    }\n    onFlush(callback) {\n        this.flushCallbacks.push(callback);\n        return () => this.flushCallbacks.splice(this.flushCallbacks.indexOf(callback), 1);\n    }\n    rescope(value, tree) {\n        return value && value[_Proxyfier__WEBPACK_IMPORTED_MODULE_1__[\"IS_PROXY\"]]\n            ? tree.proxifier.proxify(value[_Proxyfier__WEBPACK_IMPORTED_MODULE_1__[\"VALUE\"]], value[_Proxyfier__WEBPACK_IMPORTED_MODULE_1__[\"PATH\"]])\n            : value;\n    }\n    addPathDependency(path, callback) {\n        if (!this.pathDependencies[path]) {\n            this.pathDependencies[path] = new Set();\n        }\n        this.pathDependencies[path].add(callback);\n    }\n    removePathDependency(path, callback) {\n        this.pathDependencies[path].delete(callback);\n        if (!this.pathDependencies[path].size) {\n            delete this.pathDependencies[path];\n        }\n    }\n    toJSON() {\n        return this.sourceState;\n    }\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/proxy-state-tree/es/index.js\n");

/***/ }),

/***/ "./node_modules/proxy-state-tree/es/types.js":
/*!***************************************************!*\
  !*** ./node_modules/proxy-state-tree/es/types.js ***!
  \***************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3h5LXN0YXRlLXRyZWUvZXMvdHlwZXMuanM/YjMyNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFVO0FBQ1YiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJveHktc3RhdGUtdHJlZS9lcy90eXBlcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proxy-state-tree/es/types.js\n");

/***/ }),

/***/ "./node_modules/react-compare-slider/dist/react-compare-slider.esm.js":
/*!****************************************************************************!*\
  !*** ./node_modules/react-compare-slider/dist/react-compare-slider.esm.js ***!
  \****************************************************************************/
/*! exports provided: ReactCompareSlider, ReactCompareSliderHandle, ReactCompareSliderImage, styleFitContainer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ReactCompareSlider\", function() { return ReactCompareSlider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ReactCompareSliderHandle\", function() { return ReactCompareSliderHandle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ReactCompareSliderImage\", function() { return ReactCompareSliderImage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"styleFitContainer\", function() { return styleFitContainer; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst ThisArrow = ({\n  flip\n}) => {\n  const style = {\n    width: 0,\n    height: 0,\n    borderTop: '8px solid transparent',\n    borderRight: '10px solid',\n    borderBottom: '8px solid transparent',\n    transform: flip ? 'rotate(180deg)' : undefined\n  };\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    style: style\n  });\n};\n/** Default `handle`. */\n\n\nconst ReactCompareSliderHandle = ({\n  portrait,\n  buttonStyle,\n  linesStyle,\n  style,\n  ...props\n}) => {\n  const _style = {\n    display: 'flex',\n    flexDirection: portrait ? 'row' : 'column',\n    placeItems: 'center',\n    height: '100%',\n    cursor: portrait ? 'ns-resize' : 'ew-resize',\n    pointerEvents: 'none',\n    color: '#fff',\n    ...style\n  };\n  const _linesStyle = {\n    flexGrow: 1,\n    height: portrait ? 2 : '100%',\n    width: portrait ? '100%' : 2,\n    backgroundColor: 'currentColor',\n    pointerEvents: 'auto',\n    boxShadow: '0 0 7px rgba(0,0,0,.35)',\n    ...linesStyle\n  };\n  const _buttonStyle = {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gap: 8,\n    placeContent: 'center',\n    flexShrink: 0,\n    width: 56,\n    height: 56,\n    borderRadius: '50%',\n    borderStyle: 'solid',\n    borderWidth: 2,\n    pointerEvents: 'auto',\n    backdropFilter: 'blur(7px)',\n    boxShadow: '0 0 7px rgba(0,0,0,.35)',\n    transform: portrait ? 'rotate(90deg)' : undefined,\n    ...buttonStyle\n  };\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", Object.assign({\n    className: \"__rcs-handle-root\"\n  }, props, {\n    style: _style\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"__rcs-handle-line\",\n    style: _linesStyle\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"__rcs-handle-button\",\n    style: _buttonStyle\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ThisArrow, null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ThisArrow, {\n    flip: true\n  })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"__rcs-handle-line\",\n    style: _linesStyle\n  }));\n};\n\n/**\r\n * Stand-alone CSS utility to make replaced elements (`img`, `video`, etc.) fit their\r\n * container.\r\n */\n\nconst styleFitContainer = ({\n  boxSizing = 'border-box',\n  objectFit = 'cover',\n  objectPosition = 'center',\n  ...props\n} = {}) => ({\n  display: 'block',\n  width: '100%',\n  height: '100%',\n  maxWidth: '100%',\n  boxSizing,\n  objectFit,\n  objectPosition,\n  ...props\n});\n/** Store the previous supplied value. */\n\nconst usePrevious = value => {\n  const ref = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"])(value);\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n/**\r\n * Event listener binding hook.\r\n * @param eventName      - Event to bind to.\r\n * @param handler        - Callback handler.\r\n * @param element        - Element to bind to.\r\n * @param handlerOptions - Event handler options.\r\n */\n\nconst useEventListener = (eventName, handler, element, handlerOptions) => {\n  const savedHandler = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"])();\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(() => {\n    // Make sure element supports addEventListener.\n    if (!(element && element.addEventListener)) return; // Create event listener that calls handler function stored in ref.\n\n    const eventListener = event => savedHandler.current && savedHandler.current(event);\n\n    element.addEventListener(eventName, eventListener, handlerOptions);\n    return () => {\n      element.removeEventListener(eventName, eventListener, handlerOptions);\n    };\n  }, [eventName, element, handlerOptions]);\n};\n/**\r\n * Conditionally use `useLayoutEffect` for client *or* `useEffect` for SSR.\r\n * @see <https://github.com/reduxjs/react-redux/blob/c581d480dd675f2645851fb006bef91aeb6ac24d/src/utils/useIsomorphicLayoutEffect.js>\r\n */\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' && window.document && window.document.createElement ? react__WEBPACK_IMPORTED_MODULE_0__[\"useLayoutEffect\"] : react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"];\n/**\r\n * Bind resize observer callback to element.\r\n * @param ref       - Element to bind to.\r\n * @param handler   - Callback for handling entry's bounding rect.\r\n */\n\nconst useResizeObserver = (ref, handler) => {\n  const observer = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"])();\n  const observe = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"])(() => {\n    if (ref.current && observer.current) observer.current.observe(ref.current);\n  }, [ref]); // Bind/rebind observer when `handler` changes.\n\n  useIsomorphicLayoutEffect(() => {\n    observer.current = new ResizeObserver(([entry]) => handler(entry.contentRect));\n    observe();\n    return () => {\n      if (observer.current) observer.current.disconnect();\n    };\n  }, [handler, observe]);\n};\n\n/** Container for clipped item. */\n\nconst ThisClipContainer = /*#__PURE__*/Object(react__WEBPACK_IMPORTED_MODULE_0__[\"forwardRef\"])((props, ref) => {\n  const style = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    willChange: 'clip',\n    userSelect: 'none',\n    KhtmlUserSelect: 'none',\n    MozUserSelect: 'none',\n    WebkitUserSelect: 'none'\n  };\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", Object.assign({}, props, {\n    style: style,\n    \"data-rcs\": \"clip-item\",\n    ref: ref\n  }));\n});\nThisClipContainer.displayName = 'ThisClipContainer';\n/** Handle container to control position. */\n\nconst ThisHandleContainer = /*#__PURE__*/Object(react__WEBPACK_IMPORTED_MODULE_0__[\"forwardRef\"])(({\n  children,\n  portrait\n}, ref) => {\n  const style = {\n    position: 'absolute',\n    top: 0,\n    width: '100%',\n    height: '100%',\n    pointerEvents: 'none'\n  };\n  const innerStyle = {\n    position: 'absolute',\n    width: portrait ? '100%' : undefined,\n    height: portrait ? undefined : '100%',\n    transform: portrait ? 'translateY(-50%)' : 'translateX(-50%)',\n    pointerEvents: 'all'\n  };\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    style: style,\n    \"data-rcs\": \"handle-container\",\n    ref: ref\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    style: innerStyle\n  }, children));\n});\nThisHandleContainer.displayName = 'ThisHandleContainer';\nconst EVENT_PASSIVE_PARAMS = {\n  passive: true\n};\nconst EVENT_CAPTURE_PARAMS = {\n  capture: true,\n  passive: false\n};\n/** Root Comparison slider. */\n\nconst ReactCompareSlider = ({\n  handle,\n  itemOne,\n  itemTwo,\n  onlyHandleDraggable = false,\n  onPositionChange,\n  portrait = false,\n  position = 50,\n  boundsPadding = 0,\n  style,\n  ...props\n}) => {\n  /** Reference to root container. */\n  const rootContainerRef = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"])(null);\n  /** Reference to clip container. */\n\n  const clipContainerRef = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"])(null);\n  /** Reference to handle container. */\n\n  const handleContainerRef = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"])(null);\n  /** Reference to current position as a percentage value. */\n\n  const internalPositionPc = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"])(position);\n  /** Previous `position` prop value. */\n\n  const prevPropPosition = usePrevious(position);\n  /** Whether user is currently dragging. */\n\n  const [isDragging, setIsDragging] = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(false);\n  /** Whether component has a `window` event binding. */\n\n  const hasWindowBinding = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"])(false);\n  /** Target container for pointer events. */\n\n  const [interactiveTarget, setInteractiveTarget] = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(); // Set target container for pointer events.\n\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(() => {\n    setInteractiveTarget(onlyHandleDraggable ? handleContainerRef.current : rootContainerRef.current);\n  }, [onlyHandleDraggable]);\n  /** Update internal position value. */\n\n  const updateInternalPosition = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"])(function updateInternalCall({\n    x,\n    y,\n    isOffset,\n    portrait: _portrait,\n    boundsPadding: _boundsPadding\n  }) {\n    const {\n      top,\n      left,\n      width,\n      height\n    } = rootContainerRef.current.getBoundingClientRect(); // Early out if width or height are zero, can't calculate values\n    // from zeros.\n\n    if (width === 0 || height === 0) return; // Clamp pixel position to always be within the container's bounds.\n    // This does *not* take `boundsPadding` into account because we need\n    // the real coords to correctly position the handle.\n\n    const positionPx = Math.min(Math.max( // Determine bounds based on orientation\n    _portrait ? isOffset ? y - top - window.pageYOffset : y : isOffset ? x - left - window.pageXOffset : x, // Min value\n    0), // Max value\n    _portrait ? height : width);\n    /**\r\n     * Internal position percentage *without* bounds.\r\n     * @NOTE This uses the entire container bounds **without** `boundsPadding`\r\n     *       to get the *real* bounds.\r\n     */\n\n    const nextInternalPositionPc = positionPx / (_portrait ? height : width) * 100;\n    /** Determine if the current pixel position meets the min/max bounds. */\n\n    const positionMeetsBounds = _portrait ? positionPx === 0 || positionPx === height : positionPx === 0 || positionPx === width;\n    const canSkipPositionPc = nextInternalPositionPc === internalPositionPc.current && (internalPositionPc.current === 0 || internalPositionPc.current === 100); // Early out if pixel and percentage positions are already at the min/max\n    // to prevent update spamming when the user is sliding outside of the\n    // container.\n\n    if (canSkipPositionPc && positionMeetsBounds) {\n      return;\n    } // Set new internal position.\n\n\n    internalPositionPc.current = nextInternalPositionPc;\n    /** Pixel position clamped to extremities *with* bounds padding. */\n\n    const clampedPx = Math.min( // Get largest from pixel position *or* bounds padding.\n    Math.max(positionPx, 0 + _boundsPadding), // Use height *or* width based on orientation.\n    (_portrait ? height : width) - _boundsPadding); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    clipContainerRef.current.style.clip = _portrait ? `rect(auto,auto,${clampedPx}px,auto)` : `rect(auto,${clampedPx}px,auto,auto)`; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    handleContainerRef.current.style.transform = _portrait ? `translate3d(0,${clampedPx}px,0)` : `translate3d(${clampedPx}px,0,0)`;\n    if (onPositionChange) onPositionChange(internalPositionPc.current);\n  }, [onPositionChange]); // Update internal position when other user controllable props change.\n\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(() => {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const {\n      width,\n      height\n    } = rootContainerRef.current.getBoundingClientRect(); // Use current internal position if `position` hasn't changed.\n\n    const nextPosition = position === prevPropPosition ? internalPositionPc.current : position;\n    updateInternalPosition({\n      portrait,\n      boundsPadding,\n      x: width / 100 * nextPosition,\n      y: height / 100 * nextPosition\n    });\n  }, [portrait, position, prevPropPosition, boundsPadding, updateInternalPosition]);\n  /** Handle mouse/touch down. */\n\n  const handlePointerDown = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"])(ev => {\n    ev.preventDefault();\n    updateInternalPosition({\n      portrait,\n      boundsPadding,\n      isOffset: true,\n      x: ev instanceof MouseEvent ? ev.pageX : ev.touches[0].pageX,\n      y: ev instanceof MouseEvent ? ev.pageY : ev.touches[0].pageY\n    });\n    setIsDragging(true);\n  }, [portrait, boundsPadding, updateInternalPosition]);\n  /** Handle mouse/touch move. */\n\n  const handlePointerMove = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"])(function moveCall(ev) {\n    updateInternalPosition({\n      portrait,\n      boundsPadding,\n      isOffset: true,\n      x: ev instanceof MouseEvent ? ev.pageX : ev.touches[0].pageX,\n      y: ev instanceof MouseEvent ? ev.pageY : ev.touches[0].pageY\n    });\n  }, [portrait, boundsPadding, updateInternalPosition]);\n  /** Handle mouse/touch up. */\n\n  const handlePointerUp = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"])(() => {\n    setIsDragging(false);\n  }, []);\n  /** Resync internal position on resize. */\n\n  const handleResize = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"])(({\n    width,\n    height\n  }) => {\n    updateInternalPosition({\n      portrait,\n      boundsPadding,\n      x: width / 100 * internalPositionPc.current,\n      y: height / 100 * internalPositionPc.current\n    });\n  }, [portrait, boundsPadding, updateInternalPosition]); // Allow drag outside of container while pointer is still down.\n\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(() => {\n    if (isDragging && !hasWindowBinding.current) {\n      window.addEventListener('mousemove', handlePointerMove, EVENT_PASSIVE_PARAMS);\n      window.addEventListener('mouseup', handlePointerUp, EVENT_PASSIVE_PARAMS);\n      window.addEventListener('touchmove', handlePointerMove, EVENT_PASSIVE_PARAMS);\n      window.addEventListener('touchend', handlePointerUp, EVENT_PASSIVE_PARAMS);\n      hasWindowBinding.current = true;\n    }\n\n    return () => {\n      if (hasWindowBinding.current) {\n        window.removeEventListener('mousemove', handlePointerMove);\n        window.removeEventListener('mouseup', handlePointerUp);\n        window.removeEventListener('touchmove', handlePointerMove);\n        window.removeEventListener('touchend', handlePointerUp);\n        hasWindowBinding.current = false;\n      }\n    };\n  }, [handlePointerMove, handlePointerUp, isDragging]); // Bind resize observer to container.\n\n  useResizeObserver(rootContainerRef, handleResize);\n  useEventListener('mousedown', handlePointerDown, // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  interactiveTarget, EVENT_CAPTURE_PARAMS);\n  useEventListener('touchstart', handlePointerDown, // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  interactiveTarget, EVENT_CAPTURE_PARAMS); // Use custom handle if requested.\n\n  const Handle = handle || react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ReactCompareSliderHandle, {\n    portrait: portrait\n  });\n  const rootStyle = {\n    position: 'relative',\n    overflow: 'hidden',\n    cursor: isDragging ? portrait ? 'ns-resize' : 'ew-resize' : undefined,\n    userSelect: 'none',\n    KhtmlUserSelect: 'none',\n    msUserSelect: 'none',\n    MozUserSelect: 'none',\n    WebkitUserSelect: 'none',\n    ...style\n  };\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", Object.assign({}, props, {\n    ref: rootContainerRef,\n    style: rootStyle,\n    \"data-rcs\": \"root\"\n  }), itemTwo, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ThisClipContainer, {\n    ref: clipContainerRef\n  }, itemOne), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ThisHandleContainer, {\n    portrait: portrait,\n    ref: handleContainerRef\n  }, Handle));\n};\n\n/** Image with defaults from `styleFitContainer` applied. */\n\nconst ReactCompareSliderImage = ({\n  style,\n  ...props\n}) => {\n  const rootStyle = styleFitContainer(style);\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"img\", Object.assign({}, props, {\n    style: rootStyle,\n    \"data-rcs\": \"image\"\n  }));\n};\n\n\n//# sourceMappingURL=react-compare-slider.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-compare-slider/dist/react-compare-slider.esm.js\n");

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/** @license React v17.0.1\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar _assign = __webpack_require__(/*! object-assign */ \"./node_modules/next/dist/build/polyfills/object-assign.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar REACT_ELEMENT_TYPE = 0xeac7;\nvar REACT_PORTAL_TYPE = 0xeaca;\nexports.Fragment = 0xeacb;\nvar REACT_STRICT_MODE_TYPE = 0xeacc;\nvar REACT_PROFILER_TYPE = 0xead2;\nvar REACT_PROVIDER_TYPE = 0xeacd;\nvar REACT_CONTEXT_TYPE = 0xeace;\nvar REACT_FORWARD_REF_TYPE = 0xead0;\nvar REACT_SUSPENSE_TYPE = 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = 0xead8;\nvar REACT_MEMO_TYPE = 0xead3;\nvar REACT_LAZY_TYPE = 0xead4;\nvar REACT_BLOCK_TYPE = 0xead9;\nvar REACT_SERVER_BLOCK_TYPE = 0xeada;\nvar REACT_FUNDAMENTAL_TYPE = 0xead5;\nvar REACT_SCOPE_TYPE = 0xead7;\nvar REACT_OPAQUE_ID_TYPE = 0xeae0;\nvar REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\nvar REACT_OFFSCREEN_TYPE = 0xeae2;\nvar REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  var symbolFor = Symbol.for;\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\n  exports.Fragment = symbolFor('react.fragment');\n  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\n  REACT_PROFILER_TYPE = symbolFor('react.profiler');\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\n  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\n  REACT_MEMO_TYPE = symbolFor('react.memo');\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\n  REACT_BLOCK_TYPE = symbolFor('react.block');\n  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');\n  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\n}\n\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    printWarning('error', format, args);\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    }\n\n    var argsWithFormat = args.map(function (item) {\n      return '' + item;\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === exports.Fragment || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var functionName = innerType.displayName || innerType.name || '';\n  return outerType.displayName || (functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\n}\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nfunction getComponentName(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case exports.Fragment:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        return getComponentName(type.type);\n\n      case REACT_BLOCK_TYPE:\n        return getComponentName(type._render);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentName(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: _assign({}, props, {\n          value: prevLog\n        }),\n        info: _assign({}, props, {\n          value: prevInfo\n        }),\n        warn: _assign({}, props, {\n          value: prevWarn\n        }),\n        error: _assign({}, props, {\n          value: prevError\n        }),\n        group: _assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: _assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: _assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_BLOCK_TYPE:\n        return describeFunctionComponentFrame(type._render);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentName(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentName(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentName(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (Array.isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentName(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentName(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (Array.isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentName(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (Array.isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === exports.Fragment) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanM/YmZjYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViLElBQUksSUFBcUM7QUFDekM7QUFDQTs7QUFFQSxZQUFZLG1CQUFPLENBQUMsNENBQU87QUFDM0IsY0FBYyxtQkFBTyxDQUFDLGdGQUFlOztBQUVyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsOEZBQThGLGVBQWU7QUFDN0c7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLLEVBQUU7O0FBRVAsaURBQWlEO0FBQ2pEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBLDJCQUEyQjs7QUFFM0I7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0M7O0FBRXRDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFROztBQUVSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTs7QUFFUjtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBLFNBQVM7QUFDVCx3QkFBd0I7QUFDeEI7QUFDQSxTQUFTO0FBQ1Qsd0JBQXdCO0FBQ3hCO0FBQ0EsU0FBUztBQUNULHlCQUF5QjtBQUN6QjtBQUNBLFNBQVM7QUFDVCx5QkFBeUI7QUFDekI7QUFDQSxTQUFTO0FBQ1Qsa0NBQWtDO0FBQ2xDO0FBQ0EsU0FBUztBQUNULDRCQUE0QjtBQUM1QjtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7O0FBR0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDBEQUEwRDs7QUFFMUQ7QUFDQTs7QUFFQTtBQUNBLHdEQUF3RDtBQUN4RDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTs7O0FBR1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsWUFBWSxrQkFBa0I7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7OztBQUdqQjtBQUNBO0FBQ0EsYUFBYTtBQUNiOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBIQUEwSDtBQUMxSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFQTtBQUNBOztBQUVBLG1FQUFtRTs7QUFFbkU7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEVBQUU7QUFDYixXQUFXLEVBQUU7QUFDYixXQUFXLEVBQUU7QUFDYixXQUFXLGNBQWM7QUFDekIsV0FBVyxFQUFFO0FBQ2IsV0FBVyxFQUFFO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEVBQUU7QUFDYjtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxFQUFFOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLEVBQUU7QUFDUDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxFQUFFO0FBQ2IsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQjs7QUFFQTtBQUNBO0FBQ0EsaUJBQWlCOztBQUVqQjtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CLDJEQUEyRCxTQUFTO0FBQ3BFLHlCQUF5QixTQUFTO0FBQ2xDO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7O0FBR0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOzs7QUFHTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFlBQVksUUFBUTtBQUNwQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGFBQWE7QUFDeEIsV0FBVyxFQUFFO0FBQ2I7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsNERBQTREO0FBQzVEO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsRUFBRTtBQUNiOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EscUJBQXFCLGlCQUFpQjtBQUN0Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsYUFBYTtBQUN4Qjs7O0FBR0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLDJDQUEyQzs7QUFFM0M7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsYUFBYTtBQUN4Qjs7O0FBR0E7QUFDQTtBQUNBOztBQUVBLG1CQUFtQixpQkFBaUI7QUFDcEM7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7O0FBRUEseURBQXlEO0FBQ3pEOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHFCQUFxQjtBQUNoRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDs7QUFFQTtBQUNBLEdBQUc7QUFDSCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNy4wLjFcbiAqIHJlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAoZnVuY3Rpb24oKSB7XG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgX2Fzc2lnbiA9IHJlcXVpcmUoJ29iamVjdC1hc3NpZ24nKTtcblxuLy8gQVRURU5USU9OXG4vLyBXaGVuIGFkZGluZyBuZXcgc3ltYm9scyB0byB0aGlzIGZpbGUsXG4vLyBQbGVhc2UgY29uc2lkZXIgYWxzbyBhZGRpbmcgdG8gJ3JlYWN0LWRldnRvb2xzLXNoYXJlZC9zcmMvYmFja2VuZC9SZWFjdFN5bWJvbHMnXG4vLyBUaGUgU3ltYm9sIHVzZWQgdG8gdGFnIHRoZSBSZWFjdEVsZW1lbnQtbGlrZSB0eXBlcy4gSWYgdGhlcmUgaXMgbm8gbmF0aXZlIFN5bWJvbFxuLy8gbm9yIHBvbHlmaWxsLCB0aGVuIGEgcGxhaW4gbnVtYmVyIGlzIHVzZWQgZm9yIHBlcmZvcm1hbmNlLlxudmFyIFJFQUNUX0VMRU1FTlRfVFlQRSA9IDB4ZWFjNztcbnZhciBSRUFDVF9QT1JUQUxfVFlQRSA9IDB4ZWFjYTtcbmV4cG9ydHMuRnJhZ21lbnQgPSAweGVhY2I7XG52YXIgUkVBQ1RfU1RSSUNUX01PREVfVFlQRSA9IDB4ZWFjYztcbnZhciBSRUFDVF9QUk9GSUxFUl9UWVBFID0gMHhlYWQyO1xudmFyIFJFQUNUX1BST1ZJREVSX1RZUEUgPSAweGVhY2Q7XG52YXIgUkVBQ1RfQ09OVEVYVF9UWVBFID0gMHhlYWNlO1xudmFyIFJFQUNUX0ZPUldBUkRfUkVGX1RZUEUgPSAweGVhZDA7XG52YXIgUkVBQ1RfU1VTUEVOU0VfVFlQRSA9IDB4ZWFkMTtcbnZhciBSRUFDVF9TVVNQRU5TRV9MSVNUX1RZUEUgPSAweGVhZDg7XG52YXIgUkVBQ1RfTUVNT19UWVBFID0gMHhlYWQzO1xudmFyIFJFQUNUX0xBWllfVFlQRSA9IDB4ZWFkNDtcbnZhciBSRUFDVF9CTE9DS19UWVBFID0gMHhlYWQ5O1xudmFyIFJFQUNUX1NFUlZFUl9CTE9DS19UWVBFID0gMHhlYWRhO1xudmFyIFJFQUNUX0ZVTkRBTUVOVEFMX1RZUEUgPSAweGVhZDU7XG52YXIgUkVBQ1RfU0NPUEVfVFlQRSA9IDB4ZWFkNztcbnZhciBSRUFDVF9PUEFRVUVfSURfVFlQRSA9IDB4ZWFlMDtcbnZhciBSRUFDVF9ERUJVR19UUkFDSU5HX01PREVfVFlQRSA9IDB4ZWFlMTtcbnZhciBSRUFDVF9PRkZTQ1JFRU5fVFlQRSA9IDB4ZWFlMjtcbnZhciBSRUFDVF9MRUdBQ1lfSElEREVOX1RZUEUgPSAweGVhZTM7XG5cbmlmICh0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmIFN5bWJvbC5mb3IpIHtcbiAgdmFyIHN5bWJvbEZvciA9IFN5bWJvbC5mb3I7XG4gIFJFQUNUX0VMRU1FTlRfVFlQRSA9IHN5bWJvbEZvcigncmVhY3QuZWxlbWVudCcpO1xuICBSRUFDVF9QT1JUQUxfVFlQRSA9IHN5bWJvbEZvcigncmVhY3QucG9ydGFsJyk7XG4gIGV4cG9ydHMuRnJhZ21lbnQgPSBzeW1ib2xGb3IoJ3JlYWN0LmZyYWdtZW50Jyk7XG4gIFJFQUNUX1NUUklDVF9NT0RFX1RZUEUgPSBzeW1ib2xGb3IoJ3JlYWN0LnN0cmljdF9tb2RlJyk7XG4gIFJFQUNUX1BST0ZJTEVSX1RZUEUgPSBzeW1ib2xGb3IoJ3JlYWN0LnByb2ZpbGVyJyk7XG4gIFJFQUNUX1BST1ZJREVSX1RZUEUgPSBzeW1ib2xGb3IoJ3JlYWN0LnByb3ZpZGVyJyk7XG4gIFJFQUNUX0NPTlRFWFRfVFlQRSA9IHN5bWJvbEZvcigncmVhY3QuY29udGV4dCcpO1xuICBSRUFDVF9GT1JXQVJEX1JFRl9UWVBFID0gc3ltYm9sRm9yKCdyZWFjdC5mb3J3YXJkX3JlZicpO1xuICBSRUFDVF9TVVNQRU5TRV9UWVBFID0gc3ltYm9sRm9yKCdyZWFjdC5zdXNwZW5zZScpO1xuICBSRUFDVF9TVVNQRU5TRV9MSVNUX1RZUEUgPSBzeW1ib2xGb3IoJ3JlYWN0LnN1c3BlbnNlX2xpc3QnKTtcbiAgUkVBQ1RfTUVNT19UWVBFID0gc3ltYm9sRm9yKCdyZWFjdC5tZW1vJyk7XG4gIFJFQUNUX0xBWllfVFlQRSA9IHN5bWJvbEZvcigncmVhY3QubGF6eScpO1xuICBSRUFDVF9CTE9DS19UWVBFID0gc3ltYm9sRm9yKCdyZWFjdC5ibG9jaycpO1xuICBSRUFDVF9TRVJWRVJfQkxPQ0tfVFlQRSA9IHN5bWJvbEZvcigncmVhY3Quc2VydmVyLmJsb2NrJyk7XG4gIFJFQUNUX0ZVTkRBTUVOVEFMX1RZUEUgPSBzeW1ib2xGb3IoJ3JlYWN0LmZ1bmRhbWVudGFsJyk7XG4gIFJFQUNUX1NDT1BFX1RZUEUgPSBzeW1ib2xGb3IoJ3JlYWN0LnNjb3BlJyk7XG4gIFJFQUNUX09QQVFVRV9JRF9UWVBFID0gc3ltYm9sRm9yKCdyZWFjdC5vcGFxdWUuaWQnKTtcbiAgUkVBQ1RfREVCVUdfVFJBQ0lOR19NT0RFX1RZUEUgPSBzeW1ib2xGb3IoJ3JlYWN0LmRlYnVnX3RyYWNlX21vZGUnKTtcbiAgUkVBQ1RfT0ZGU0NSRUVOX1RZUEUgPSBzeW1ib2xGb3IoJ3JlYWN0Lm9mZnNjcmVlbicpO1xuICBSRUFDVF9MRUdBQ1lfSElEREVOX1RZUEUgPSBzeW1ib2xGb3IoJ3JlYWN0LmxlZ2FjeV9oaWRkZW4nKTtcbn1cblxudmFyIE1BWUJFX0lURVJBVE9SX1NZTUJPTCA9IHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiYgU3ltYm9sLml0ZXJhdG9yO1xudmFyIEZBVVhfSVRFUkFUT1JfU1lNQk9MID0gJ0BAaXRlcmF0b3InO1xuZnVuY3Rpb24gZ2V0SXRlcmF0b3JGbihtYXliZUl0ZXJhYmxlKSB7XG4gIGlmIChtYXliZUl0ZXJhYmxlID09PSBudWxsIHx8IHR5cGVvZiBtYXliZUl0ZXJhYmxlICE9PSAnb2JqZWN0Jykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgdmFyIG1heWJlSXRlcmF0b3IgPSBNQVlCRV9JVEVSQVRPUl9TWU1CT0wgJiYgbWF5YmVJdGVyYWJsZVtNQVlCRV9JVEVSQVRPUl9TWU1CT0xdIHx8IG1heWJlSXRlcmFibGVbRkFVWF9JVEVSQVRPUl9TWU1CT0xdO1xuXG4gIGlmICh0eXBlb2YgbWF5YmVJdGVyYXRvciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBtYXliZUl0ZXJhdG9yO1xuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59XG5cbnZhciBSZWFjdFNoYXJlZEludGVybmFscyA9IFJlYWN0Ll9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEO1xuXG5mdW5jdGlvbiBlcnJvcihmb3JtYXQpIHtcbiAge1xuICAgIGZvciAodmFyIF9sZW4yID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuMiA+IDEgPyBfbGVuMiAtIDEgOiAwKSwgX2tleTIgPSAxOyBfa2V5MiA8IF9sZW4yOyBfa2V5MisrKSB7XG4gICAgICBhcmdzW19rZXkyIC0gMV0gPSBhcmd1bWVudHNbX2tleTJdO1xuICAgIH1cblxuICAgIHByaW50V2FybmluZygnZXJyb3InLCBmb3JtYXQsIGFyZ3MpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHByaW50V2FybmluZyhsZXZlbCwgZm9ybWF0LCBhcmdzKSB7XG4gIC8vIFdoZW4gY2hhbmdpbmcgdGhpcyBsb2dpYywgeW91IG1pZ2h0IHdhbnQgdG8gYWxzb1xuICAvLyB1cGRhdGUgY29uc29sZVdpdGhTdGFja0Rldi53d3cuanMgYXMgd2VsbC5cbiAge1xuICAgIHZhciBSZWFjdERlYnVnQ3VycmVudEZyYW1lID0gUmVhY3RTaGFyZWRJbnRlcm5hbHMuUmVhY3REZWJ1Z0N1cnJlbnRGcmFtZTtcbiAgICB2YXIgc3RhY2sgPSBSZWFjdERlYnVnQ3VycmVudEZyYW1lLmdldFN0YWNrQWRkZW5kdW0oKTtcblxuICAgIGlmIChzdGFjayAhPT0gJycpIHtcbiAgICAgIGZvcm1hdCArPSAnJXMnO1xuICAgICAgYXJncyA9IGFyZ3MuY29uY2F0KFtzdGFja10pO1xuICAgIH1cblxuICAgIHZhciBhcmdzV2l0aEZvcm1hdCA9IGFyZ3MubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICByZXR1cm4gJycgKyBpdGVtO1xuICAgIH0pOyAvLyBDYXJlZnVsOiBSTiBjdXJyZW50bHkgZGVwZW5kcyBvbiB0aGlzIHByZWZpeFxuXG4gICAgYXJnc1dpdGhGb3JtYXQudW5zaGlmdCgnV2FybmluZzogJyArIGZvcm1hdCk7IC8vIFdlIGludGVudGlvbmFsbHkgZG9uJ3QgdXNlIHNwcmVhZCAob3IgLmFwcGx5KSBkaXJlY3RseSBiZWNhdXNlIGl0XG4gICAgLy8gYnJlYWtzIElFOTogaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2lzc3Vlcy8xMzYxMFxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1pbnRlcm5hbC9uby1wcm9kdWN0aW9uLWxvZ2dpbmdcblxuICAgIEZ1bmN0aW9uLnByb3RvdHlwZS5hcHBseS5jYWxsKGNvbnNvbGVbbGV2ZWxdLCBjb25zb2xlLCBhcmdzV2l0aEZvcm1hdCk7XG4gIH1cbn1cblxuLy8gRmlsdGVyIGNlcnRhaW4gRE9NIGF0dHJpYnV0ZXMgKGUuZy4gc3JjLCBocmVmKSBpZiB0aGVpciB2YWx1ZXMgYXJlIGVtcHR5IHN0cmluZ3MuXG5cbnZhciBlbmFibGVTY29wZUFQSSA9IGZhbHNlOyAvLyBFeHBlcmltZW50YWwgQ3JlYXRlIEV2ZW50IEhhbmRsZSBBUEkuXG5cbmZ1bmN0aW9uIGlzVmFsaWRFbGVtZW50VHlwZSh0eXBlKSB7XG4gIGlmICh0eXBlb2YgdHlwZSA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHR5cGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSAvLyBOb3RlOiB0eXBlb2YgbWlnaHQgYmUgb3RoZXIgdGhhbiAnc3ltYm9sJyBvciAnbnVtYmVyJyAoZS5nLiBpZiBpdCdzIGEgcG9seWZpbGwpLlxuXG5cbiAgaWYgKHR5cGUgPT09IGV4cG9ydHMuRnJhZ21lbnQgfHwgdHlwZSA9PT0gUkVBQ1RfUFJPRklMRVJfVFlQRSB8fCB0eXBlID09PSBSRUFDVF9ERUJVR19UUkFDSU5HX01PREVfVFlQRSB8fCB0eXBlID09PSBSRUFDVF9TVFJJQ1RfTU9ERV9UWVBFIHx8IHR5cGUgPT09IFJFQUNUX1NVU1BFTlNFX1RZUEUgfHwgdHlwZSA9PT0gUkVBQ1RfU1VTUEVOU0VfTElTVF9UWVBFIHx8IHR5cGUgPT09IFJFQUNUX0xFR0FDWV9ISURERU5fVFlQRSB8fCBlbmFibGVTY29wZUFQSSApIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgdHlwZSA9PT0gJ29iamVjdCcgJiYgdHlwZSAhPT0gbnVsbCkge1xuICAgIGlmICh0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9MQVpZX1RZUEUgfHwgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfTUVNT19UWVBFIHx8IHR5cGUuJCR0eXBlb2YgPT09IFJFQUNUX1BST1ZJREVSX1RZUEUgfHwgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfQ09OVEVYVF9UWVBFIHx8IHR5cGUuJCR0eXBlb2YgPT09IFJFQUNUX0ZPUldBUkRfUkVGX1RZUEUgfHwgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfRlVOREFNRU5UQUxfVFlQRSB8fCB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9CTE9DS19UWVBFIHx8IHR5cGVbMF0gPT09IFJFQUNUX1NFUlZFUl9CTE9DS19UWVBFKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5cbmZ1bmN0aW9uIGdldFdyYXBwZWROYW1lKG91dGVyVHlwZSwgaW5uZXJUeXBlLCB3cmFwcGVyTmFtZSkge1xuICB2YXIgZnVuY3Rpb25OYW1lID0gaW5uZXJUeXBlLmRpc3BsYXlOYW1lIHx8IGlubmVyVHlwZS5uYW1lIHx8ICcnO1xuICByZXR1cm4gb3V0ZXJUeXBlLmRpc3BsYXlOYW1lIHx8IChmdW5jdGlvbk5hbWUgIT09ICcnID8gd3JhcHBlck5hbWUgKyBcIihcIiArIGZ1bmN0aW9uTmFtZSArIFwiKVwiIDogd3JhcHBlck5hbWUpO1xufVxuXG5mdW5jdGlvbiBnZXRDb250ZXh0TmFtZSh0eXBlKSB7XG4gIHJldHVybiB0eXBlLmRpc3BsYXlOYW1lIHx8ICdDb250ZXh0Jztcbn1cblxuZnVuY3Rpb24gZ2V0Q29tcG9uZW50TmFtZSh0eXBlKSB7XG4gIGlmICh0eXBlID09IG51bGwpIHtcbiAgICAvLyBIb3N0IHJvb3QsIHRleHQgbm9kZSBvciBqdXN0IGludmFsaWQgdHlwZS5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHtcbiAgICBpZiAodHlwZW9mIHR5cGUudGFnID09PSAnbnVtYmVyJykge1xuICAgICAgZXJyb3IoJ1JlY2VpdmVkIGFuIHVuZXhwZWN0ZWQgb2JqZWN0IGluIGdldENvbXBvbmVudE5hbWUoKS4gJyArICdUaGlzIGlzIGxpa2VseSBhIGJ1ZyBpbiBSZWFjdC4gUGxlYXNlIGZpbGUgYW4gaXNzdWUuJyk7XG4gICAgfVxuICB9XG5cbiAgaWYgKHR5cGVvZiB0eXBlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIHR5cGUuZGlzcGxheU5hbWUgfHwgdHlwZS5uYW1lIHx8IG51bGw7XG4gIH1cblxuICBpZiAodHlwZW9mIHR5cGUgPT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIHR5cGU7XG4gIH1cblxuICBzd2l0Y2ggKHR5cGUpIHtcbiAgICBjYXNlIGV4cG9ydHMuRnJhZ21lbnQ6XG4gICAgICByZXR1cm4gJ0ZyYWdtZW50JztcblxuICAgIGNhc2UgUkVBQ1RfUE9SVEFMX1RZUEU6XG4gICAgICByZXR1cm4gJ1BvcnRhbCc7XG5cbiAgICBjYXNlIFJFQUNUX1BST0ZJTEVSX1RZUEU6XG4gICAgICByZXR1cm4gJ1Byb2ZpbGVyJztcblxuICAgIGNhc2UgUkVBQ1RfU1RSSUNUX01PREVfVFlQRTpcbiAgICAgIHJldHVybiAnU3RyaWN0TW9kZSc7XG5cbiAgICBjYXNlIFJFQUNUX1NVU1BFTlNFX1RZUEU6XG4gICAgICByZXR1cm4gJ1N1c3BlbnNlJztcblxuICAgIGNhc2UgUkVBQ1RfU1VTUEVOU0VfTElTVF9UWVBFOlxuICAgICAgcmV0dXJuICdTdXNwZW5zZUxpc3QnO1xuICB9XG5cbiAgaWYgKHR5cGVvZiB0eXBlID09PSAnb2JqZWN0Jykge1xuICAgIHN3aXRjaCAodHlwZS4kJHR5cGVvZikge1xuICAgICAgY2FzZSBSRUFDVF9DT05URVhUX1RZUEU6XG4gICAgICAgIHZhciBjb250ZXh0ID0gdHlwZTtcbiAgICAgICAgcmV0dXJuIGdldENvbnRleHROYW1lKGNvbnRleHQpICsgJy5Db25zdW1lcic7XG5cbiAgICAgIGNhc2UgUkVBQ1RfUFJPVklERVJfVFlQRTpcbiAgICAgICAgdmFyIHByb3ZpZGVyID0gdHlwZTtcbiAgICAgICAgcmV0dXJuIGdldENvbnRleHROYW1lKHByb3ZpZGVyLl9jb250ZXh0KSArICcuUHJvdmlkZXInO1xuXG4gICAgICBjYXNlIFJFQUNUX0ZPUldBUkRfUkVGX1RZUEU6XG4gICAgICAgIHJldHVybiBnZXRXcmFwcGVkTmFtZSh0eXBlLCB0eXBlLnJlbmRlciwgJ0ZvcndhcmRSZWYnKTtcblxuICAgICAgY2FzZSBSRUFDVF9NRU1PX1RZUEU6XG4gICAgICAgIHJldHVybiBnZXRDb21wb25lbnROYW1lKHR5cGUudHlwZSk7XG5cbiAgICAgIGNhc2UgUkVBQ1RfQkxPQ0tfVFlQRTpcbiAgICAgICAgcmV0dXJuIGdldENvbXBvbmVudE5hbWUodHlwZS5fcmVuZGVyKTtcblxuICAgICAgY2FzZSBSRUFDVF9MQVpZX1RZUEU6XG4gICAgICAgIHtcbiAgICAgICAgICB2YXIgbGF6eUNvbXBvbmVudCA9IHR5cGU7XG4gICAgICAgICAgdmFyIHBheWxvYWQgPSBsYXp5Q29tcG9uZW50Ll9wYXlsb2FkO1xuICAgICAgICAgIHZhciBpbml0ID0gbGF6eUNvbXBvbmVudC5faW5pdDtcblxuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gZ2V0Q29tcG9uZW50TmFtZShpbml0KHBheWxvYWQpKTtcbiAgICAgICAgICB9IGNhdGNoICh4KSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn1cblxuLy8gSGVscGVycyB0byBwYXRjaCBjb25zb2xlLmxvZ3MgdG8gYXZvaWQgbG9nZ2luZyBkdXJpbmcgc2lkZS1lZmZlY3QgZnJlZVxuLy8gcmVwbGF5aW5nIG9uIHJlbmRlciBmdW5jdGlvbi4gVGhpcyBjdXJyZW50bHkgb25seSBwYXRjaGVzIHRoZSBvYmplY3Rcbi8vIGxhemlseSB3aGljaCB3b24ndCBjb3ZlciBpZiB0aGUgbG9nIGZ1bmN0aW9uIHdhcyBleHRyYWN0ZWQgZWFnZXJseS5cbi8vIFdlIGNvdWxkIGFsc28gZWFnZXJseSBwYXRjaCB0aGUgbWV0aG9kLlxudmFyIGRpc2FibGVkRGVwdGggPSAwO1xudmFyIHByZXZMb2c7XG52YXIgcHJldkluZm87XG52YXIgcHJldldhcm47XG52YXIgcHJldkVycm9yO1xudmFyIHByZXZHcm91cDtcbnZhciBwcmV2R3JvdXBDb2xsYXBzZWQ7XG52YXIgcHJldkdyb3VwRW5kO1xuXG5mdW5jdGlvbiBkaXNhYmxlZExvZygpIHt9XG5cbmRpc2FibGVkTG9nLl9fcmVhY3REaXNhYmxlZExvZyA9IHRydWU7XG5mdW5jdGlvbiBkaXNhYmxlTG9ncygpIHtcbiAge1xuICAgIGlmIChkaXNhYmxlZERlcHRoID09PSAwKSB7XG4gICAgICAvKiBlc2xpbnQtZGlzYWJsZSByZWFjdC1pbnRlcm5hbC9uby1wcm9kdWN0aW9uLWxvZ2dpbmcgKi9cbiAgICAgIHByZXZMb2cgPSBjb25zb2xlLmxvZztcbiAgICAgIHByZXZJbmZvID0gY29uc29sZS5pbmZvO1xuICAgICAgcHJldldhcm4gPSBjb25zb2xlLndhcm47XG4gICAgICBwcmV2RXJyb3IgPSBjb25zb2xlLmVycm9yO1xuICAgICAgcHJldkdyb3VwID0gY29uc29sZS5ncm91cDtcbiAgICAgIHByZXZHcm91cENvbGxhcHNlZCA9IGNvbnNvbGUuZ3JvdXBDb2xsYXBzZWQ7XG4gICAgICBwcmV2R3JvdXBFbmQgPSBjb25zb2xlLmdyb3VwRW5kOyAvLyBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvaXNzdWVzLzE5MDk5XG5cbiAgICAgIHZhciBwcm9wcyA9IHtcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICB2YWx1ZTogZGlzYWJsZWRMb2csXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgICB9OyAvLyAkRmxvd0ZpeE1lIEZsb3cgdGhpbmtzIGNvbnNvbGUgaXMgaW1tdXRhYmxlLlxuXG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhjb25zb2xlLCB7XG4gICAgICAgIGluZm86IHByb3BzLFxuICAgICAgICBsb2c6IHByb3BzLFxuICAgICAgICB3YXJuOiBwcm9wcyxcbiAgICAgICAgZXJyb3I6IHByb3BzLFxuICAgICAgICBncm91cDogcHJvcHMsXG4gICAgICAgIGdyb3VwQ29sbGFwc2VkOiBwcm9wcyxcbiAgICAgICAgZ3JvdXBFbmQ6IHByb3BzXG4gICAgICB9KTtcbiAgICAgIC8qIGVzbGludC1lbmFibGUgcmVhY3QtaW50ZXJuYWwvbm8tcHJvZHVjdGlvbi1sb2dnaW5nICovXG4gICAgfVxuXG4gICAgZGlzYWJsZWREZXB0aCsrO1xuICB9XG59XG5mdW5jdGlvbiByZWVuYWJsZUxvZ3MoKSB7XG4gIHtcbiAgICBkaXNhYmxlZERlcHRoLS07XG5cbiAgICBpZiAoZGlzYWJsZWREZXB0aCA9PT0gMCkge1xuICAgICAgLyogZXNsaW50LWRpc2FibGUgcmVhY3QtaW50ZXJuYWwvbm8tcHJvZHVjdGlvbi1sb2dnaW5nICovXG4gICAgICB2YXIgcHJvcHMgPSB7XG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgd3JpdGFibGU6IHRydWVcbiAgICAgIH07IC8vICRGbG93Rml4TWUgRmxvdyB0aGlua3MgY29uc29sZSBpcyBpbW11dGFibGUuXG5cbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGNvbnNvbGUsIHtcbiAgICAgICAgbG9nOiBfYXNzaWduKHt9LCBwcm9wcywge1xuICAgICAgICAgIHZhbHVlOiBwcmV2TG9nXG4gICAgICAgIH0pLFxuICAgICAgICBpbmZvOiBfYXNzaWduKHt9LCBwcm9wcywge1xuICAgICAgICAgIHZhbHVlOiBwcmV2SW5mb1xuICAgICAgICB9KSxcbiAgICAgICAgd2FybjogX2Fzc2lnbih7fSwgcHJvcHMsIHtcbiAgICAgICAgICB2YWx1ZTogcHJldldhcm5cbiAgICAgICAgfSksXG4gICAgICAgIGVycm9yOiBfYXNzaWduKHt9LCBwcm9wcywge1xuICAgICAgICAgIHZhbHVlOiBwcmV2RXJyb3JcbiAgICAgICAgfSksXG4gICAgICAgIGdyb3VwOiBfYXNzaWduKHt9LCBwcm9wcywge1xuICAgICAgICAgIHZhbHVlOiBwcmV2R3JvdXBcbiAgICAgICAgfSksXG4gICAgICAgIGdyb3VwQ29sbGFwc2VkOiBfYXNzaWduKHt9LCBwcm9wcywge1xuICAgICAgICAgIHZhbHVlOiBwcmV2R3JvdXBDb2xsYXBzZWRcbiAgICAgICAgfSksXG4gICAgICAgIGdyb3VwRW5kOiBfYXNzaWduKHt9LCBwcm9wcywge1xuICAgICAgICAgIHZhbHVlOiBwcmV2R3JvdXBFbmRcbiAgICAgICAgfSlcbiAgICAgIH0pO1xuICAgICAgLyogZXNsaW50LWVuYWJsZSByZWFjdC1pbnRlcm5hbC9uby1wcm9kdWN0aW9uLWxvZ2dpbmcgKi9cbiAgICB9XG5cbiAgICBpZiAoZGlzYWJsZWREZXB0aCA8IDApIHtcbiAgICAgIGVycm9yKCdkaXNhYmxlZERlcHRoIGZlbGwgYmVsb3cgemVyby4gJyArICdUaGlzIGlzIGEgYnVnIGluIFJlYWN0LiBQbGVhc2UgZmlsZSBhbiBpc3N1ZS4nKTtcbiAgICB9XG4gIH1cbn1cblxudmFyIFJlYWN0Q3VycmVudERpc3BhdGNoZXIgPSBSZWFjdFNoYXJlZEludGVybmFscy5SZWFjdEN1cnJlbnREaXNwYXRjaGVyO1xudmFyIHByZWZpeDtcbmZ1bmN0aW9uIGRlc2NyaWJlQnVpbHRJbkNvbXBvbmVudEZyYW1lKG5hbWUsIHNvdXJjZSwgb3duZXJGbikge1xuICB7XG4gICAgaWYgKHByZWZpeCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAvLyBFeHRyYWN0IHRoZSBWTSBzcGVjaWZpYyBwcmVmaXggdXNlZCBieSBlYWNoIGxpbmUuXG4gICAgICB0cnkge1xuICAgICAgICB0aHJvdyBFcnJvcigpO1xuICAgICAgfSBjYXRjaCAoeCkge1xuICAgICAgICB2YXIgbWF0Y2ggPSB4LnN0YWNrLnRyaW0oKS5tYXRjaCgvXFxuKCAqKGF0ICk/KS8pO1xuICAgICAgICBwcmVmaXggPSBtYXRjaCAmJiBtYXRjaFsxXSB8fCAnJztcbiAgICAgIH1cbiAgICB9IC8vIFdlIHVzZSB0aGUgcHJlZml4IHRvIGVuc3VyZSBvdXIgc3RhY2tzIGxpbmUgdXAgd2l0aCBuYXRpdmUgc3RhY2sgZnJhbWVzLlxuXG5cbiAgICByZXR1cm4gJ1xcbicgKyBwcmVmaXggKyBuYW1lO1xuICB9XG59XG52YXIgcmVlbnRyeSA9IGZhbHNlO1xudmFyIGNvbXBvbmVudEZyYW1lQ2FjaGU7XG5cbntcbiAgdmFyIFBvc3NpYmx5V2Vha01hcCA9IHR5cGVvZiBXZWFrTWFwID09PSAnZnVuY3Rpb24nID8gV2Vha01hcCA6IE1hcDtcbiAgY29tcG9uZW50RnJhbWVDYWNoZSA9IG5ldyBQb3NzaWJseVdlYWtNYXAoKTtcbn1cblxuZnVuY3Rpb24gZGVzY3JpYmVOYXRpdmVDb21wb25lbnRGcmFtZShmbiwgY29uc3RydWN0KSB7XG4gIC8vIElmIHNvbWV0aGluZyBhc2tlZCBmb3IgYSBzdGFjayBpbnNpZGUgYSBmYWtlIHJlbmRlciwgaXQgc2hvdWxkIGdldCBpZ25vcmVkLlxuICBpZiAoIWZuIHx8IHJlZW50cnkpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICB7XG4gICAgdmFyIGZyYW1lID0gY29tcG9uZW50RnJhbWVDYWNoZS5nZXQoZm4pO1xuXG4gICAgaWYgKGZyYW1lICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBmcmFtZTtcbiAgICB9XG4gIH1cblxuICB2YXIgY29udHJvbDtcbiAgcmVlbnRyeSA9IHRydWU7XG4gIHZhciBwcmV2aW91c1ByZXBhcmVTdGFja1RyYWNlID0gRXJyb3IucHJlcGFyZVN0YWNrVHJhY2U7IC8vICRGbG93Rml4TWUgSXQgZG9lcyBhY2NlcHQgdW5kZWZpbmVkLlxuXG4gIEVycm9yLnByZXBhcmVTdGFja1RyYWNlID0gdW5kZWZpbmVkO1xuICB2YXIgcHJldmlvdXNEaXNwYXRjaGVyO1xuXG4gIHtcbiAgICBwcmV2aW91c0Rpc3BhdGNoZXIgPSBSZWFjdEN1cnJlbnREaXNwYXRjaGVyLmN1cnJlbnQ7IC8vIFNldCB0aGUgZGlzcGF0Y2hlciBpbiBERVYgYmVjYXVzZSB0aGlzIG1pZ2h0IGJlIGNhbGwgaW4gdGhlIHJlbmRlciBmdW5jdGlvblxuICAgIC8vIGZvciB3YXJuaW5ncy5cblxuICAgIFJlYWN0Q3VycmVudERpc3BhdGNoZXIuY3VycmVudCA9IG51bGw7XG4gICAgZGlzYWJsZUxvZ3MoKTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgLy8gVGhpcyBzaG91bGQgdGhyb3cuXG4gICAgaWYgKGNvbnN0cnVjdCkge1xuICAgICAgLy8gU29tZXRoaW5nIHNob3VsZCBiZSBzZXR0aW5nIHRoZSBwcm9wcyBpbiB0aGUgY29uc3RydWN0b3IuXG4gICAgICB2YXIgRmFrZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoKTtcbiAgICAgIH07IC8vICRGbG93Rml4TWVcblxuXG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRmFrZS5wcm90b3R5cGUsICdwcm9wcycsIHtcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgLy8gV2UgdXNlIGEgdGhyb3dpbmcgc2V0dGVyIGluc3RlYWQgb2YgZnJvemVuIG9yIG5vbi13cml0YWJsZSBwcm9wc1xuICAgICAgICAgIC8vIGJlY2F1c2UgdGhhdCB3b24ndCB0aHJvdyBpbiBhIG5vbi1zdHJpY3QgbW9kZSBmdW5jdGlvbi5cbiAgICAgICAgICB0aHJvdyBFcnJvcigpO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSAnb2JqZWN0JyAmJiBSZWZsZWN0LmNvbnN0cnVjdCkge1xuICAgICAgICAvLyBXZSBjb25zdHJ1Y3QgYSBkaWZmZXJlbnQgY29udHJvbCBmb3IgdGhpcyBjYXNlIHRvIGluY2x1ZGUgYW55IGV4dHJhXG4gICAgICAgIC8vIGZyYW1lcyBhZGRlZCBieSB0aGUgY29uc3RydWN0IGNhbGwuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgUmVmbGVjdC5jb25zdHJ1Y3QoRmFrZSwgW10pO1xuICAgICAgICB9IGNhdGNoICh4KSB7XG4gICAgICAgICAgY29udHJvbCA9IHg7XG4gICAgICAgIH1cblxuICAgICAgICBSZWZsZWN0LmNvbnN0cnVjdChmbiwgW10sIEZha2UpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBGYWtlLmNhbGwoKTtcbiAgICAgICAgfSBjYXRjaCAoeCkge1xuICAgICAgICAgIGNvbnRyb2wgPSB4O1xuICAgICAgICB9XG5cbiAgICAgICAgZm4uY2FsbChGYWtlLnByb3RvdHlwZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHRocm93IEVycm9yKCk7XG4gICAgICB9IGNhdGNoICh4KSB7XG4gICAgICAgIGNvbnRyb2wgPSB4O1xuICAgICAgfVxuXG4gICAgICBmbigpO1xuICAgIH1cbiAgfSBjYXRjaCAoc2FtcGxlKSB7XG4gICAgLy8gVGhpcyBpcyBpbmxpbmVkIG1hbnVhbGx5IGJlY2F1c2UgY2xvc3VyZSBkb2Vzbid0IGRvIGl0IGZvciB1cy5cbiAgICBpZiAoc2FtcGxlICYmIGNvbnRyb2wgJiYgdHlwZW9mIHNhbXBsZS5zdGFjayA9PT0gJ3N0cmluZycpIHtcbiAgICAgIC8vIFRoaXMgZXh0cmFjdHMgdGhlIGZpcnN0IGZyYW1lIGZyb20gdGhlIHNhbXBsZSB0aGF0IGlzbid0IGFsc28gaW4gdGhlIGNvbnRyb2wuXG4gICAgICAvLyBTa2lwcGluZyBvbmUgZnJhbWUgdGhhdCB3ZSBhc3N1bWUgaXMgdGhlIGZyYW1lIHRoYXQgY2FsbHMgdGhlIHR3by5cbiAgICAgIHZhciBzYW1wbGVMaW5lcyA9IHNhbXBsZS5zdGFjay5zcGxpdCgnXFxuJyk7XG4gICAgICB2YXIgY29udHJvbExpbmVzID0gY29udHJvbC5zdGFjay5zcGxpdCgnXFxuJyk7XG4gICAgICB2YXIgcyA9IHNhbXBsZUxpbmVzLmxlbmd0aCAtIDE7XG4gICAgICB2YXIgYyA9IGNvbnRyb2xMaW5lcy5sZW5ndGggLSAxO1xuXG4gICAgICB3aGlsZSAocyA+PSAxICYmIGMgPj0gMCAmJiBzYW1wbGVMaW5lc1tzXSAhPT0gY29udHJvbExpbmVzW2NdKSB7XG4gICAgICAgIC8vIFdlIGV4cGVjdCBhdCBsZWFzdCBvbmUgc3RhY2sgZnJhbWUgdG8gYmUgc2hhcmVkLlxuICAgICAgICAvLyBUeXBpY2FsbHkgdGhpcyB3aWxsIGJlIHRoZSByb290IG1vc3Qgb25lLiBIb3dldmVyLCBzdGFjayBmcmFtZXMgbWF5IGJlXG4gICAgICAgIC8vIGN1dCBvZmYgZHVlIHRvIG1heGltdW0gc3RhY2sgbGltaXRzLiBJbiB0aGlzIGNhc2UsIG9uZSBtYXliZSBjdXQgb2ZmXG4gICAgICAgIC8vIGVhcmxpZXIgdGhhbiB0aGUgb3RoZXIuIFdlIGFzc3VtZSB0aGF0IHRoZSBzYW1wbGUgaXMgbG9uZ2VyIG9yIHRoZSBzYW1lXG4gICAgICAgIC8vIGFuZCB0aGVyZSBmb3IgY3V0IG9mZiBlYXJsaWVyLiBTbyB3ZSBzaG91bGQgZmluZCB0aGUgcm9vdCBtb3N0IGZyYW1lIGluXG4gICAgICAgIC8vIHRoZSBzYW1wbGUgc29tZXdoZXJlIGluIHRoZSBjb250cm9sLlxuICAgICAgICBjLS07XG4gICAgICB9XG5cbiAgICAgIGZvciAoOyBzID49IDEgJiYgYyA+PSAwOyBzLS0sIGMtLSkge1xuICAgICAgICAvLyBOZXh0IHdlIGZpbmQgdGhlIGZpcnN0IG9uZSB0aGF0IGlzbid0IHRoZSBzYW1lIHdoaWNoIHNob3VsZCBiZSB0aGVcbiAgICAgICAgLy8gZnJhbWUgdGhhdCBjYWxsZWQgb3VyIHNhbXBsZSBmdW5jdGlvbiBhbmQgdGhlIGNvbnRyb2wuXG4gICAgICAgIGlmIChzYW1wbGVMaW5lc1tzXSAhPT0gY29udHJvbExpbmVzW2NdKSB7XG4gICAgICAgICAgLy8gSW4gVjgsIHRoZSBmaXJzdCBsaW5lIGlzIGRlc2NyaWJpbmcgdGhlIG1lc3NhZ2UgYnV0IG90aGVyIFZNcyBkb24ndC5cbiAgICAgICAgICAvLyBJZiB3ZSdyZSBhYm91dCB0byByZXR1cm4gdGhlIGZpcnN0IGxpbmUsIGFuZCB0aGUgY29udHJvbCBpcyBhbHNvIG9uIHRoZSBzYW1lXG4gICAgICAgICAgLy8gbGluZSwgdGhhdCdzIGEgcHJldHR5IGdvb2QgaW5kaWNhdG9yIHRoYXQgb3VyIHNhbXBsZSB0aHJldyBhdCBzYW1lIGxpbmUgYXNcbiAgICAgICAgICAvLyB0aGUgY29udHJvbC4gSS5lLiBiZWZvcmUgd2UgZW50ZXJlZCB0aGUgc2FtcGxlIGZyYW1lLiBTbyB3ZSBpZ25vcmUgdGhpcyByZXN1bHQuXG4gICAgICAgICAgLy8gVGhpcyBjYW4gaGFwcGVuIGlmIHlvdSBwYXNzZWQgYSBjbGFzcyB0byBmdW5jdGlvbiBjb21wb25lbnQsIG9yIG5vbi1mdW5jdGlvbi5cbiAgICAgICAgICBpZiAocyAhPT0gMSB8fCBjICE9PSAxKSB7XG4gICAgICAgICAgICBkbyB7XG4gICAgICAgICAgICAgIHMtLTtcbiAgICAgICAgICAgICAgYy0tOyAvLyBXZSBtYXkgc3RpbGwgaGF2ZSBzaW1pbGFyIGludGVybWVkaWF0ZSBmcmFtZXMgZnJvbSB0aGUgY29uc3RydWN0IGNhbGwuXG4gICAgICAgICAgICAgIC8vIFRoZSBuZXh0IG9uZSB0aGF0IGlzbid0IHRoZSBzYW1lIHNob3VsZCBiZSBvdXIgbWF0Y2ggdGhvdWdoLlxuXG4gICAgICAgICAgICAgIGlmIChjIDwgMCB8fCBzYW1wbGVMaW5lc1tzXSAhPT0gY29udHJvbExpbmVzW2NdKSB7XG4gICAgICAgICAgICAgICAgLy8gVjggYWRkcyBhIFwibmV3XCIgcHJlZml4IGZvciBuYXRpdmUgY2xhc3Nlcy4gTGV0J3MgcmVtb3ZlIGl0IHRvIG1ha2UgaXQgcHJldHRpZXIuXG4gICAgICAgICAgICAgICAgdmFyIF9mcmFtZSA9ICdcXG4nICsgc2FtcGxlTGluZXNbc10ucmVwbGFjZSgnIGF0IG5ldyAnLCAnIGF0ICcpO1xuXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBmbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICBjb21wb25lbnRGcmFtZUNhY2hlLnNldChmbiwgX2ZyYW1lKTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IC8vIFJldHVybiB0aGUgbGluZSB3ZSBmb3VuZC5cblxuXG4gICAgICAgICAgICAgICAgcmV0dXJuIF9mcmFtZTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSB3aGlsZSAocyA+PSAxICYmIGMgPj0gMCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0gZmluYWxseSB7XG4gICAgcmVlbnRyeSA9IGZhbHNlO1xuXG4gICAge1xuICAgICAgUmVhY3RDdXJyZW50RGlzcGF0Y2hlci5jdXJyZW50ID0gcHJldmlvdXNEaXNwYXRjaGVyO1xuICAgICAgcmVlbmFibGVMb2dzKCk7XG4gICAgfVxuXG4gICAgRXJyb3IucHJlcGFyZVN0YWNrVHJhY2UgPSBwcmV2aW91c1ByZXBhcmVTdGFja1RyYWNlO1xuICB9IC8vIEZhbGxiYWNrIHRvIGp1c3QgdXNpbmcgdGhlIG5hbWUgaWYgd2UgY291bGRuJ3QgbWFrZSBpdCB0aHJvdy5cblxuXG4gIHZhciBuYW1lID0gZm4gPyBmbi5kaXNwbGF5TmFtZSB8fCBmbi5uYW1lIDogJyc7XG4gIHZhciBzeW50aGV0aWNGcmFtZSA9IG5hbWUgPyBkZXNjcmliZUJ1aWx0SW5Db21wb25lbnRGcmFtZShuYW1lKSA6ICcnO1xuXG4gIHtcbiAgICBpZiAodHlwZW9mIGZuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBjb21wb25lbnRGcmFtZUNhY2hlLnNldChmbiwgc3ludGhldGljRnJhbWUpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBzeW50aGV0aWNGcmFtZTtcbn1cbmZ1bmN0aW9uIGRlc2NyaWJlRnVuY3Rpb25Db21wb25lbnRGcmFtZShmbiwgc291cmNlLCBvd25lckZuKSB7XG4gIHtcbiAgICByZXR1cm4gZGVzY3JpYmVOYXRpdmVDb21wb25lbnRGcmFtZShmbiwgZmFsc2UpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHNob3VsZENvbnN0cnVjdChDb21wb25lbnQpIHtcbiAgdmFyIHByb3RvdHlwZSA9IENvbXBvbmVudC5wcm90b3R5cGU7XG4gIHJldHVybiAhIShwcm90b3R5cGUgJiYgcHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQpO1xufVxuXG5mdW5jdGlvbiBkZXNjcmliZVVua25vd25FbGVtZW50VHlwZUZyYW1lSW5ERVYodHlwZSwgc291cmNlLCBvd25lckZuKSB7XG5cbiAgaWYgKHR5cGUgPT0gbnVsbCkge1xuICAgIHJldHVybiAnJztcbiAgfVxuXG4gIGlmICh0eXBlb2YgdHlwZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHtcbiAgICAgIHJldHVybiBkZXNjcmliZU5hdGl2ZUNvbXBvbmVudEZyYW1lKHR5cGUsIHNob3VsZENvbnN0cnVjdCh0eXBlKSk7XG4gICAgfVxuICB9XG5cbiAgaWYgKHR5cGVvZiB0eXBlID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBkZXNjcmliZUJ1aWx0SW5Db21wb25lbnRGcmFtZSh0eXBlKTtcbiAgfVxuXG4gIHN3aXRjaCAodHlwZSkge1xuICAgIGNhc2UgUkVBQ1RfU1VTUEVOU0VfVFlQRTpcbiAgICAgIHJldHVybiBkZXNjcmliZUJ1aWx0SW5Db21wb25lbnRGcmFtZSgnU3VzcGVuc2UnKTtcblxuICAgIGNhc2UgUkVBQ1RfU1VTUEVOU0VfTElTVF9UWVBFOlxuICAgICAgcmV0dXJuIGRlc2NyaWJlQnVpbHRJbkNvbXBvbmVudEZyYW1lKCdTdXNwZW5zZUxpc3QnKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgdHlwZSA9PT0gJ29iamVjdCcpIHtcbiAgICBzd2l0Y2ggKHR5cGUuJCR0eXBlb2YpIHtcbiAgICAgIGNhc2UgUkVBQ1RfRk9SV0FSRF9SRUZfVFlQRTpcbiAgICAgICAgcmV0dXJuIGRlc2NyaWJlRnVuY3Rpb25Db21wb25lbnRGcmFtZSh0eXBlLnJlbmRlcik7XG5cbiAgICAgIGNhc2UgUkVBQ1RfTUVNT19UWVBFOlxuICAgICAgICAvLyBNZW1vIG1heSBjb250YWluIGFueSBjb21wb25lbnQgdHlwZSBzbyB3ZSByZWN1cnNpdmVseSByZXNvbHZlIGl0LlxuICAgICAgICByZXR1cm4gZGVzY3JpYmVVbmtub3duRWxlbWVudFR5cGVGcmFtZUluREVWKHR5cGUudHlwZSwgc291cmNlLCBvd25lckZuKTtcblxuICAgICAgY2FzZSBSRUFDVF9CTE9DS19UWVBFOlxuICAgICAgICByZXR1cm4gZGVzY3JpYmVGdW5jdGlvbkNvbXBvbmVudEZyYW1lKHR5cGUuX3JlbmRlcik7XG5cbiAgICAgIGNhc2UgUkVBQ1RfTEFaWV9UWVBFOlxuICAgICAgICB7XG4gICAgICAgICAgdmFyIGxhenlDb21wb25lbnQgPSB0eXBlO1xuICAgICAgICAgIHZhciBwYXlsb2FkID0gbGF6eUNvbXBvbmVudC5fcGF5bG9hZDtcbiAgICAgICAgICB2YXIgaW5pdCA9IGxhenlDb21wb25lbnQuX2luaXQ7XG5cbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gTGF6eSBtYXkgY29udGFpbiBhbnkgY29tcG9uZW50IHR5cGUgc28gd2UgcmVjdXJzaXZlbHkgcmVzb2x2ZSBpdC5cbiAgICAgICAgICAgIHJldHVybiBkZXNjcmliZVVua25vd25FbGVtZW50VHlwZUZyYW1lSW5ERVYoaW5pdChwYXlsb2FkKSwgc291cmNlLCBvd25lckZuKTtcbiAgICAgICAgICB9IGNhdGNoICh4KSB7fVxuICAgICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuICcnO1xufVxuXG52YXIgbG9nZ2VkVHlwZUZhaWx1cmVzID0ge307XG52YXIgUmVhY3REZWJ1Z0N1cnJlbnRGcmFtZSA9IFJlYWN0U2hhcmVkSW50ZXJuYWxzLlJlYWN0RGVidWdDdXJyZW50RnJhbWU7XG5cbmZ1bmN0aW9uIHNldEN1cnJlbnRseVZhbGlkYXRpbmdFbGVtZW50KGVsZW1lbnQpIHtcbiAge1xuICAgIGlmIChlbGVtZW50KSB7XG4gICAgICB2YXIgb3duZXIgPSBlbGVtZW50Ll9vd25lcjtcbiAgICAgIHZhciBzdGFjayA9IGRlc2NyaWJlVW5rbm93bkVsZW1lbnRUeXBlRnJhbWVJbkRFVihlbGVtZW50LnR5cGUsIGVsZW1lbnQuX3NvdXJjZSwgb3duZXIgPyBvd25lci50eXBlIDogbnVsbCk7XG4gICAgICBSZWFjdERlYnVnQ3VycmVudEZyYW1lLnNldEV4dHJhU3RhY2tGcmFtZShzdGFjayk7XG4gICAgfSBlbHNlIHtcbiAgICAgIFJlYWN0RGVidWdDdXJyZW50RnJhbWUuc2V0RXh0cmFTdGFja0ZyYW1lKG51bGwpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBjaGVja1Byb3BUeXBlcyh0eXBlU3BlY3MsIHZhbHVlcywgbG9jYXRpb24sIGNvbXBvbmVudE5hbWUsIGVsZW1lbnQpIHtcbiAge1xuICAgIC8vICRGbG93Rml4TWUgVGhpcyBpcyBva2F5IGJ1dCBGbG93IGRvZXNuJ3Qga25vdyBpdC5cbiAgICB2YXIgaGFzID0gRnVuY3Rpb24uY2FsbC5iaW5kKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkpO1xuXG4gICAgZm9yICh2YXIgdHlwZVNwZWNOYW1lIGluIHR5cGVTcGVjcykge1xuICAgICAgaWYgKGhhcyh0eXBlU3BlY3MsIHR5cGVTcGVjTmFtZSkpIHtcbiAgICAgICAgdmFyIGVycm9yJDEgPSB2b2lkIDA7IC8vIFByb3AgdHlwZSB2YWxpZGF0aW9uIG1heSB0aHJvdy4gSW4gY2FzZSB0aGV5IGRvLCB3ZSBkb24ndCB3YW50IHRvXG4gICAgICAgIC8vIGZhaWwgdGhlIHJlbmRlciBwaGFzZSB3aGVyZSBpdCBkaWRuJ3QgZmFpbCBiZWZvcmUuIFNvIHdlIGxvZyBpdC5cbiAgICAgICAgLy8gQWZ0ZXIgdGhlc2UgaGF2ZSBiZWVuIGNsZWFuZWQgdXAsIHdlJ2xsIGxldCB0aGVtIHRocm93LlxuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gVGhpcyBpcyBpbnRlbnRpb25hbGx5IGFuIGludmFyaWFudCB0aGF0IGdldHMgY2F1Z2h0LiBJdCdzIHRoZSBzYW1lXG4gICAgICAgICAgLy8gYmVoYXZpb3IgYXMgd2l0aG91dCB0aGlzIHN0YXRlbWVudCBleGNlcHQgd2l0aCBhIGJldHRlciBtZXNzYWdlLlxuICAgICAgICAgIGlmICh0eXBlb2YgdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0gIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHZhciBlcnIgPSBFcnJvcigoY29tcG9uZW50TmFtZSB8fCAnUmVhY3QgY2xhc3MnKSArICc6ICcgKyBsb2NhdGlvbiArICcgdHlwZSBgJyArIHR5cGVTcGVjTmFtZSArICdgIGlzIGludmFsaWQ7ICcgKyAnaXQgbXVzdCBiZSBhIGZ1bmN0aW9uLCB1c3VhbGx5IGZyb20gdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLCBidXQgcmVjZWl2ZWQgYCcgKyB0eXBlb2YgdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0gKyAnYC4nICsgJ1RoaXMgb2Z0ZW4gaGFwcGVucyBiZWNhdXNlIG9mIHR5cG9zIHN1Y2ggYXMgYFByb3BUeXBlcy5mdW5jdGlvbmAgaW5zdGVhZCBvZiBgUHJvcFR5cGVzLmZ1bmNgLicpO1xuICAgICAgICAgICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgZXJyb3IkMSA9IHR5cGVTcGVjc1t0eXBlU3BlY05hbWVdKHZhbHVlcywgdHlwZVNwZWNOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgbnVsbCwgJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJyk7XG4gICAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgICAgZXJyb3IkMSA9IGV4O1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGVycm9yJDEgJiYgIShlcnJvciQxIGluc3RhbmNlb2YgRXJyb3IpKSB7XG4gICAgICAgICAgc2V0Q3VycmVudGx5VmFsaWRhdGluZ0VsZW1lbnQoZWxlbWVudCk7XG5cbiAgICAgICAgICBlcnJvcignJXM6IHR5cGUgc3BlY2lmaWNhdGlvbiBvZiAlcycgKyAnIGAlc2AgaXMgaW52YWxpZDsgdGhlIHR5cGUgY2hlY2tlciAnICsgJ2Z1bmN0aW9uIG11c3QgcmV0dXJuIGBudWxsYCBvciBhbiBgRXJyb3JgIGJ1dCByZXR1cm5lZCBhICVzLiAnICsgJ1lvdSBtYXkgaGF2ZSBmb3Jnb3R0ZW4gdG8gcGFzcyBhbiBhcmd1bWVudCB0byB0aGUgdHlwZSBjaGVja2VyICcgKyAnY3JlYXRvciAoYXJyYXlPZiwgaW5zdGFuY2VPZiwgb2JqZWN0T2YsIG9uZU9mLCBvbmVPZlR5cGUsIGFuZCAnICsgJ3NoYXBlIGFsbCByZXF1aXJlIGFuIGFyZ3VtZW50KS4nLCBjb21wb25lbnROYW1lIHx8ICdSZWFjdCBjbGFzcycsIGxvY2F0aW9uLCB0eXBlU3BlY05hbWUsIHR5cGVvZiBlcnJvciQxKTtcblxuICAgICAgICAgIHNldEN1cnJlbnRseVZhbGlkYXRpbmdFbGVtZW50KG51bGwpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGVycm9yJDEgaW5zdGFuY2VvZiBFcnJvciAmJiAhKGVycm9yJDEubWVzc2FnZSBpbiBsb2dnZWRUeXBlRmFpbHVyZXMpKSB7XG4gICAgICAgICAgLy8gT25seSBtb25pdG9yIHRoaXMgZmFpbHVyZSBvbmNlIGJlY2F1c2UgdGhlcmUgdGVuZHMgdG8gYmUgYSBsb3Qgb2YgdGhlXG4gICAgICAgICAgLy8gc2FtZSBlcnJvci5cbiAgICAgICAgICBsb2dnZWRUeXBlRmFpbHVyZXNbZXJyb3IkMS5tZXNzYWdlXSA9IHRydWU7XG4gICAgICAgICAgc2V0Q3VycmVudGx5VmFsaWRhdGluZ0VsZW1lbnQoZWxlbWVudCk7XG5cbiAgICAgICAgICBlcnJvcignRmFpbGVkICVzIHR5cGU6ICVzJywgbG9jYXRpb24sIGVycm9yJDEubWVzc2FnZSk7XG5cbiAgICAgICAgICBzZXRDdXJyZW50bHlWYWxpZGF0aW5nRWxlbWVudChudWxsKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG52YXIgUmVhY3RDdXJyZW50T3duZXIgPSBSZWFjdFNoYXJlZEludGVybmFscy5SZWFjdEN1cnJlbnRPd25lcjtcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgUkVTRVJWRURfUFJPUFMgPSB7XG4gIGtleTogdHJ1ZSxcbiAgcmVmOiB0cnVlLFxuICBfX3NlbGY6IHRydWUsXG4gIF9fc291cmNlOiB0cnVlXG59O1xudmFyIHNwZWNpYWxQcm9wS2V5V2FybmluZ1Nob3duO1xudmFyIHNwZWNpYWxQcm9wUmVmV2FybmluZ1Nob3duO1xudmFyIGRpZFdhcm5BYm91dFN0cmluZ1JlZnM7XG5cbntcbiAgZGlkV2FybkFib3V0U3RyaW5nUmVmcyA9IHt9O1xufVxuXG5mdW5jdGlvbiBoYXNWYWxpZFJlZihjb25maWcpIHtcbiAge1xuICAgIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGNvbmZpZywgJ3JlZicpKSB7XG4gICAgICB2YXIgZ2V0dGVyID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihjb25maWcsICdyZWYnKS5nZXQ7XG5cbiAgICAgIGlmIChnZXR0ZXIgJiYgZ2V0dGVyLmlzUmVhY3RXYXJuaW5nKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gY29uZmlnLnJlZiAhPT0gdW5kZWZpbmVkO1xufVxuXG5mdW5jdGlvbiBoYXNWYWxpZEtleShjb25maWcpIHtcbiAge1xuICAgIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGNvbmZpZywgJ2tleScpKSB7XG4gICAgICB2YXIgZ2V0dGVyID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihjb25maWcsICdrZXknKS5nZXQ7XG5cbiAgICAgIGlmIChnZXR0ZXIgJiYgZ2V0dGVyLmlzUmVhY3RXYXJuaW5nKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gY29uZmlnLmtleSAhPT0gdW5kZWZpbmVkO1xufVxuXG5mdW5jdGlvbiB3YXJuSWZTdHJpbmdSZWZDYW5ub3RCZUF1dG9Db252ZXJ0ZWQoY29uZmlnLCBzZWxmKSB7XG4gIHtcbiAgICBpZiAodHlwZW9mIGNvbmZpZy5yZWYgPT09ICdzdHJpbmcnICYmIFJlYWN0Q3VycmVudE93bmVyLmN1cnJlbnQgJiYgc2VsZiAmJiBSZWFjdEN1cnJlbnRPd25lci5jdXJyZW50LnN0YXRlTm9kZSAhPT0gc2VsZikge1xuICAgICAgdmFyIGNvbXBvbmVudE5hbWUgPSBnZXRDb21wb25lbnROYW1lKFJlYWN0Q3VycmVudE93bmVyLmN1cnJlbnQudHlwZSk7XG5cbiAgICAgIGlmICghZGlkV2FybkFib3V0U3RyaW5nUmVmc1tjb21wb25lbnROYW1lXSkge1xuICAgICAgICBlcnJvcignQ29tcG9uZW50IFwiJXNcIiBjb250YWlucyB0aGUgc3RyaW5nIHJlZiBcIiVzXCIuICcgKyAnU3VwcG9ydCBmb3Igc3RyaW5nIHJlZnMgd2lsbCBiZSByZW1vdmVkIGluIGEgZnV0dXJlIG1ham9yIHJlbGVhc2UuICcgKyAnVGhpcyBjYXNlIGNhbm5vdCBiZSBhdXRvbWF0aWNhbGx5IGNvbnZlcnRlZCB0byBhbiBhcnJvdyBmdW5jdGlvbi4gJyArICdXZSBhc2sgeW91IHRvIG1hbnVhbGx5IGZpeCB0aGlzIGNhc2UgYnkgdXNpbmcgdXNlUmVmKCkgb3IgY3JlYXRlUmVmKCkgaW5zdGVhZC4gJyArICdMZWFybiBtb3JlIGFib3V0IHVzaW5nIHJlZnMgc2FmZWx5IGhlcmU6ICcgKyAnaHR0cHM6Ly9yZWFjdGpzLm9yZy9saW5rL3N0cmljdC1tb2RlLXN0cmluZy1yZWYnLCBnZXRDb21wb25lbnROYW1lKFJlYWN0Q3VycmVudE93bmVyLmN1cnJlbnQudHlwZSksIGNvbmZpZy5yZWYpO1xuXG4gICAgICAgIGRpZFdhcm5BYm91dFN0cmluZ1JlZnNbY29tcG9uZW50TmFtZV0gPSB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBkZWZpbmVLZXlQcm9wV2FybmluZ0dldHRlcihwcm9wcywgZGlzcGxheU5hbWUpIHtcbiAge1xuICAgIHZhciB3YXJuQWJvdXRBY2Nlc3NpbmdLZXkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoIXNwZWNpYWxQcm9wS2V5V2FybmluZ1Nob3duKSB7XG4gICAgICAgIHNwZWNpYWxQcm9wS2V5V2FybmluZ1Nob3duID0gdHJ1ZTtcblxuICAgICAgICBlcnJvcignJXM6IGBrZXlgIGlzIG5vdCBhIHByb3AuIFRyeWluZyB0byBhY2Nlc3MgaXQgd2lsbCByZXN1bHQgJyArICdpbiBgdW5kZWZpbmVkYCBiZWluZyByZXR1cm5lZC4gSWYgeW91IG5lZWQgdG8gYWNjZXNzIHRoZSBzYW1lICcgKyAndmFsdWUgd2l0aGluIHRoZSBjaGlsZCBjb21wb25lbnQsIHlvdSBzaG91bGQgcGFzcyBpdCBhcyBhIGRpZmZlcmVudCAnICsgJ3Byb3AuIChodHRwczovL3JlYWN0anMub3JnL2xpbmsvc3BlY2lhbC1wcm9wcyknLCBkaXNwbGF5TmFtZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIHdhcm5BYm91dEFjY2Vzc2luZ0tleS5pc1JlYWN0V2FybmluZyA9IHRydWU7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb3BzLCAna2V5Jywge1xuICAgICAgZ2V0OiB3YXJuQWJvdXRBY2Nlc3NpbmdLZXksXG4gICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBkZWZpbmVSZWZQcm9wV2FybmluZ0dldHRlcihwcm9wcywgZGlzcGxheU5hbWUpIHtcbiAge1xuICAgIHZhciB3YXJuQWJvdXRBY2Nlc3NpbmdSZWYgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoIXNwZWNpYWxQcm9wUmVmV2FybmluZ1Nob3duKSB7XG4gICAgICAgIHNwZWNpYWxQcm9wUmVmV2FybmluZ1Nob3duID0gdHJ1ZTtcblxuICAgICAgICBlcnJvcignJXM6IGByZWZgIGlzIG5vdCBhIHByb3AuIFRyeWluZyB0byBhY2Nlc3MgaXQgd2lsbCByZXN1bHQgJyArICdpbiBgdW5kZWZpbmVkYCBiZWluZyByZXR1cm5lZC4gSWYgeW91IG5lZWQgdG8gYWNjZXNzIHRoZSBzYW1lICcgKyAndmFsdWUgd2l0aGluIHRoZSBjaGlsZCBjb21wb25lbnQsIHlvdSBzaG91bGQgcGFzcyBpdCBhcyBhIGRpZmZlcmVudCAnICsgJ3Byb3AuIChodHRwczovL3JlYWN0anMub3JnL2xpbmsvc3BlY2lhbC1wcm9wcyknLCBkaXNwbGF5TmFtZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIHdhcm5BYm91dEFjY2Vzc2luZ1JlZi5pc1JlYWN0V2FybmluZyA9IHRydWU7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb3BzLCAncmVmJywge1xuICAgICAgZ2V0OiB3YXJuQWJvdXRBY2Nlc3NpbmdSZWYsXG4gICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgfVxufVxuLyoqXG4gKiBGYWN0b3J5IG1ldGhvZCB0byBjcmVhdGUgYSBuZXcgUmVhY3QgZWxlbWVudC4gVGhpcyBubyBsb25nZXIgYWRoZXJlcyB0b1xuICogdGhlIGNsYXNzIHBhdHRlcm4sIHNvIGRvIG5vdCB1c2UgbmV3IHRvIGNhbGwgaXQuIEFsc28sIGluc3RhbmNlb2YgY2hlY2tcbiAqIHdpbGwgbm90IHdvcmsuIEluc3RlYWQgdGVzdCAkJHR5cGVvZiBmaWVsZCBhZ2FpbnN0IFN5bWJvbC5mb3IoJ3JlYWN0LmVsZW1lbnQnKSB0byBjaGVja1xuICogaWYgc29tZXRoaW5nIGlzIGEgUmVhY3QgRWxlbWVudC5cbiAqXG4gKiBAcGFyYW0geyp9IHR5cGVcbiAqIEBwYXJhbSB7Kn0gcHJvcHNcbiAqIEBwYXJhbSB7Kn0ga2V5XG4gKiBAcGFyYW0ge3N0cmluZ3xvYmplY3R9IHJlZlxuICogQHBhcmFtIHsqfSBvd25lclxuICogQHBhcmFtIHsqfSBzZWxmIEEgKnRlbXBvcmFyeSogaGVscGVyIHRvIGRldGVjdCBwbGFjZXMgd2hlcmUgYHRoaXNgIGlzXG4gKiBkaWZmZXJlbnQgZnJvbSB0aGUgYG93bmVyYCB3aGVuIFJlYWN0LmNyZWF0ZUVsZW1lbnQgaXMgY2FsbGVkLCBzbyB0aGF0IHdlXG4gKiBjYW4gd2Fybi4gV2Ugd2FudCB0byBnZXQgcmlkIG9mIG93bmVyIGFuZCByZXBsYWNlIHN0cmluZyBgcmVmYHMgd2l0aCBhcnJvd1xuICogZnVuY3Rpb25zLCBhbmQgYXMgbG9uZyBhcyBgdGhpc2AgYW5kIG93bmVyIGFyZSB0aGUgc2FtZSwgdGhlcmUgd2lsbCBiZSBub1xuICogY2hhbmdlIGluIGJlaGF2aW9yLlxuICogQHBhcmFtIHsqfSBzb3VyY2UgQW4gYW5ub3RhdGlvbiBvYmplY3QgKGFkZGVkIGJ5IGEgdHJhbnNwaWxlciBvciBvdGhlcndpc2UpXG4gKiBpbmRpY2F0aW5nIGZpbGVuYW1lLCBsaW5lIG51bWJlciwgYW5kL29yIG90aGVyIGluZm9ybWF0aW9uLlxuICogQGludGVybmFsXG4gKi9cblxuXG52YXIgUmVhY3RFbGVtZW50ID0gZnVuY3Rpb24gKHR5cGUsIGtleSwgcmVmLCBzZWxmLCBzb3VyY2UsIG93bmVyLCBwcm9wcykge1xuICB2YXIgZWxlbWVudCA9IHtcbiAgICAvLyBUaGlzIHRhZyBhbGxvd3MgdXMgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyBhcyBhIFJlYWN0IEVsZW1lbnRcbiAgICAkJHR5cGVvZjogUkVBQ1RfRUxFTUVOVF9UWVBFLFxuICAgIC8vIEJ1aWx0LWluIHByb3BlcnRpZXMgdGhhdCBiZWxvbmcgb24gdGhlIGVsZW1lbnRcbiAgICB0eXBlOiB0eXBlLFxuICAgIGtleToga2V5LFxuICAgIHJlZjogcmVmLFxuICAgIHByb3BzOiBwcm9wcyxcbiAgICAvLyBSZWNvcmQgdGhlIGNvbXBvbmVudCByZXNwb25zaWJsZSBmb3IgY3JlYXRpbmcgdGhpcyBlbGVtZW50LlxuICAgIF9vd25lcjogb3duZXJcbiAgfTtcblxuICB7XG4gICAgLy8gVGhlIHZhbGlkYXRpb24gZmxhZyBpcyBjdXJyZW50bHkgbXV0YXRpdmUuIFdlIHB1dCBpdCBvblxuICAgIC8vIGFuIGV4dGVybmFsIGJhY2tpbmcgc3RvcmUgc28gdGhhdCB3ZSBjYW4gZnJlZXplIHRoZSB3aG9sZSBvYmplY3QuXG4gICAgLy8gVGhpcyBjYW4gYmUgcmVwbGFjZWQgd2l0aCBhIFdlYWtNYXAgb25jZSB0aGV5IGFyZSBpbXBsZW1lbnRlZCBpblxuICAgIC8vIGNvbW1vbmx5IHVzZWQgZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnRzLlxuICAgIGVsZW1lbnQuX3N0b3JlID0ge307IC8vIFRvIG1ha2UgY29tcGFyaW5nIFJlYWN0RWxlbWVudHMgZWFzaWVyIGZvciB0ZXN0aW5nIHB1cnBvc2VzLCB3ZSBtYWtlXG4gICAgLy8gdGhlIHZhbGlkYXRpb24gZmxhZyBub24tZW51bWVyYWJsZSAod2hlcmUgcG9zc2libGUsIHdoaWNoIHNob3VsZFxuICAgIC8vIGluY2x1ZGUgZXZlcnkgZW52aXJvbm1lbnQgd2UgcnVuIHRlc3RzIGluKSwgc28gdGhlIHRlc3QgZnJhbWV3b3JrXG4gICAgLy8gaWdub3JlcyBpdC5cblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlbGVtZW50Ll9zdG9yZSwgJ3ZhbGlkYXRlZCcsIHtcbiAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgdmFsdWU6IGZhbHNlXG4gICAgfSk7IC8vIHNlbGYgYW5kIHNvdXJjZSBhcmUgREVWIG9ubHkgcHJvcGVydGllcy5cblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlbGVtZW50LCAnX3NlbGYnLCB7XG4gICAgICBjb25maWd1cmFibGU6IGZhbHNlLFxuICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICB3cml0YWJsZTogZmFsc2UsXG4gICAgICB2YWx1ZTogc2VsZlxuICAgIH0pOyAvLyBUd28gZWxlbWVudHMgY3JlYXRlZCBpbiB0d28gZGlmZmVyZW50IHBsYWNlcyBzaG91bGQgYmUgY29uc2lkZXJlZFxuICAgIC8vIGVxdWFsIGZvciB0ZXN0aW5nIHB1cnBvc2VzIGFuZCB0aGVyZWZvcmUgd2UgaGlkZSBpdCBmcm9tIGVudW1lcmF0aW9uLlxuXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGVsZW1lbnQsICdfc291cmNlJywge1xuICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSxcbiAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgd3JpdGFibGU6IGZhbHNlLFxuICAgICAgdmFsdWU6IHNvdXJjZVxuICAgIH0pO1xuXG4gICAgaWYgKE9iamVjdC5mcmVlemUpIHtcbiAgICAgIE9iamVjdC5mcmVlemUoZWxlbWVudC5wcm9wcyk7XG4gICAgICBPYmplY3QuZnJlZXplKGVsZW1lbnQpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBlbGVtZW50O1xufTtcbi8qKlxuICogaHR0cHM6Ly9naXRodWIuY29tL3JlYWN0anMvcmZjcy9wdWxsLzEwN1xuICogQHBhcmFtIHsqfSB0eXBlXG4gKiBAcGFyYW0ge29iamVjdH0gcHJvcHNcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXlcbiAqL1xuXG5mdW5jdGlvbiBqc3hERVYodHlwZSwgY29uZmlnLCBtYXliZUtleSwgc291cmNlLCBzZWxmKSB7XG4gIHtcbiAgICB2YXIgcHJvcE5hbWU7IC8vIFJlc2VydmVkIG5hbWVzIGFyZSBleHRyYWN0ZWRcblxuICAgIHZhciBwcm9wcyA9IHt9O1xuICAgIHZhciBrZXkgPSBudWxsO1xuICAgIHZhciByZWYgPSBudWxsOyAvLyBDdXJyZW50bHksIGtleSBjYW4gYmUgc3ByZWFkIGluIGFzIGEgcHJvcC4gVGhpcyBjYXVzZXMgYSBwb3RlbnRpYWxcbiAgICAvLyBpc3N1ZSBpZiBrZXkgaXMgYWxzbyBleHBsaWNpdGx5IGRlY2xhcmVkIChpZS4gPGRpdiB7Li4ucHJvcHN9IGtleT1cIkhpXCIgLz5cbiAgICAvLyBvciA8ZGl2IGtleT1cIkhpXCIgey4uLnByb3BzfSAvPiApLiBXZSB3YW50IHRvIGRlcHJlY2F0ZSBrZXkgc3ByZWFkLFxuICAgIC8vIGJ1dCBhcyBhbiBpbnRlcm1lZGlhcnkgc3RlcCwgd2Ugd2lsbCB1c2UganN4REVWIGZvciBldmVyeXRoaW5nIGV4Y2VwdFxuICAgIC8vIDxkaXYgey4uLnByb3BzfSBrZXk9XCJIaVwiIC8+LCBiZWNhdXNlIHdlIGFyZW4ndCBjdXJyZW50bHkgYWJsZSB0byB0ZWxsIGlmXG4gICAgLy8ga2V5IGlzIGV4cGxpY2l0bHkgZGVjbGFyZWQgdG8gYmUgdW5kZWZpbmVkIG9yIG5vdC5cblxuICAgIGlmIChtYXliZUtleSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBrZXkgPSAnJyArIG1heWJlS2V5O1xuICAgIH1cblxuICAgIGlmIChoYXNWYWxpZEtleShjb25maWcpKSB7XG4gICAgICBrZXkgPSAnJyArIGNvbmZpZy5rZXk7XG4gICAgfVxuXG4gICAgaWYgKGhhc1ZhbGlkUmVmKGNvbmZpZykpIHtcbiAgICAgIHJlZiA9IGNvbmZpZy5yZWY7XG4gICAgICB3YXJuSWZTdHJpbmdSZWZDYW5ub3RCZUF1dG9Db252ZXJ0ZWQoY29uZmlnLCBzZWxmKTtcbiAgICB9IC8vIFJlbWFpbmluZyBwcm9wZXJ0aWVzIGFyZSBhZGRlZCB0byBhIG5ldyBwcm9wcyBvYmplY3RcblxuXG4gICAgZm9yIChwcm9wTmFtZSBpbiBjb25maWcpIHtcbiAgICAgIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGNvbmZpZywgcHJvcE5hbWUpICYmICFSRVNFUlZFRF9QUk9QUy5oYXNPd25Qcm9wZXJ0eShwcm9wTmFtZSkpIHtcbiAgICAgICAgcHJvcHNbcHJvcE5hbWVdID0gY29uZmlnW3Byb3BOYW1lXTtcbiAgICAgIH1cbiAgICB9IC8vIFJlc29sdmUgZGVmYXVsdCBwcm9wc1xuXG5cbiAgICBpZiAodHlwZSAmJiB0eXBlLmRlZmF1bHRQcm9wcykge1xuICAgICAgdmFyIGRlZmF1bHRQcm9wcyA9IHR5cGUuZGVmYXVsdFByb3BzO1xuXG4gICAgICBmb3IgKHByb3BOYW1lIGluIGRlZmF1bHRQcm9wcykge1xuICAgICAgICBpZiAocHJvcHNbcHJvcE5hbWVdID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBwcm9wc1twcm9wTmFtZV0gPSBkZWZhdWx0UHJvcHNbcHJvcE5hbWVdO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGtleSB8fCByZWYpIHtcbiAgICAgIHZhciBkaXNwbGF5TmFtZSA9IHR5cGVvZiB0eXBlID09PSAnZnVuY3Rpb24nID8gdHlwZS5kaXNwbGF5TmFtZSB8fCB0eXBlLm5hbWUgfHwgJ1Vua25vd24nIDogdHlwZTtcblxuICAgICAgaWYgKGtleSkge1xuICAgICAgICBkZWZpbmVLZXlQcm9wV2FybmluZ0dldHRlcihwcm9wcywgZGlzcGxheU5hbWUpO1xuICAgICAgfVxuXG4gICAgICBpZiAocmVmKSB7XG4gICAgICAgIGRlZmluZVJlZlByb3BXYXJuaW5nR2V0dGVyKHByb3BzLCBkaXNwbGF5TmFtZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlYWN0RWxlbWVudCh0eXBlLCBrZXksIHJlZiwgc2VsZiwgc291cmNlLCBSZWFjdEN1cnJlbnRPd25lci5jdXJyZW50LCBwcm9wcyk7XG4gIH1cbn1cblxudmFyIFJlYWN0Q3VycmVudE93bmVyJDEgPSBSZWFjdFNoYXJlZEludGVybmFscy5SZWFjdEN1cnJlbnRPd25lcjtcbnZhciBSZWFjdERlYnVnQ3VycmVudEZyYW1lJDEgPSBSZWFjdFNoYXJlZEludGVybmFscy5SZWFjdERlYnVnQ3VycmVudEZyYW1lO1xuXG5mdW5jdGlvbiBzZXRDdXJyZW50bHlWYWxpZGF0aW5nRWxlbWVudCQxKGVsZW1lbnQpIHtcbiAge1xuICAgIGlmIChlbGVtZW50KSB7XG4gICAgICB2YXIgb3duZXIgPSBlbGVtZW50Ll9vd25lcjtcbiAgICAgIHZhciBzdGFjayA9IGRlc2NyaWJlVW5rbm93bkVsZW1lbnRUeXBlRnJhbWVJbkRFVihlbGVtZW50LnR5cGUsIGVsZW1lbnQuX3NvdXJjZSwgb3duZXIgPyBvd25lci50eXBlIDogbnVsbCk7XG4gICAgICBSZWFjdERlYnVnQ3VycmVudEZyYW1lJDEuc2V0RXh0cmFTdGFja0ZyYW1lKHN0YWNrKTtcbiAgICB9IGVsc2Uge1xuICAgICAgUmVhY3REZWJ1Z0N1cnJlbnRGcmFtZSQxLnNldEV4dHJhU3RhY2tGcmFtZShudWxsKTtcbiAgICB9XG4gIH1cbn1cblxudmFyIHByb3BUeXBlc01pc3NwZWxsV2FybmluZ1Nob3duO1xuXG57XG4gIHByb3BUeXBlc01pc3NwZWxsV2FybmluZ1Nob3duID0gZmFsc2U7XG59XG4vKipcbiAqIFZlcmlmaWVzIHRoZSBvYmplY3QgaXMgYSBSZWFjdEVsZW1lbnQuXG4gKiBTZWUgaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL3JlYWN0LWFwaS5odG1sI2lzdmFsaWRlbGVtZW50XG4gKiBAcGFyYW0gez9vYmplY3R9IG9iamVjdFxuICogQHJldHVybiB7Ym9vbGVhbn0gVHJ1ZSBpZiBgb2JqZWN0YCBpcyBhIFJlYWN0RWxlbWVudC5cbiAqIEBmaW5hbFxuICovXG5cbmZ1bmN0aW9uIGlzVmFsaWRFbGVtZW50KG9iamVjdCkge1xuICB7XG4gICAgcmV0dXJuIHR5cGVvZiBvYmplY3QgPT09ICdvYmplY3QnICYmIG9iamVjdCAhPT0gbnVsbCAmJiBvYmplY3QuJCR0eXBlb2YgPT09IFJFQUNUX0VMRU1FTlRfVFlQRTtcbiAgfVxufVxuXG5mdW5jdGlvbiBnZXREZWNsYXJhdGlvbkVycm9yQWRkZW5kdW0oKSB7XG4gIHtcbiAgICBpZiAoUmVhY3RDdXJyZW50T3duZXIkMS5jdXJyZW50KSB7XG4gICAgICB2YXIgbmFtZSA9IGdldENvbXBvbmVudE5hbWUoUmVhY3RDdXJyZW50T3duZXIkMS5jdXJyZW50LnR5cGUpO1xuXG4gICAgICBpZiAobmFtZSkge1xuICAgICAgICByZXR1cm4gJ1xcblxcbkNoZWNrIHRoZSByZW5kZXIgbWV0aG9kIG9mIGAnICsgbmFtZSArICdgLic7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuICcnO1xuICB9XG59XG5cbmZ1bmN0aW9uIGdldFNvdXJjZUluZm9FcnJvckFkZGVuZHVtKHNvdXJjZSkge1xuICB7XG4gICAgaWYgKHNvdXJjZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICB2YXIgZmlsZU5hbWUgPSBzb3VyY2UuZmlsZU5hbWUucmVwbGFjZSgvXi4qW1xcXFxcXC9dLywgJycpO1xuICAgICAgdmFyIGxpbmVOdW1iZXIgPSBzb3VyY2UubGluZU51bWJlcjtcbiAgICAgIHJldHVybiAnXFxuXFxuQ2hlY2sgeW91ciBjb2RlIGF0ICcgKyBmaWxlTmFtZSArICc6JyArIGxpbmVOdW1iZXIgKyAnLic7XG4gICAgfVxuXG4gICAgcmV0dXJuICcnO1xuICB9XG59XG4vKipcbiAqIFdhcm4gaWYgdGhlcmUncyBubyBrZXkgZXhwbGljaXRseSBzZXQgb24gZHluYW1pYyBhcnJheXMgb2YgY2hpbGRyZW4gb3JcbiAqIG9iamVjdCBrZXlzIGFyZSBub3QgdmFsaWQuIFRoaXMgYWxsb3dzIHVzIHRvIGtlZXAgdHJhY2sgb2YgY2hpbGRyZW4gYmV0d2VlblxuICogdXBkYXRlcy5cbiAqL1xuXG5cbnZhciBvd25lckhhc0tleVVzZVdhcm5pbmcgPSB7fTtcblxuZnVuY3Rpb24gZ2V0Q3VycmVudENvbXBvbmVudEVycm9ySW5mbyhwYXJlbnRUeXBlKSB7XG4gIHtcbiAgICB2YXIgaW5mbyA9IGdldERlY2xhcmF0aW9uRXJyb3JBZGRlbmR1bSgpO1xuXG4gICAgaWYgKCFpbmZvKSB7XG4gICAgICB2YXIgcGFyZW50TmFtZSA9IHR5cGVvZiBwYXJlbnRUeXBlID09PSAnc3RyaW5nJyA/IHBhcmVudFR5cGUgOiBwYXJlbnRUeXBlLmRpc3BsYXlOYW1lIHx8IHBhcmVudFR5cGUubmFtZTtcblxuICAgICAgaWYgKHBhcmVudE5hbWUpIHtcbiAgICAgICAgaW5mbyA9IFwiXFxuXFxuQ2hlY2sgdGhlIHRvcC1sZXZlbCByZW5kZXIgY2FsbCB1c2luZyA8XCIgKyBwYXJlbnROYW1lICsgXCI+LlwiO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBpbmZvO1xuICB9XG59XG4vKipcbiAqIFdhcm4gaWYgdGhlIGVsZW1lbnQgZG9lc24ndCBoYXZlIGFuIGV4cGxpY2l0IGtleSBhc3NpZ25lZCB0byBpdC5cbiAqIFRoaXMgZWxlbWVudCBpcyBpbiBhbiBhcnJheS4gVGhlIGFycmF5IGNvdWxkIGdyb3cgYW5kIHNocmluayBvciBiZVxuICogcmVvcmRlcmVkLiBBbGwgY2hpbGRyZW4gdGhhdCBoYXZlbid0IGFscmVhZHkgYmVlbiB2YWxpZGF0ZWQgYXJlIHJlcXVpcmVkIHRvXG4gKiBoYXZlIGEgXCJrZXlcIiBwcm9wZXJ0eSBhc3NpZ25lZCB0byBpdC4gRXJyb3Igc3RhdHVzZXMgYXJlIGNhY2hlZCBzbyBhIHdhcm5pbmdcbiAqIHdpbGwgb25seSBiZSBzaG93biBvbmNlLlxuICpcbiAqIEBpbnRlcm5hbFxuICogQHBhcmFtIHtSZWFjdEVsZW1lbnR9IGVsZW1lbnQgRWxlbWVudCB0aGF0IHJlcXVpcmVzIGEga2V5LlxuICogQHBhcmFtIHsqfSBwYXJlbnRUeXBlIGVsZW1lbnQncyBwYXJlbnQncyB0eXBlLlxuICovXG5cblxuZnVuY3Rpb24gdmFsaWRhdGVFeHBsaWNpdEtleShlbGVtZW50LCBwYXJlbnRUeXBlKSB7XG4gIHtcbiAgICBpZiAoIWVsZW1lbnQuX3N0b3JlIHx8IGVsZW1lbnQuX3N0b3JlLnZhbGlkYXRlZCB8fCBlbGVtZW50LmtleSAhPSBudWxsKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZWxlbWVudC5fc3RvcmUudmFsaWRhdGVkID0gdHJ1ZTtcbiAgICB2YXIgY3VycmVudENvbXBvbmVudEVycm9ySW5mbyA9IGdldEN1cnJlbnRDb21wb25lbnRFcnJvckluZm8ocGFyZW50VHlwZSk7XG5cbiAgICBpZiAob3duZXJIYXNLZXlVc2VXYXJuaW5nW2N1cnJlbnRDb21wb25lbnRFcnJvckluZm9dKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgb3duZXJIYXNLZXlVc2VXYXJuaW5nW2N1cnJlbnRDb21wb25lbnRFcnJvckluZm9dID0gdHJ1ZTsgLy8gVXN1YWxseSB0aGUgY3VycmVudCBvd25lciBpcyB0aGUgb2ZmZW5kZXIsIGJ1dCBpZiBpdCBhY2NlcHRzIGNoaWxkcmVuIGFzIGFcbiAgICAvLyBwcm9wZXJ0eSwgaXQgbWF5IGJlIHRoZSBjcmVhdG9yIG9mIHRoZSBjaGlsZCB0aGF0J3MgcmVzcG9uc2libGUgZm9yXG4gICAgLy8gYXNzaWduaW5nIGl0IGEga2V5LlxuXG4gICAgdmFyIGNoaWxkT3duZXIgPSAnJztcblxuICAgIGlmIChlbGVtZW50ICYmIGVsZW1lbnQuX293bmVyICYmIGVsZW1lbnQuX293bmVyICE9PSBSZWFjdEN1cnJlbnRPd25lciQxLmN1cnJlbnQpIHtcbiAgICAgIC8vIEdpdmUgdGhlIGNvbXBvbmVudCB0aGF0IG9yaWdpbmFsbHkgY3JlYXRlZCB0aGlzIGNoaWxkLlxuICAgICAgY2hpbGRPd25lciA9IFwiIEl0IHdhcyBwYXNzZWQgYSBjaGlsZCBmcm9tIFwiICsgZ2V0Q29tcG9uZW50TmFtZShlbGVtZW50Ll9vd25lci50eXBlKSArIFwiLlwiO1xuICAgIH1cblxuICAgIHNldEN1cnJlbnRseVZhbGlkYXRpbmdFbGVtZW50JDEoZWxlbWVudCk7XG5cbiAgICBlcnJvcignRWFjaCBjaGlsZCBpbiBhIGxpc3Qgc2hvdWxkIGhhdmUgYSB1bmlxdWUgXCJrZXlcIiBwcm9wLicgKyAnJXMlcyBTZWUgaHR0cHM6Ly9yZWFjdGpzLm9yZy9saW5rL3dhcm5pbmcta2V5cyBmb3IgbW9yZSBpbmZvcm1hdGlvbi4nLCBjdXJyZW50Q29tcG9uZW50RXJyb3JJbmZvLCBjaGlsZE93bmVyKTtcblxuICAgIHNldEN1cnJlbnRseVZhbGlkYXRpbmdFbGVtZW50JDEobnVsbCk7XG4gIH1cbn1cbi8qKlxuICogRW5zdXJlIHRoYXQgZXZlcnkgZWxlbWVudCBlaXRoZXIgaXMgcGFzc2VkIGluIGEgc3RhdGljIGxvY2F0aW9uLCBpbiBhblxuICogYXJyYXkgd2l0aCBhbiBleHBsaWNpdCBrZXlzIHByb3BlcnR5IGRlZmluZWQsIG9yIGluIGFuIG9iamVjdCBsaXRlcmFsXG4gKiB3aXRoIHZhbGlkIGtleSBwcm9wZXJ0eS5cbiAqXG4gKiBAaW50ZXJuYWxcbiAqIEBwYXJhbSB7UmVhY3ROb2RlfSBub2RlIFN0YXRpY2FsbHkgcGFzc2VkIGNoaWxkIG9mIGFueSB0eXBlLlxuICogQHBhcmFtIHsqfSBwYXJlbnRUeXBlIG5vZGUncyBwYXJlbnQncyB0eXBlLlxuICovXG5cblxuZnVuY3Rpb24gdmFsaWRhdGVDaGlsZEtleXMobm9kZSwgcGFyZW50VHlwZSkge1xuICB7XG4gICAgaWYgKHR5cGVvZiBub2RlICE9PSAnb2JqZWN0Jykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChBcnJheS5pc0FycmF5KG5vZGUpKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG5vZGUubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIGNoaWxkID0gbm9kZVtpXTtcblxuICAgICAgICBpZiAoaXNWYWxpZEVsZW1lbnQoY2hpbGQpKSB7XG4gICAgICAgICAgdmFsaWRhdGVFeHBsaWNpdEtleShjaGlsZCwgcGFyZW50VHlwZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGlzVmFsaWRFbGVtZW50KG5vZGUpKSB7XG4gICAgICAvLyBUaGlzIGVsZW1lbnQgd2FzIHBhc3NlZCBpbiBhIHZhbGlkIGxvY2F0aW9uLlxuICAgICAgaWYgKG5vZGUuX3N0b3JlKSB7XG4gICAgICAgIG5vZGUuX3N0b3JlLnZhbGlkYXRlZCA9IHRydWU7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChub2RlKSB7XG4gICAgICB2YXIgaXRlcmF0b3JGbiA9IGdldEl0ZXJhdG9yRm4obm9kZSk7XG5cbiAgICAgIGlmICh0eXBlb2YgaXRlcmF0b3JGbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAvLyBFbnRyeSBpdGVyYXRvcnMgdXNlZCB0byBwcm92aWRlIGltcGxpY2l0IGtleXMsXG4gICAgICAgIC8vIGJ1dCBub3cgd2UgcHJpbnQgYSBzZXBhcmF0ZSB3YXJuaW5nIGZvciB0aGVtIGxhdGVyLlxuICAgICAgICBpZiAoaXRlcmF0b3JGbiAhPT0gbm9kZS5lbnRyaWVzKSB7XG4gICAgICAgICAgdmFyIGl0ZXJhdG9yID0gaXRlcmF0b3JGbi5jYWxsKG5vZGUpO1xuICAgICAgICAgIHZhciBzdGVwO1xuXG4gICAgICAgICAgd2hpbGUgKCEoc3RlcCA9IGl0ZXJhdG9yLm5leHQoKSkuZG9uZSkge1xuICAgICAgICAgICAgaWYgKGlzVmFsaWRFbGVtZW50KHN0ZXAudmFsdWUpKSB7XG4gICAgICAgICAgICAgIHZhbGlkYXRlRXhwbGljaXRLZXkoc3RlcC52YWx1ZSwgcGFyZW50VHlwZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4vKipcbiAqIEdpdmVuIGFuIGVsZW1lbnQsIHZhbGlkYXRlIHRoYXQgaXRzIHByb3BzIGZvbGxvdyB0aGUgcHJvcFR5cGVzIGRlZmluaXRpb24sXG4gKiBwcm92aWRlZCBieSB0aGUgdHlwZS5cbiAqXG4gKiBAcGFyYW0ge1JlYWN0RWxlbWVudH0gZWxlbWVudFxuICovXG5cblxuZnVuY3Rpb24gdmFsaWRhdGVQcm9wVHlwZXMoZWxlbWVudCkge1xuICB7XG4gICAgdmFyIHR5cGUgPSBlbGVtZW50LnR5cGU7XG5cbiAgICBpZiAodHlwZSA9PT0gbnVsbCB8fCB0eXBlID09PSB1bmRlZmluZWQgfHwgdHlwZW9mIHR5cGUgPT09ICdzdHJpbmcnKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmFyIHByb3BUeXBlcztcblxuICAgIGlmICh0eXBlb2YgdHlwZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcHJvcFR5cGVzID0gdHlwZS5wcm9wVHlwZXM7XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgdHlwZSA9PT0gJ29iamVjdCcgJiYgKHR5cGUuJCR0eXBlb2YgPT09IFJFQUNUX0ZPUldBUkRfUkVGX1RZUEUgfHwgLy8gTm90ZTogTWVtbyBvbmx5IGNoZWNrcyBvdXRlciBwcm9wcyBoZXJlLlxuICAgIC8vIElubmVyIHByb3BzIGFyZSBjaGVja2VkIGluIHRoZSByZWNvbmNpbGVyLlxuICAgIHR5cGUuJCR0eXBlb2YgPT09IFJFQUNUX01FTU9fVFlQRSkpIHtcbiAgICAgIHByb3BUeXBlcyA9IHR5cGUucHJvcFR5cGVzO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKHByb3BUeXBlcykge1xuICAgICAgLy8gSW50ZW50aW9uYWxseSBpbnNpZGUgdG8gYXZvaWQgdHJpZ2dlcmluZyBsYXp5IGluaXRpYWxpemVyczpcbiAgICAgIHZhciBuYW1lID0gZ2V0Q29tcG9uZW50TmFtZSh0eXBlKTtcbiAgICAgIGNoZWNrUHJvcFR5cGVzKHByb3BUeXBlcywgZWxlbWVudC5wcm9wcywgJ3Byb3AnLCBuYW1lLCBlbGVtZW50KTtcbiAgICB9IGVsc2UgaWYgKHR5cGUuUHJvcFR5cGVzICE9PSB1bmRlZmluZWQgJiYgIXByb3BUeXBlc01pc3NwZWxsV2FybmluZ1Nob3duKSB7XG4gICAgICBwcm9wVHlwZXNNaXNzcGVsbFdhcm5pbmdTaG93biA9IHRydWU7IC8vIEludGVudGlvbmFsbHkgaW5zaWRlIHRvIGF2b2lkIHRyaWdnZXJpbmcgbGF6eSBpbml0aWFsaXplcnM6XG5cbiAgICAgIHZhciBfbmFtZSA9IGdldENvbXBvbmVudE5hbWUodHlwZSk7XG5cbiAgICAgIGVycm9yKCdDb21wb25lbnQgJXMgZGVjbGFyZWQgYFByb3BUeXBlc2AgaW5zdGVhZCBvZiBgcHJvcFR5cGVzYC4gRGlkIHlvdSBtaXNzcGVsbCB0aGUgcHJvcGVydHkgYXNzaWdubWVudD8nLCBfbmFtZSB8fCAnVW5rbm93bicpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgdHlwZS5nZXREZWZhdWx0UHJvcHMgPT09ICdmdW5jdGlvbicgJiYgIXR5cGUuZ2V0RGVmYXVsdFByb3BzLmlzUmVhY3RDbGFzc0FwcHJvdmVkKSB7XG4gICAgICBlcnJvcignZ2V0RGVmYXVsdFByb3BzIGlzIG9ubHkgdXNlZCBvbiBjbGFzc2ljIFJlYWN0LmNyZWF0ZUNsYXNzICcgKyAnZGVmaW5pdGlvbnMuIFVzZSBhIHN0YXRpYyBwcm9wZXJ0eSBuYW1lZCBgZGVmYXVsdFByb3BzYCBpbnN0ZWFkLicpO1xuICAgIH1cbiAgfVxufVxuLyoqXG4gKiBHaXZlbiBhIGZyYWdtZW50LCB2YWxpZGF0ZSB0aGF0IGl0IGNhbiBvbmx5IGJlIHByb3ZpZGVkIHdpdGggZnJhZ21lbnQgcHJvcHNcbiAqIEBwYXJhbSB7UmVhY3RFbGVtZW50fSBmcmFnbWVudFxuICovXG5cblxuZnVuY3Rpb24gdmFsaWRhdGVGcmFnbWVudFByb3BzKGZyYWdtZW50KSB7XG4gIHtcbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKGZyYWdtZW50LnByb3BzKTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmIChrZXkgIT09ICdjaGlsZHJlbicgJiYga2V5ICE9PSAna2V5Jykge1xuICAgICAgICBzZXRDdXJyZW50bHlWYWxpZGF0aW5nRWxlbWVudCQxKGZyYWdtZW50KTtcblxuICAgICAgICBlcnJvcignSW52YWxpZCBwcm9wIGAlc2Agc3VwcGxpZWQgdG8gYFJlYWN0LkZyYWdtZW50YC4gJyArICdSZWFjdC5GcmFnbWVudCBjYW4gb25seSBoYXZlIGBrZXlgIGFuZCBgY2hpbGRyZW5gIHByb3BzLicsIGtleSk7XG5cbiAgICAgICAgc2V0Q3VycmVudGx5VmFsaWRhdGluZ0VsZW1lbnQkMShudWxsKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGZyYWdtZW50LnJlZiAhPT0gbnVsbCkge1xuICAgICAgc2V0Q3VycmVudGx5VmFsaWRhdGluZ0VsZW1lbnQkMShmcmFnbWVudCk7XG5cbiAgICAgIGVycm9yKCdJbnZhbGlkIGF0dHJpYnV0ZSBgcmVmYCBzdXBwbGllZCB0byBgUmVhY3QuRnJhZ21lbnRgLicpO1xuXG4gICAgICBzZXRDdXJyZW50bHlWYWxpZGF0aW5nRWxlbWVudCQxKG51bGwpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBqc3hXaXRoVmFsaWRhdGlvbih0eXBlLCBwcm9wcywga2V5LCBpc1N0YXRpY0NoaWxkcmVuLCBzb3VyY2UsIHNlbGYpIHtcbiAge1xuICAgIHZhciB2YWxpZFR5cGUgPSBpc1ZhbGlkRWxlbWVudFR5cGUodHlwZSk7IC8vIFdlIHdhcm4gaW4gdGhpcyBjYXNlIGJ1dCBkb24ndCB0aHJvdy4gV2UgZXhwZWN0IHRoZSBlbGVtZW50IGNyZWF0aW9uIHRvXG4gICAgLy8gc3VjY2VlZCBhbmQgdGhlcmUgd2lsbCBsaWtlbHkgYmUgZXJyb3JzIGluIHJlbmRlci5cblxuICAgIGlmICghdmFsaWRUeXBlKSB7XG4gICAgICB2YXIgaW5mbyA9ICcnO1xuXG4gICAgICBpZiAodHlwZSA9PT0gdW5kZWZpbmVkIHx8IHR5cGVvZiB0eXBlID09PSAnb2JqZWN0JyAmJiB0eXBlICE9PSBudWxsICYmIE9iamVjdC5rZXlzKHR5cGUpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBpbmZvICs9ICcgWW91IGxpa2VseSBmb3Jnb3QgdG8gZXhwb3J0IHlvdXIgY29tcG9uZW50IGZyb20gdGhlIGZpbGUgJyArIFwiaXQncyBkZWZpbmVkIGluLCBvciB5b3UgbWlnaHQgaGF2ZSBtaXhlZCB1cCBkZWZhdWx0IGFuZCBuYW1lZCBpbXBvcnRzLlwiO1xuICAgICAgfVxuXG4gICAgICB2YXIgc291cmNlSW5mbyA9IGdldFNvdXJjZUluZm9FcnJvckFkZGVuZHVtKHNvdXJjZSk7XG5cbiAgICAgIGlmIChzb3VyY2VJbmZvKSB7XG4gICAgICAgIGluZm8gKz0gc291cmNlSW5mbztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGluZm8gKz0gZ2V0RGVjbGFyYXRpb25FcnJvckFkZGVuZHVtKCk7XG4gICAgICB9XG5cbiAgICAgIHZhciB0eXBlU3RyaW5nO1xuXG4gICAgICBpZiAodHlwZSA9PT0gbnVsbCkge1xuICAgICAgICB0eXBlU3RyaW5nID0gJ251bGwnO1xuICAgICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KHR5cGUpKSB7XG4gICAgICAgIHR5cGVTdHJpbmcgPSAnYXJyYXknO1xuICAgICAgfSBlbHNlIGlmICh0eXBlICE9PSB1bmRlZmluZWQgJiYgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfRUxFTUVOVF9UWVBFKSB7XG4gICAgICAgIHR5cGVTdHJpbmcgPSBcIjxcIiArIChnZXRDb21wb25lbnROYW1lKHR5cGUudHlwZSkgfHwgJ1Vua25vd24nKSArIFwiIC8+XCI7XG4gICAgICAgIGluZm8gPSAnIERpZCB5b3UgYWNjaWRlbnRhbGx5IGV4cG9ydCBhIEpTWCBsaXRlcmFsIGluc3RlYWQgb2YgYSBjb21wb25lbnQ/JztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHR5cGVTdHJpbmcgPSB0eXBlb2YgdHlwZTtcbiAgICAgIH1cblxuICAgICAgZXJyb3IoJ1JlYWN0LmpzeDogdHlwZSBpcyBpbnZhbGlkIC0tIGV4cGVjdGVkIGEgc3RyaW5nIChmb3IgJyArICdidWlsdC1pbiBjb21wb25lbnRzKSBvciBhIGNsYXNzL2Z1bmN0aW9uIChmb3IgY29tcG9zaXRlICcgKyAnY29tcG9uZW50cykgYnV0IGdvdDogJXMuJXMnLCB0eXBlU3RyaW5nLCBpbmZvKTtcbiAgICB9XG5cbiAgICB2YXIgZWxlbWVudCA9IGpzeERFVih0eXBlLCBwcm9wcywga2V5LCBzb3VyY2UsIHNlbGYpOyAvLyBUaGUgcmVzdWx0IGNhbiBiZSBudWxsaXNoIGlmIGEgbW9jayBvciBhIGN1c3RvbSBmdW5jdGlvbiBpcyB1c2VkLlxuICAgIC8vIFRPRE86IERyb3AgdGhpcyB3aGVuIHRoZXNlIGFyZSBubyBsb25nZXIgYWxsb3dlZCBhcyB0aGUgdHlwZSBhcmd1bWVudC5cblxuICAgIGlmIChlbGVtZW50ID09IG51bGwpIHtcbiAgICAgIHJldHVybiBlbGVtZW50O1xuICAgIH0gLy8gU2tpcCBrZXkgd2FybmluZyBpZiB0aGUgdHlwZSBpc24ndCB2YWxpZCBzaW5jZSBvdXIga2V5IHZhbGlkYXRpb24gbG9naWNcbiAgICAvLyBkb2Vzbid0IGV4cGVjdCBhIG5vbi1zdHJpbmcvZnVuY3Rpb24gdHlwZSBhbmQgY2FuIHRocm93IGNvbmZ1c2luZyBlcnJvcnMuXG4gICAgLy8gV2UgZG9uJ3Qgd2FudCBleGNlcHRpb24gYmVoYXZpb3IgdG8gZGlmZmVyIGJldHdlZW4gZGV2IGFuZCBwcm9kLlxuICAgIC8vIChSZW5kZXJpbmcgd2lsbCB0aHJvdyB3aXRoIGEgaGVscGZ1bCBtZXNzYWdlIGFuZCBhcyBzb29uIGFzIHRoZSB0eXBlIGlzXG4gICAgLy8gZml4ZWQsIHRoZSBrZXkgd2FybmluZ3Mgd2lsbCBhcHBlYXIuKVxuXG5cbiAgICBpZiAodmFsaWRUeXBlKSB7XG4gICAgICB2YXIgY2hpbGRyZW4gPSBwcm9wcy5jaGlsZHJlbjtcblxuICAgICAgaWYgKGNoaWxkcmVuICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgaWYgKGlzU3RhdGljQ2hpbGRyZW4pIHtcbiAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZHJlbikpIHtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgdmFsaWRhdGVDaGlsZEtleXMoY2hpbGRyZW5baV0sIHR5cGUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoT2JqZWN0LmZyZWV6ZSkge1xuICAgICAgICAgICAgICBPYmplY3QuZnJlZXplKGNoaWxkcmVuKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZXJyb3IoJ1JlYWN0LmpzeDogU3RhdGljIGNoaWxkcmVuIHNob3VsZCBhbHdheXMgYmUgYW4gYXJyYXkuICcgKyAnWW91IGFyZSBsaWtlbHkgZXhwbGljaXRseSBjYWxsaW5nIFJlYWN0LmpzeHMgb3IgUmVhY3QuanN4REVWLiAnICsgJ1VzZSB0aGUgQmFiZWwgdHJhbnNmb3JtIGluc3RlYWQuJyk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhbGlkYXRlQ2hpbGRLZXlzKGNoaWxkcmVuLCB0eXBlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0eXBlID09PSBleHBvcnRzLkZyYWdtZW50KSB7XG4gICAgICB2YWxpZGF0ZUZyYWdtZW50UHJvcHMoZWxlbWVudCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhbGlkYXRlUHJvcFR5cGVzKGVsZW1lbnQpO1xuICAgIH1cblxuICAgIHJldHVybiBlbGVtZW50O1xuICB9XG59IC8vIFRoZXNlIHR3byBmdW5jdGlvbnMgZXhpc3QgdG8gc3RpbGwgZ2V0IGNoaWxkIHdhcm5pbmdzIGluIGRldlxuXG52YXIganN4REVWJDEgPSAganN4V2l0aFZhbGlkYXRpb24gO1xuXG5leHBvcnRzLmpzeERFViA9IGpzeERFViQxO1xuICB9KSgpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n");

/***/ }),

/***/ "./node_modules/react/cjs/react.development.js":
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/** @license React v17.0.1\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar _assign = __webpack_require__(/*! object-assign */ \"./node_modules/next/dist/build/polyfills/object-assign.js\");\n\n// TODO: this is special because it gets imported during build.\nvar ReactVersion = '17.0.1';\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar REACT_ELEMENT_TYPE = 0xeac7;\nvar REACT_PORTAL_TYPE = 0xeaca;\nexports.Fragment = 0xeacb;\nexports.StrictMode = 0xeacc;\nexports.Profiler = 0xead2;\nvar REACT_PROVIDER_TYPE = 0xeacd;\nvar REACT_CONTEXT_TYPE = 0xeace;\nvar REACT_FORWARD_REF_TYPE = 0xead0;\nexports.Suspense = 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = 0xead8;\nvar REACT_MEMO_TYPE = 0xead3;\nvar REACT_LAZY_TYPE = 0xead4;\nvar REACT_BLOCK_TYPE = 0xead9;\nvar REACT_SERVER_BLOCK_TYPE = 0xeada;\nvar REACT_FUNDAMENTAL_TYPE = 0xead5;\nvar REACT_SCOPE_TYPE = 0xead7;\nvar REACT_OPAQUE_ID_TYPE = 0xeae0;\nvar REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\nvar REACT_OFFSCREEN_TYPE = 0xeae2;\nvar REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  var symbolFor = Symbol.for;\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\n  exports.Fragment = symbolFor('react.fragment');\n  exports.StrictMode = symbolFor('react.strict_mode');\n  exports.Profiler = symbolFor('react.profiler');\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\n  exports.Suspense = symbolFor('react.suspense');\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\n  REACT_MEMO_TYPE = symbolFor('react.memo');\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\n  REACT_BLOCK_TYPE = symbolFor('react.block');\n  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');\n  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\n}\n\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\n/**\n * Keeps track of the current dispatcher.\n */\nvar ReactCurrentDispatcher = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\n/**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */\nvar ReactCurrentBatchConfig = {\n  transition: 0\n};\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nvar ReactDebugCurrentFrame = {};\nvar currentExtraStackFrame = null;\nfunction setExtraStackFrame(stack) {\n  {\n    currentExtraStackFrame = stack;\n  }\n}\n\n{\n  ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {\n    {\n      currentExtraStackFrame = stack;\n    }\n  }; // Stack implementation injected by the current renderer.\n\n\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var stack = ''; // Add an extra top frame while an element is being validated\n\n    if (currentExtraStackFrame) {\n      stack += currentExtraStackFrame;\n    } // Delegate to the injected renderer-specific implementation\n\n\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\n/**\n * Used by act() to track whether you're inside an act() scope.\n */\nvar IsSomeRendererActing = {\n  current: false\n};\n\nvar ReactSharedInternals = {\n  ReactCurrentDispatcher: ReactCurrentDispatcher,\n  ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n  ReactCurrentOwner: ReactCurrentOwner,\n  IsSomeRendererActing: IsSomeRendererActing,\n  // Used by renderers to avoid bundling object-assign twice in UMD bundles:\n  assign: _assign\n};\n\n{\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\n}\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    printWarning('warn', format, args);\n  }\n}\nfunction error(format) {\n  {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    printWarning('error', format, args);\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    }\n\n    var argsWithFormat = args.map(function (item) {\n      return '' + item;\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + \".\" + callerName;\n\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n\n    error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n/**\n * This is the abstract API for an update queue.\n */\n\n\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nvar emptyObject = {};\n\n{\n  Object.freeze(emptyObject);\n}\n/**\n * Base class helpers for the updating state of a component.\n */\n\n\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n  // renderer.\n\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\n\nComponent.prototype.setState = function (partialState, callback) {\n  if (!(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null)) {\n    {\n      throw Error( \"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\" );\n    }\n  }\n\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\n\n\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n\n\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n\n        return undefined;\n      }\n    });\n  };\n\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\n\nComponentDummy.prototype = Component.prototype;\n/**\n * Convenience component with default shallow equality check for sCU.\n */\n\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\n_assign(pureComponentPrototype, Component.prototype);\n\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n\n  {\n    Object.seal(refObject);\n  }\n\n  return refObject;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var functionName = innerType.displayName || innerType.name || '';\n  return outerType.displayName || (functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\n}\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nfunction getComponentName(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case exports.Fragment:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case exports.Profiler:\n      return 'Profiler';\n\n    case exports.StrictMode:\n      return 'StrictMode';\n\n    case exports.Suspense:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        return getComponentName(type.type);\n\n      case REACT_BLOCK_TYPE:\n        return getComponentName(type._render);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentName(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n      var componentName = getComponentName(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\n\nfunction createElement(type, config, children) {\n  var propName; // Reserved names are extracted\n\n  var props = {};\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n\n      {\n        warnIfStringRefCannotBeAutoConverted(config);\n      }\n    }\n\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n\n    props.children = childArray;\n  } // Resolve default props\n\n\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  {\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n  return newElement;\n}\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\n\nfunction cloneElement(element, config, children) {\n  if (!!(element === null || element === undefined)) {\n    {\n      throw Error( \"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\" );\n    }\n  }\n\n  var propName; // Original props are copied\n\n  var props = _assign({}, element.props); // Reserved names are extracted\n\n\n  var key = element.key;\n  var ref = element.ref; // Self is preserved since the owner is preserved.\n\n  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n\n  var source = element._source; // Owner will be preserved, unless ref is overridden\n\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    } // Remaining properties override existing props\n\n\n    var defaultProps;\n\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = key.replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n  return '$' + escapedString;\n}\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\n\nvar didWarnAboutMaps = false;\nvar userProvidedKeyEscapeRegex = /\\/+/g;\n\nfunction escapeUserProvidedKey(text) {\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\n}\n/**\n * Generate a key string that identifies a element within a set.\n *\n * @param {*} element A element that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\n\n\nfunction getElementKey(element, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof element === 'object' && element !== null && element.key != null) {\n    // Explicit key\n    return escape('' + element.key);\n  } // Implicit key determined by the index in the set\n\n\n  return index.toString(36);\n}\n\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n\n    }\n  }\n\n  if (invokeCallback) {\n    var _child = children;\n    var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows:\n\n    var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;\n\n    if (Array.isArray(mappedChild)) {\n      var escapedChildKey = '';\n\n      if (childKey != null) {\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\n      }\n\n      mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {\n        return c;\n      });\n    } else if (mappedChild != null) {\n      if (isValidElement(mappedChild)) {\n        mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as\n        // traverseAllChildren used to do for objects as children\n        escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n        mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\n        escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);\n      }\n\n      array.push(mappedChild);\n    }\n\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getElementKey(child, i);\n      subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n\n    if (typeof iteratorFn === 'function') {\n      var iterableChildren = children;\n\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === iterableChildren.entries) {\n          if (!didWarnAboutMaps) {\n            warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');\n          }\n\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(iterableChildren);\n      var step;\n      var ii = 0;\n\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getElementKey(child, ii++);\n        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n      }\n    } else if (type === 'object') {\n      var childrenString = '' + children;\n\n      {\n        {\n          throw Error( \"Objects are not valid as a React child (found: \" + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + \"). If you meant to render a collection of children, use an array instead.\" );\n        }\n      }\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var result = [];\n  var count = 0;\n  mapIntoArray(children, result, '', '', function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\n\n\nfunction countChildren(children) {\n  var n = 0;\n  mapChildren(children, function () {\n    n++; // Don't return anything\n  });\n  return n;\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  mapChildren(children, function () {\n    forEachFunc.apply(this, arguments); // Don't return anything.\n  }, forEachContext);\n}\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\n\n\nfunction toArray(children) {\n  return mapChildren(children, function (child) {\n    return child;\n  }) || [];\n}\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\n\n\nfunction onlyChild(children) {\n  if (!isValidElement(children)) {\n    {\n      throw Error( \"React.Children.only expected to receive a single React element child.\" );\n    }\n  }\n\n  return children;\n}\n\nfunction createContext(defaultValue, calculateChangedBits) {\n  if (calculateChangedBits === undefined) {\n    calculateChangedBits = null;\n  } else {\n    {\n      if (calculateChangedBits !== null && typeof calculateChangedBits !== 'function') {\n        error('createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits);\n      }\n    }\n  }\n\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _calculateChangedBits: calculateChangedBits,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: null,\n    Consumer: null\n  };\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context\n  };\n  var hasWarnedAboutUsingNestedContextConsumers = false;\n  var hasWarnedAboutUsingConsumerProvider = false;\n  var hasWarnedAboutDisplayNameOnConsumer = false;\n\n  {\n    // A separate object, but proxies back to the original context object for\n    // backwards compatibility. It has a different $$typeof, so we can properly\n    // warn for the incorrect usage of Context as a Consumer.\n    var Consumer = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _context: context,\n      _calculateChangedBits: context._calculateChangedBits\n    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n\n    Object.defineProperties(Consumer, {\n      Provider: {\n        get: function () {\n          if (!hasWarnedAboutUsingConsumerProvider) {\n            hasWarnedAboutUsingConsumerProvider = true;\n\n            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');\n          }\n\n          return context.Provider;\n        },\n        set: function (_Provider) {\n          context.Provider = _Provider;\n        }\n      },\n      _currentValue: {\n        get: function () {\n          return context._currentValue;\n        },\n        set: function (_currentValue) {\n          context._currentValue = _currentValue;\n        }\n      },\n      _currentValue2: {\n        get: function () {\n          return context._currentValue2;\n        },\n        set: function (_currentValue2) {\n          context._currentValue2 = _currentValue2;\n        }\n      },\n      _threadCount: {\n        get: function () {\n          return context._threadCount;\n        },\n        set: function (_threadCount) {\n          context._threadCount = _threadCount;\n        }\n      },\n      Consumer: {\n        get: function () {\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\n            hasWarnedAboutUsingNestedContextConsumers = true;\n\n            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n          }\n\n          return context.Consumer;\n        }\n      },\n      displayName: {\n        get: function () {\n          return context.displayName;\n        },\n        set: function (displayName) {\n          if (!hasWarnedAboutDisplayNameOnConsumer) {\n            warn('Setting `displayName` on Context.Consumer has no effect. ' + \"You should set it directly on the context with Context.displayName = '%s'.\", displayName);\n\n            hasWarnedAboutDisplayNameOnConsumer = true;\n          }\n        }\n      }\n    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n\n    context.Consumer = Consumer;\n  }\n\n  {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n\nvar Uninitialized = -1;\nvar Pending = 0;\nvar Resolved = 1;\nvar Rejected = 2;\n\nfunction lazyInitializer(payload) {\n  if (payload._status === Uninitialized) {\n    var ctor = payload._result;\n    var thenable = ctor(); // Transition to the next state.\n\n    var pending = payload;\n    pending._status = Pending;\n    pending._result = thenable;\n    thenable.then(function (moduleObject) {\n      if (payload._status === Pending) {\n        var defaultExport = moduleObject.default;\n\n        {\n          if (defaultExport === undefined) {\n            error('lazy: Expected the result of a dynamic import() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n            'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\", moduleObject);\n          }\n        } // Transition to the next state.\n\n\n        var resolved = payload;\n        resolved._status = Resolved;\n        resolved._result = defaultExport;\n      }\n    }, function (error) {\n      if (payload._status === Pending) {\n        // Transition to the next state.\n        var rejected = payload;\n        rejected._status = Rejected;\n        rejected._result = error;\n      }\n    });\n  }\n\n  if (payload._status === Resolved) {\n    return payload._result;\n  } else {\n    throw payload._result;\n  }\n}\n\nfunction lazy(ctor) {\n  var payload = {\n    // We use these fields to store the result.\n    _status: -1,\n    _result: ctor\n  };\n  var lazyType = {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: payload,\n    _init: lazyInitializer\n  };\n\n  {\n    // In production, this would just set it on the object.\n    var defaultProps;\n    var propTypes; // $FlowFixMe\n\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get: function () {\n          return defaultProps;\n        },\n        set: function (newDefaultProps) {\n          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          defaultProps = newDefaultProps; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true\n          });\n        }\n      },\n      propTypes: {\n        configurable: true,\n        get: function () {\n          return propTypes;\n        },\n        set: function (newPropTypes) {\n          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          propTypes = newPropTypes; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true\n          });\n        }\n      }\n    });\n  }\n\n  return lazyType;\n}\n\nfunction forwardRef(render) {\n  {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n    } else if (typeof render !== 'function') {\n      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');\n      }\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name;\n\n        if (render.displayName == null) {\n          render.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\n// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === exports.Fragment || type === exports.Profiler || type === REACT_DEBUG_TRACING_MODE_TYPE || type === exports.StrictMode || type === exports.Suspense || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction memo(type, compare) {\n  {\n    if (!isValidElementType(type)) {\n      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: compare === undefined ? null : compare\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name;\n\n        if (type.displayName == null) {\n          type.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nfunction resolveDispatcher() {\n  var dispatcher = ReactCurrentDispatcher.current;\n\n  if (!(dispatcher !== null)) {\n    {\n      throw Error( \"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.\" );\n    }\n  }\n\n  return dispatcher;\n}\n\nfunction useContext(Context, unstable_observedBits) {\n  var dispatcher = resolveDispatcher();\n\n  {\n    if (unstable_observedBits !== undefined) {\n      error('useContext() second argument is reserved for future ' + 'use in React. Passing it is not supported. ' + 'You passed: %s.%s', unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? '\\n\\nDid you call array.map(useContext)? ' + 'Calling Hooks inside a loop is not supported. ' + 'Learn more at https://reactjs.org/link/rules-of-hooks' : '');\n    } // TODO: add a more generic warning for invalid values.\n\n\n    if (Context._context !== undefined) {\n      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n\n      if (realContext.Consumer === Context) {\n        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');\n      } else if (realContext.Provider === Context) {\n        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');\n      }\n    }\n  }\n\n  return dispatcher.useContext(Context, unstable_observedBits);\n}\nfunction useState(initialState) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\nfunction useReducer(reducer, initialArg, init) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\nfunction useRef(initialValue) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\nfunction useEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\nfunction useLayoutEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\nfunction useCallback(callback, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\nfunction useMemo(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\nfunction useImperativeHandle(ref, create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\nfunction useDebugValue(value, formatterFn) {\n  {\n    var dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: _assign({}, props, {\n          value: prevLog\n        }),\n        info: _assign({}, props, {\n          value: prevInfo\n        }),\n        warn: _assign({}, props, {\n          value: prevWarn\n        }),\n        error: _assign({}, props, {\n          value: prevError\n        }),\n        group: _assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: _assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: _assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher$1.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher$1.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case exports.Suspense:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_BLOCK_TYPE:\n        return describeFunctionComponentFrame(type._render);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      setExtraStackFrame(stack);\n    } else {\n      setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentName(ReactCurrentOwner.current.type);\n\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  if (source !== undefined) {\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendumForProps(elementProps) {\n  if (elementProps !== null && elementProps !== undefined) {\n    return getSourceInfoErrorAddendum(elementProps.__source);\n  }\n\n  return '';\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n    if (parentName) {\n      info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n    }\n  }\n\n  return info;\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n\n  element._store.validated = true;\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n\n  var childOwner = '';\n\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = \" It was passed a child from \" + getComponentName(element._owner.type) + \".\";\n  }\n\n  {\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentName(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentName(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\nfunction createElementWithValidation(type, props, children) {\n  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n\n  if (!validType) {\n    var info = '';\n\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    var typeString;\n\n    if (type === null) {\n      typeString = 'null';\n    } else if (Array.isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = \"<\" + (getComponentName(type.type) || 'Unknown') + \" />\";\n      info = ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    {\n      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n  }\n\n  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n\n  if (element == null) {\n    return element;\n  } // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n\n\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === exports.Fragment) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\nvar didWarnAboutDeprecatedCreateFactory = false;\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n\n  {\n    if (!didWarnAboutDeprecatedCreateFactory) {\n      didWarnAboutDeprecatedCreateFactory = true;\n\n      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');\n    } // Legacy hook: remove it\n\n\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n\n  validatePropTypes(newElement);\n  return newElement;\n}\n\n{\n\n  try {\n    var frozenObject = Object.freeze({});\n    /* eslint-disable no-new */\n\n    new Map([[frozenObject, null]]);\n    new Set([frozenObject]);\n    /* eslint-enable no-new */\n  } catch (e) {\n  }\n}\n\nvar createElement$1 =  createElementWithValidation ;\nvar cloneElement$1 =  cloneElementWithValidation ;\nvar createFactory =  createFactoryWithValidation ;\nvar Children = {\n  map: mapChildren,\n  forEach: forEachChildren,\n  count: countChildren,\n  toArray: toArray,\n  only: onlyChild\n};\n\nexports.Children = Children;\nexports.Component = Component;\nexports.PureComponent = PureComponent;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\nexports.cloneElement = cloneElement$1;\nexports.createContext = createContext;\nexports.createElement = createElement$1;\nexports.createFactory = createFactory;\nexports.createRef = createRef;\nexports.forwardRef = forwardRef;\nexports.isValidElement = isValidElement;\nexports.lazy = lazy;\nexports.memo = memo;\nexports.useCallback = useCallback;\nexports.useContext = useContext;\nexports.useDebugValue = useDebugValue;\nexports.useEffect = useEffect;\nexports.useImperativeHandle = useImperativeHandle;\nexports.useLayoutEffect = useLayoutEffect;\nexports.useMemo = useMemo;\nexports.useReducer = useReducer;\nexports.useRef = useRef;\nexports.useState = useState;\nexports.version = ReactVersion;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react.development.js\n");

/***/ }),

/***/ "./node_modules/react/index.js":
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ \"./node_modules/react/cjs/react.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzP2FiNWIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDO0FBQ0QsbUJBQW1CLG1CQUFPLENBQUMsaUZBQTRCO0FBQ3ZEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react/index.js\n");

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz85MjBlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQztBQUNELG1CQUFtQixtQkFBTyxDQUFDLGlIQUE0QztBQUN2RSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n");

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n   true ? module.exports : undefined\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/regenerator-runtime/runtime.js\n");

/***/ }),

/***/ "./node_modules/scheduler/cjs/scheduler.development.js":
/*!*************************************************************!*\
  !*** ./node_modules/scheduler/cjs/scheduler.development.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/** @license React v0.20.1\n * scheduler.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar enableSchedulerDebugging = false;\nvar enableProfiling = true;\n\nvar requestHostCallback;\nvar requestHostTimeout;\nvar cancelHostTimeout;\nvar requestPaint;\nvar hasPerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\n\nif (hasPerformanceNow) {\n  var localPerformance = performance;\n\n  exports.unstable_now = function () {\n    return localPerformance.now();\n  };\n} else {\n  var localDate = Date;\n  var initialTime = localDate.now();\n\n  exports.unstable_now = function () {\n    return localDate.now() - initialTime;\n  };\n}\n\nif ( // If Scheduler runs in a non-DOM environment, it falls back to a naive\n// implementation using setTimeout.\ntypeof window === 'undefined' || // Check if MessageChannel is supported, too.\ntypeof MessageChannel !== 'function') {\n  // If this accidentally gets imported in a non-browser environment, e.g. JavaScriptCore,\n  // fallback to a naive implementation.\n  var _callback = null;\n  var _timeoutID = null;\n\n  var _flushCallback = function () {\n    if (_callback !== null) {\n      try {\n        var currentTime = exports.unstable_now();\n        var hasRemainingTime = true;\n\n        _callback(hasRemainingTime, currentTime);\n\n        _callback = null;\n      } catch (e) {\n        setTimeout(_flushCallback, 0);\n        throw e;\n      }\n    }\n  };\n\n  requestHostCallback = function (cb) {\n    if (_callback !== null) {\n      // Protect against re-entrancy.\n      setTimeout(requestHostCallback, 0, cb);\n    } else {\n      _callback = cb;\n      setTimeout(_flushCallback, 0);\n    }\n  };\n\n  requestHostTimeout = function (cb, ms) {\n    _timeoutID = setTimeout(cb, ms);\n  };\n\n  cancelHostTimeout = function () {\n    clearTimeout(_timeoutID);\n  };\n\n  exports.unstable_shouldYield = function () {\n    return false;\n  };\n\n  requestPaint = exports.unstable_forceFrameRate = function () {};\n} else {\n  // Capture local references to native APIs, in case a polyfill overrides them.\n  var _setTimeout = window.setTimeout;\n  var _clearTimeout = window.clearTimeout;\n\n  if (typeof console !== 'undefined') {\n    // TODO: Scheduler no longer requires these methods to be polyfilled. But\n    // maybe we want to continue warning if they don't exist, to preserve the\n    // option to rely on it in the future?\n    var requestAnimationFrame = window.requestAnimationFrame;\n    var cancelAnimationFrame = window.cancelAnimationFrame;\n\n    if (typeof requestAnimationFrame !== 'function') {\n      // Using console['error'] to evade Babel and ESLint\n      console['error'](\"This browser doesn't support requestAnimationFrame. \" + 'Make sure that you load a ' + 'polyfill in older browsers. https://reactjs.org/link/react-polyfills');\n    }\n\n    if (typeof cancelAnimationFrame !== 'function') {\n      // Using console['error'] to evade Babel and ESLint\n      console['error'](\"This browser doesn't support cancelAnimationFrame. \" + 'Make sure that you load a ' + 'polyfill in older browsers. https://reactjs.org/link/react-polyfills');\n    }\n  }\n\n  var isMessageLoopRunning = false;\n  var scheduledHostCallback = null;\n  var taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main\n  // thread, like user events. By default, it yields multiple times per frame.\n  // It does not attempt to align with frame boundaries, since most tasks don't\n  // need to be frame aligned; for those that do, use requestAnimationFrame.\n\n  var yieldInterval = 5;\n  var deadline = 0; // TODO: Make this configurable\n\n  {\n    // `isInputPending` is not available. Since we have no way of knowing if\n    // there's pending input, always yield at the end of the frame.\n    exports.unstable_shouldYield = function () {\n      return exports.unstable_now() >= deadline;\n    }; // Since we yield every frame regardless, `requestPaint` has no effect.\n\n\n    requestPaint = function () {};\n  }\n\n  exports.unstable_forceFrameRate = function (fps) {\n    if (fps < 0 || fps > 125) {\n      // Using console['error'] to evade Babel and ESLint\n      console['error']('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing frame rates higher than 125 fps is not supported');\n      return;\n    }\n\n    if (fps > 0) {\n      yieldInterval = Math.floor(1000 / fps);\n    } else {\n      // reset the framerate\n      yieldInterval = 5;\n    }\n  };\n\n  var performWorkUntilDeadline = function () {\n    if (scheduledHostCallback !== null) {\n      var currentTime = exports.unstable_now(); // Yield after `yieldInterval` ms, regardless of where we are in the vsync\n      // cycle. This means there's always time remaining at the beginning of\n      // the message event.\n\n      deadline = currentTime + yieldInterval;\n      var hasTimeRemaining = true;\n\n      try {\n        var hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);\n\n        if (!hasMoreWork) {\n          isMessageLoopRunning = false;\n          scheduledHostCallback = null;\n        } else {\n          // If there's more work, schedule the next message event at the end\n          // of the preceding one.\n          port.postMessage(null);\n        }\n      } catch (error) {\n        // If a scheduler task throws, exit the current browser task so the\n        // error can be observed.\n        port.postMessage(null);\n        throw error;\n      }\n    } else {\n      isMessageLoopRunning = false;\n    } // Yielding to the browser will give it a chance to paint, so we can\n  };\n\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = performWorkUntilDeadline;\n\n  requestHostCallback = function (callback) {\n    scheduledHostCallback = callback;\n\n    if (!isMessageLoopRunning) {\n      isMessageLoopRunning = true;\n      port.postMessage(null);\n    }\n  };\n\n  requestHostTimeout = function (callback, ms) {\n    taskTimeoutID = _setTimeout(function () {\n      callback(exports.unstable_now());\n    }, ms);\n  };\n\n  cancelHostTimeout = function () {\n    _clearTimeout(taskTimeoutID);\n\n    taskTimeoutID = -1;\n  };\n}\n\nfunction push(heap, node) {\n  var index = heap.length;\n  heap.push(node);\n  siftUp(heap, node, index);\n}\nfunction peek(heap) {\n  var first = heap[0];\n  return first === undefined ? null : first;\n}\nfunction pop(heap) {\n  var first = heap[0];\n\n  if (first !== undefined) {\n    var last = heap.pop();\n\n    if (last !== first) {\n      heap[0] = last;\n      siftDown(heap, last, 0);\n    }\n\n    return first;\n  } else {\n    return null;\n  }\n}\n\nfunction siftUp(heap, node, i) {\n  var index = i;\n\n  while (true) {\n    var parentIndex = index - 1 >>> 1;\n    var parent = heap[parentIndex];\n\n    if (parent !== undefined && compare(parent, node) > 0) {\n      // The parent is larger. Swap positions.\n      heap[parentIndex] = node;\n      heap[index] = parent;\n      index = parentIndex;\n    } else {\n      // The parent is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction siftDown(heap, node, i) {\n  var index = i;\n  var length = heap.length;\n\n  while (index < length) {\n    var leftIndex = (index + 1) * 2 - 1;\n    var left = heap[leftIndex];\n    var rightIndex = leftIndex + 1;\n    var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.\n\n    if (left !== undefined && compare(left, node) < 0) {\n      if (right !== undefined && compare(right, left) < 0) {\n        heap[index] = right;\n        heap[rightIndex] = node;\n        index = rightIndex;\n      } else {\n        heap[index] = left;\n        heap[leftIndex] = node;\n        index = leftIndex;\n      }\n    } else if (right !== undefined && compare(right, node) < 0) {\n      heap[index] = right;\n      heap[rightIndex] = node;\n      index = rightIndex;\n    } else {\n      // Neither child is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction compare(a, b) {\n  // Compare sort index first, then task id.\n  var diff = a.sortIndex - b.sortIndex;\n  return diff !== 0 ? diff : a.id - b.id;\n}\n\n// TODO: Use symbols?\nvar NoPriority = 0;\nvar ImmediatePriority = 1;\nvar UserBlockingPriority = 2;\nvar NormalPriority = 3;\nvar LowPriority = 4;\nvar IdlePriority = 5;\n\nvar runIdCounter = 0;\nvar mainThreadIdCounter = 0;\nvar profilingStateSize = 4;\nvar sharedProfilingBuffer =  // $FlowFixMe Flow doesn't know about SharedArrayBuffer\ntypeof SharedArrayBuffer === 'function' ? new SharedArrayBuffer(profilingStateSize * Int32Array.BYTES_PER_ELEMENT) : // $FlowFixMe Flow doesn't know about ArrayBuffer\ntypeof ArrayBuffer === 'function' ? new ArrayBuffer(profilingStateSize * Int32Array.BYTES_PER_ELEMENT) : null // Don't crash the init path on IE9\n;\nvar profilingState =  sharedProfilingBuffer !== null ? new Int32Array(sharedProfilingBuffer) : []; // We can't read this but it helps save bytes for null checks\n\nvar PRIORITY = 0;\nvar CURRENT_TASK_ID = 1;\nvar CURRENT_RUN_ID = 2;\nvar QUEUE_SIZE = 3;\n\n{\n  profilingState[PRIORITY] = NoPriority; // This is maintained with a counter, because the size of the priority queue\n  // array might include canceled tasks.\n\n  profilingState[QUEUE_SIZE] = 0;\n  profilingState[CURRENT_TASK_ID] = 0;\n} // Bytes per element is 4\n\n\nvar INITIAL_EVENT_LOG_SIZE = 131072;\nvar MAX_EVENT_LOG_SIZE = 524288; // Equivalent to 2 megabytes\n\nvar eventLogSize = 0;\nvar eventLogBuffer = null;\nvar eventLog = null;\nvar eventLogIndex = 0;\nvar TaskStartEvent = 1;\nvar TaskCompleteEvent = 2;\nvar TaskErrorEvent = 3;\nvar TaskCancelEvent = 4;\nvar TaskRunEvent = 5;\nvar TaskYieldEvent = 6;\nvar SchedulerSuspendEvent = 7;\nvar SchedulerResumeEvent = 8;\n\nfunction logEvent(entries) {\n  if (eventLog !== null) {\n    var offset = eventLogIndex;\n    eventLogIndex += entries.length;\n\n    if (eventLogIndex + 1 > eventLogSize) {\n      eventLogSize *= 2;\n\n      if (eventLogSize > MAX_EVENT_LOG_SIZE) {\n        // Using console['error'] to evade Babel and ESLint\n        console['error'](\"Scheduler Profiling: Event log exceeded maximum size. Don't \" + 'forget to call `stopLoggingProfilingEvents()`.');\n        stopLoggingProfilingEvents();\n        return;\n      }\n\n      var newEventLog = new Int32Array(eventLogSize * 4);\n      newEventLog.set(eventLog);\n      eventLogBuffer = newEventLog.buffer;\n      eventLog = newEventLog;\n    }\n\n    eventLog.set(entries, offset);\n  }\n}\n\nfunction startLoggingProfilingEvents() {\n  eventLogSize = INITIAL_EVENT_LOG_SIZE;\n  eventLogBuffer = new ArrayBuffer(eventLogSize * 4);\n  eventLog = new Int32Array(eventLogBuffer);\n  eventLogIndex = 0;\n}\nfunction stopLoggingProfilingEvents() {\n  var buffer = eventLogBuffer;\n  eventLogSize = 0;\n  eventLogBuffer = null;\n  eventLog = null;\n  eventLogIndex = 0;\n  return buffer;\n}\nfunction markTaskStart(task, ms) {\n  {\n    profilingState[QUEUE_SIZE]++;\n\n    if (eventLog !== null) {\n      // performance.now returns a float, representing milliseconds. When the\n      // event is logged, it's coerced to an int. Convert to microseconds to\n      // maintain extra degrees of precision.\n      logEvent([TaskStartEvent, ms * 1000, task.id, task.priorityLevel]);\n    }\n  }\n}\nfunction markTaskCompleted(task, ms) {\n  {\n    profilingState[PRIORITY] = NoPriority;\n    profilingState[CURRENT_TASK_ID] = 0;\n    profilingState[QUEUE_SIZE]--;\n\n    if (eventLog !== null) {\n      logEvent([TaskCompleteEvent, ms * 1000, task.id]);\n    }\n  }\n}\nfunction markTaskCanceled(task, ms) {\n  {\n    profilingState[QUEUE_SIZE]--;\n\n    if (eventLog !== null) {\n      logEvent([TaskCancelEvent, ms * 1000, task.id]);\n    }\n  }\n}\nfunction markTaskErrored(task, ms) {\n  {\n    profilingState[PRIORITY] = NoPriority;\n    profilingState[CURRENT_TASK_ID] = 0;\n    profilingState[QUEUE_SIZE]--;\n\n    if (eventLog !== null) {\n      logEvent([TaskErrorEvent, ms * 1000, task.id]);\n    }\n  }\n}\nfunction markTaskRun(task, ms) {\n  {\n    runIdCounter++;\n    profilingState[PRIORITY] = task.priorityLevel;\n    profilingState[CURRENT_TASK_ID] = task.id;\n    profilingState[CURRENT_RUN_ID] = runIdCounter;\n\n    if (eventLog !== null) {\n      logEvent([TaskRunEvent, ms * 1000, task.id, runIdCounter]);\n    }\n  }\n}\nfunction markTaskYield(task, ms) {\n  {\n    profilingState[PRIORITY] = NoPriority;\n    profilingState[CURRENT_TASK_ID] = 0;\n    profilingState[CURRENT_RUN_ID] = 0;\n\n    if (eventLog !== null) {\n      logEvent([TaskYieldEvent, ms * 1000, task.id, runIdCounter]);\n    }\n  }\n}\nfunction markSchedulerSuspended(ms) {\n  {\n    mainThreadIdCounter++;\n\n    if (eventLog !== null) {\n      logEvent([SchedulerSuspendEvent, ms * 1000, mainThreadIdCounter]);\n    }\n  }\n}\nfunction markSchedulerUnsuspended(ms) {\n  {\n    if (eventLog !== null) {\n      logEvent([SchedulerResumeEvent, ms * 1000, mainThreadIdCounter]);\n    }\n  }\n}\n\n/* eslint-disable no-var */\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\n\nvar maxSigned31BitInt = 1073741823; // Times out immediately\n\nvar IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out\n\nvar USER_BLOCKING_PRIORITY_TIMEOUT = 250;\nvar NORMAL_PRIORITY_TIMEOUT = 5000;\nvar LOW_PRIORITY_TIMEOUT = 10000; // Never times out\n\nvar IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap\n\nvar taskQueue = [];\nvar timerQueue = []; // Incrementing id counter. Used to maintain insertion order.\n\nvar taskIdCounter = 1; // Pausing the scheduler is useful for debugging.\nvar currentTask = null;\nvar currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrancy.\n\nvar isPerformingWork = false;\nvar isHostCallbackScheduled = false;\nvar isHostTimeoutScheduled = false;\n\nfunction advanceTimers(currentTime) {\n  // Check for tasks that are no longer delayed and add them to the queue.\n  var timer = peek(timerQueue);\n\n  while (timer !== null) {\n    if (timer.callback === null) {\n      // Timer was cancelled.\n      pop(timerQueue);\n    } else if (timer.startTime <= currentTime) {\n      // Timer fired. Transfer to the task queue.\n      pop(timerQueue);\n      timer.sortIndex = timer.expirationTime;\n      push(taskQueue, timer);\n\n      {\n        markTaskStart(timer, currentTime);\n        timer.isQueued = true;\n      }\n    } else {\n      // Remaining timers are pending.\n      return;\n    }\n\n    timer = peek(timerQueue);\n  }\n}\n\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = false;\n  advanceTimers(currentTime);\n\n  if (!isHostCallbackScheduled) {\n    if (peek(taskQueue) !== null) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    } else {\n      var firstTimer = peek(timerQueue);\n\n      if (firstTimer !== null) {\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n      }\n    }\n  }\n}\n\nfunction flushWork(hasTimeRemaining, initialTime) {\n  {\n    markSchedulerUnsuspended(initialTime);\n  } // We'll need a host callback the next time work is scheduled.\n\n\n  isHostCallbackScheduled = false;\n\n  if (isHostTimeoutScheduled) {\n    // We scheduled a timeout but it's no longer needed. Cancel it.\n    isHostTimeoutScheduled = false;\n    cancelHostTimeout();\n  }\n\n  isPerformingWork = true;\n  var previousPriorityLevel = currentPriorityLevel;\n\n  try {\n    if (enableProfiling) {\n      try {\n        return workLoop(hasTimeRemaining, initialTime);\n      } catch (error) {\n        if (currentTask !== null) {\n          var currentTime = exports.unstable_now();\n          markTaskErrored(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n\n        throw error;\n      }\n    } else {\n      // No catch in prod code path.\n      return workLoop(hasTimeRemaining, initialTime);\n    }\n  } finally {\n    currentTask = null;\n    currentPriorityLevel = previousPriorityLevel;\n    isPerformingWork = false;\n\n    {\n      var _currentTime = exports.unstable_now();\n\n      markSchedulerSuspended(_currentTime);\n    }\n  }\n}\n\nfunction workLoop(hasTimeRemaining, initialTime) {\n  var currentTime = initialTime;\n  advanceTimers(currentTime);\n  currentTask = peek(taskQueue);\n\n  while (currentTask !== null && !(enableSchedulerDebugging )) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || exports.unstable_shouldYield())) {\n      // This currentTask hasn't expired, and we've reached the deadline.\n      break;\n    }\n\n    var callback = currentTask.callback;\n\n    if (typeof callback === 'function') {\n      currentTask.callback = null;\n      currentPriorityLevel = currentTask.priorityLevel;\n      var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      markTaskRun(currentTask, currentTime);\n      var continuationCallback = callback(didUserCallbackTimeout);\n      currentTime = exports.unstable_now();\n\n      if (typeof continuationCallback === 'function') {\n        currentTask.callback = continuationCallback;\n        markTaskYield(currentTask, currentTime);\n      } else {\n        {\n          markTaskCompleted(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n\n        if (currentTask === peek(taskQueue)) {\n          pop(taskQueue);\n        }\n      }\n\n      advanceTimers(currentTime);\n    } else {\n      pop(taskQueue);\n    }\n\n    currentTask = peek(taskQueue);\n  } // Return whether there's additional work\n\n\n  if (currentTask !== null) {\n    return true;\n  } else {\n    var firstTimer = peek(timerQueue);\n\n    if (firstTimer !== null) {\n      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n\n    return false;\n  }\n}\n\nfunction unstable_runWithPriority(priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n    case LowPriority:\n    case IdlePriority:\n      break;\n\n    default:\n      priorityLevel = NormalPriority;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_next(eventHandler) {\n  var priorityLevel;\n\n  switch (currentPriorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n      // Shift down to normal priority\n      priorityLevel = NormalPriority;\n      break;\n\n    default:\n      // Anything lower than normal priority should remain at the current level.\n      priorityLevel = currentPriorityLevel;\n      break;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_wrapCallback(callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function () {\n    // This is a fork of runWithPriority, inlined for performance.\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n}\n\nfunction unstable_scheduleCallback(priorityLevel, callback, options) {\n  var currentTime = exports.unstable_now();\n  var startTime;\n\n  if (typeof options === 'object' && options !== null) {\n    var delay = options.delay;\n\n    if (typeof delay === 'number' && delay > 0) {\n      startTime = currentTime + delay;\n    } else {\n      startTime = currentTime;\n    }\n  } else {\n    startTime = currentTime;\n  }\n\n  var timeout;\n\n  switch (priorityLevel) {\n    case ImmediatePriority:\n      timeout = IMMEDIATE_PRIORITY_TIMEOUT;\n      break;\n\n    case UserBlockingPriority:\n      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;\n      break;\n\n    case IdlePriority:\n      timeout = IDLE_PRIORITY_TIMEOUT;\n      break;\n\n    case LowPriority:\n      timeout = LOW_PRIORITY_TIMEOUT;\n      break;\n\n    case NormalPriority:\n    default:\n      timeout = NORMAL_PRIORITY_TIMEOUT;\n      break;\n  }\n\n  var expirationTime = startTime + timeout;\n  var newTask = {\n    id: taskIdCounter++,\n    callback: callback,\n    priorityLevel: priorityLevel,\n    startTime: startTime,\n    expirationTime: expirationTime,\n    sortIndex: -1\n  };\n\n  {\n    newTask.isQueued = false;\n  }\n\n  if (startTime > currentTime) {\n    // This is a delayed task.\n    newTask.sortIndex = startTime;\n    push(timerQueue, newTask);\n\n    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\n      // All tasks are delayed, and this is the task with the earliest delay.\n      if (isHostTimeoutScheduled) {\n        // Cancel an existing timeout.\n        cancelHostTimeout();\n      } else {\n        isHostTimeoutScheduled = true;\n      } // Schedule a timeout.\n\n\n      requestHostTimeout(handleTimeout, startTime - currentTime);\n    }\n  } else {\n    newTask.sortIndex = expirationTime;\n    push(taskQueue, newTask);\n\n    {\n      markTaskStart(newTask, currentTime);\n      newTask.isQueued = true;\n    } // Schedule a host callback, if needed. If we're already performing work,\n    // wait until the next time we yield.\n\n\n    if (!isHostCallbackScheduled && !isPerformingWork) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    }\n  }\n\n  return newTask;\n}\n\nfunction unstable_pauseExecution() {\n}\n\nfunction unstable_continueExecution() {\n\n  if (!isHostCallbackScheduled && !isPerformingWork) {\n    isHostCallbackScheduled = true;\n    requestHostCallback(flushWork);\n  }\n}\n\nfunction unstable_getFirstCallbackNode() {\n  return peek(taskQueue);\n}\n\nfunction unstable_cancelCallback(task) {\n  {\n    if (task.isQueued) {\n      var currentTime = exports.unstable_now();\n      markTaskCanceled(task, currentTime);\n      task.isQueued = false;\n    }\n  } // Null out the callback to indicate the task has been canceled. (Can't\n  // remove from the queue because you can't remove arbitrary nodes from an\n  // array based heap, only the first one.)\n\n\n  task.callback = null;\n}\n\nfunction unstable_getCurrentPriorityLevel() {\n  return currentPriorityLevel;\n}\n\nvar unstable_requestPaint = requestPaint;\nvar unstable_Profiling =  {\n  startLoggingProfilingEvents: startLoggingProfilingEvents,\n  stopLoggingProfilingEvents: stopLoggingProfilingEvents,\n  sharedProfilingBuffer: sharedProfilingBuffer\n} ;\n\nexports.unstable_IdlePriority = IdlePriority;\nexports.unstable_ImmediatePriority = ImmediatePriority;\nexports.unstable_LowPriority = LowPriority;\nexports.unstable_NormalPriority = NormalPriority;\nexports.unstable_Profiling = unstable_Profiling;\nexports.unstable_UserBlockingPriority = UserBlockingPriority;\nexports.unstable_cancelCallback = unstable_cancelCallback;\nexports.unstable_continueExecution = unstable_continueExecution;\nexports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;\nexports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;\nexports.unstable_next = unstable_next;\nexports.unstable_pauseExecution = unstable_pauseExecution;\nexports.unstable_requestPaint = unstable_requestPaint;\nexports.unstable_runWithPriority = unstable_runWithPriority;\nexports.unstable_scheduleCallback = unstable_scheduleCallback;\nexports.unstable_wrapCallback = unstable_wrapCallback;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/scheduler/cjs/scheduler.development.js\n");

/***/ }),

/***/ "./node_modules/scheduler/index.js":
/*!*****************************************!*\
  !*** ./node_modules/scheduler/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/scheduler.development.js */ \"./node_modules/scheduler/cjs/scheduler.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcz80MDI5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQztBQUNELG1CQUFtQixtQkFBTyxDQUFDLDZGQUFnQztBQUMzRCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/scheduler/index.js\n");

/***/ }),

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __createBinding, __exportStar, __values, __read, __spread, __spreadArrays, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault, __classPrivateFieldGet, __classPrivateFieldSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__extends\", function() { return __extends; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__assign\", function() { return __assign; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__rest\", function() { return __rest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__decorate\", function() { return __decorate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__param\", function() { return __param; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__metadata\", function() { return __metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__awaiter\", function() { return __awaiter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__generator\", function() { return __generator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__createBinding\", function() { return __createBinding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__exportStar\", function() { return __exportStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__values\", function() { return __values; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__read\", function() { return __read; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spread\", function() { return __spread; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spreadArrays\", function() { return __spreadArrays; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__await\", function() { return __await; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncGenerator\", function() { return __asyncGenerator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncDelegator\", function() { return __asyncDelegator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncValues\", function() { return __asyncValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__makeTemplateObject\", function() { return __makeTemplateObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importStar\", function() { return __importStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importDefault\", function() { return __importDefault; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__classPrivateFieldGet\", function() { return __classPrivateFieldGet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__classPrivateFieldSet\", function() { return __classPrivateFieldSet; });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RzbGliL3RzbGliLmVzNi5qcz85YWI0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFVBQVUsZ0JBQWdCLHNDQUFzQyxpQkFBaUIsRUFBRTtBQUNuRix5QkFBeUIsdURBQXVEO0FBQ2hGO0FBQ0E7O0FBRU87QUFDUDtBQUNBLG1CQUFtQixzQkFBc0I7QUFDekM7QUFDQTs7QUFFTztBQUNQO0FBQ0EsZ0RBQWdELE9BQU87QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCxjQUFjO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0EsNENBQTRDLFFBQVE7QUFDcEQ7QUFDQTs7QUFFTztBQUNQLG1DQUFtQyxvQ0FBb0M7QUFDdkU7O0FBRU87QUFDUDtBQUNBOztBQUVPO0FBQ1AsMkJBQTJCLCtEQUErRCxnQkFBZ0IsRUFBRSxFQUFFO0FBQzlHO0FBQ0EsbUNBQW1DLE1BQU0sNkJBQTZCLEVBQUUsWUFBWSxXQUFXLEVBQUU7QUFDakcsa0NBQWtDLE1BQU0saUNBQWlDLEVBQUUsWUFBWSxXQUFXLEVBQUU7QUFDcEcsK0JBQStCLHFGQUFxRjtBQUNwSDtBQUNBLEtBQUs7QUFDTDs7QUFFTztBQUNQLGFBQWEsNkJBQTZCLDBCQUEwQixhQUFhLEVBQUUscUJBQXFCO0FBQ3hHLGdCQUFnQixxREFBcUQsb0VBQW9FLGFBQWEsRUFBRTtBQUN4SixzQkFBc0Isc0JBQXNCLHFCQUFxQixHQUFHO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QztBQUN2QyxrQ0FBa0MsU0FBUztBQUMzQyxrQ0FBa0MsV0FBVyxVQUFVO0FBQ3ZELHlDQUF5QyxjQUFjO0FBQ3ZEO0FBQ0EsNkdBQTZHLE9BQU8sVUFBVTtBQUM5SCxnRkFBZ0YsaUJBQWlCLE9BQU87QUFDeEcsd0RBQXdELGdCQUFnQixRQUFRLE9BQU87QUFDdkYsOENBQThDLGdCQUFnQixnQkFBZ0IsT0FBTztBQUNyRjtBQUNBLGlDQUFpQztBQUNqQztBQUNBO0FBQ0EsU0FBUyxZQUFZLGFBQWEsT0FBTyxFQUFFLFVBQVUsV0FBVztBQUNoRSxtQ0FBbUMsU0FBUztBQUM1QztBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsTUFBTSxnQkFBZ0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsc0JBQXNCO0FBQ3ZDO0FBQ0E7QUFDQTs7QUFFTztBQUNQLDRCQUE0QixzQkFBc0I7QUFDbEQ7QUFDQTtBQUNBOztBQUVPO0FBQ1AsaURBQWlELFFBQVE7QUFDekQsd0NBQXdDLFFBQVE7QUFDaEQsd0RBQXdELFFBQVE7QUFDaEU7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQSxpQkFBaUIsc0ZBQXNGLGFBQWEsRUFBRTtBQUN0SCxzQkFBc0IsZ0NBQWdDLHFDQUFxQywwQ0FBMEMsRUFBRSxFQUFFLEdBQUc7QUFDNUksMkJBQTJCLE1BQU0sZUFBZSxFQUFFLFlBQVksb0JBQW9CLEVBQUU7QUFDcEYsc0JBQXNCLG9HQUFvRztBQUMxSCw2QkFBNkIsdUJBQXVCO0FBQ3BELDRCQUE0Qix3QkFBd0I7QUFDcEQsMkJBQTJCLHlEQUF5RDtBQUNwRjs7QUFFTztBQUNQO0FBQ0EsaUJBQWlCLDRDQUE0QyxTQUFTLEVBQUUscURBQXFELGFBQWEsRUFBRTtBQUM1SSx5QkFBeUIsNkJBQTZCLG9CQUFvQixnREFBZ0QsZ0JBQWdCLEVBQUUsS0FBSztBQUNqSjs7QUFFTztBQUNQO0FBQ0E7QUFDQSwyR0FBMkcsc0ZBQXNGLGFBQWEsRUFBRTtBQUNoTixzQkFBc0IsOEJBQThCLGdEQUFnRCx1REFBdUQsRUFBRSxFQUFFLEdBQUc7QUFDbEssNENBQTRDLHNDQUFzQyxVQUFVLG9CQUFvQixFQUFFLEVBQUUsVUFBVTtBQUM5SDs7QUFFTztBQUNQLGdDQUFnQyx1Q0FBdUMsYUFBYSxFQUFFLEVBQUUsT0FBTyxrQkFBa0I7QUFDakg7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTztBQUNQLDRDQUE0QztBQUM1Qzs7QUFFTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHNsaWIvdHNsaWIuZXM2LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbkNvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxyXG5cclxuUGVybWlzc2lvbiB0byB1c2UsIGNvcHksIG1vZGlmeSwgYW5kL29yIGRpc3RyaWJ1dGUgdGhpcyBzb2Z0d2FyZSBmb3IgYW55XHJcbnB1cnBvc2Ugd2l0aCBvciB3aXRob3V0IGZlZSBpcyBoZXJlYnkgZ3JhbnRlZC5cclxuXHJcblRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIgQU5EIFRIRSBBVVRIT1IgRElTQ0xBSU1TIEFMTCBXQVJSQU5USUVTIFdJVEhcclxuUkVHQVJEIFRPIFRISVMgU09GVFdBUkUgSU5DTFVESU5HIEFMTCBJTVBMSUVEIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZXHJcbkFORCBGSVRORVNTLiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SIEJFIExJQUJMRSBGT1IgQU5ZIFNQRUNJQUwsIERJUkVDVCxcclxuSU5ESVJFQ1QsIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyBPUiBBTlkgREFNQUdFUyBXSEFUU09FVkVSIFJFU1VMVElORyBGUk9NXHJcbkxPU1MgT0YgVVNFLCBEQVRBIE9SIFBST0ZJVFMsIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBORUdMSUdFTkNFIE9SXHJcbk9USEVSIFRPUlRJT1VTIEFDVElPTiwgQVJJU0lORyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBVU0UgT1JcclxuUEVSRk9STUFOQ0UgT0YgVEhJUyBTT0ZUV0FSRS5cclxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiogKi9cclxuLyogZ2xvYmFsIFJlZmxlY3QsIFByb21pc2UgKi9cclxuXHJcbnZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24oZCwgYikge1xyXG4gICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxyXG4gICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcclxuICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcclxuICAgIHJldHVybiBleHRlbmRTdGF0aWNzKGQsIGIpO1xyXG59O1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fZXh0ZW5kcyhkLCBiKSB7XHJcbiAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xyXG4gICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XHJcbiAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XHJcbn1cclxuXHJcbmV4cG9ydCB2YXIgX19hc3NpZ24gPSBmdW5jdGlvbigpIHtcclxuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiBfX2Fzc2lnbih0KSB7XHJcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XHJcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XHJcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSkgdFtwXSA9IHNbcF07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0O1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX3Jlc3QocywgZSkge1xyXG4gICAgdmFyIHQgPSB7fTtcclxuICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSAmJiBlLmluZGV4T2YocCkgPCAwKVxyXG4gICAgICAgIHRbcF0gPSBzW3BdO1xyXG4gICAgaWYgKHMgIT0gbnVsbCAmJiB0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyA9PT0gXCJmdW5jdGlvblwiKVxyXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBwID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzKTsgaSA8IHAubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgaWYgKGUuaW5kZXhPZihwW2ldKSA8IDAgJiYgT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHMsIHBbaV0pKVxyXG4gICAgICAgICAgICAgICAgdFtwW2ldXSA9IHNbcFtpXV07XHJcbiAgICAgICAgfVxyXG4gICAgcmV0dXJuIHQ7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX2RlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XHJcbiAgICB2YXIgYyA9IGFyZ3VtZW50cy5sZW5ndGgsIHIgPSBjIDwgMyA/IHRhcmdldCA6IGRlc2MgPT09IG51bGwgPyBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkgOiBkZXNjLCBkO1xyXG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcclxuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XHJcbiAgICByZXR1cm4gYyA+IDMgJiYgciAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHIpLCByO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19wYXJhbShwYXJhbUluZGV4LCBkZWNvcmF0b3IpIHtcclxuICAgIHJldHVybiBmdW5jdGlvbiAodGFyZ2V0LCBrZXkpIHsgZGVjb3JhdG9yKHRhcmdldCwga2V5LCBwYXJhbUluZGV4KTsgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19tZXRhZGF0YShtZXRhZGF0YUtleSwgbWV0YWRhdGFWYWx1ZSkge1xyXG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0Lm1ldGFkYXRhID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiBSZWZsZWN0Lm1ldGFkYXRhKG1ldGFkYXRhS2V5LCBtZXRhZGF0YVZhbHVlKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fYXdhaXRlcih0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcclxuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxyXG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XHJcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxyXG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxyXG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XHJcbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX2dlbmVyYXRvcih0aGlzQXJnLCBib2R5KSB7XHJcbiAgICB2YXIgXyA9IHsgbGFiZWw6IDAsIHNlbnQ6IGZ1bmN0aW9uKCkgeyBpZiAodFswXSAmIDEpIHRocm93IHRbMV07IHJldHVybiB0WzFdOyB9LCB0cnlzOiBbXSwgb3BzOiBbXSB9LCBmLCB5LCB0LCBnO1xyXG4gICAgcmV0dXJuIGcgPSB7IG5leHQ6IHZlcmIoMCksIFwidGhyb3dcIjogdmVyYigxKSwgXCJyZXR1cm5cIjogdmVyYigyKSB9LCB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgKGdbU3ltYm9sLml0ZXJhdG9yXSA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpczsgfSksIGc7XHJcbiAgICBmdW5jdGlvbiB2ZXJiKG4pIHsgcmV0dXJuIGZ1bmN0aW9uICh2KSB7IHJldHVybiBzdGVwKFtuLCB2XSk7IH07IH1cclxuICAgIGZ1bmN0aW9uIHN0ZXAob3ApIHtcclxuICAgICAgICBpZiAoZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkdlbmVyYXRvciBpcyBhbHJlYWR5IGV4ZWN1dGluZy5cIik7XHJcbiAgICAgICAgd2hpbGUgKF8pIHRyeSB7XHJcbiAgICAgICAgICAgIGlmIChmID0gMSwgeSAmJiAodCA9IG9wWzBdICYgMiA/IHlbXCJyZXR1cm5cIl0gOiBvcFswXSA/IHlbXCJ0aHJvd1wiXSB8fCAoKHQgPSB5W1wicmV0dXJuXCJdKSAmJiB0LmNhbGwoeSksIDApIDogeS5uZXh0KSAmJiAhKHQgPSB0LmNhbGwoeSwgb3BbMV0pKS5kb25lKSByZXR1cm4gdDtcclxuICAgICAgICAgICAgaWYgKHkgPSAwLCB0KSBvcCA9IFtvcFswXSAmIDIsIHQudmFsdWVdO1xyXG4gICAgICAgICAgICBzd2l0Y2ggKG9wWzBdKSB7XHJcbiAgICAgICAgICAgICAgICBjYXNlIDA6IGNhc2UgMTogdCA9IG9wOyBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgNDogXy5sYWJlbCsrOyByZXR1cm4geyB2YWx1ZTogb3BbMV0sIGRvbmU6IGZhbHNlIH07XHJcbiAgICAgICAgICAgICAgICBjYXNlIDU6IF8ubGFiZWwrKzsgeSA9IG9wWzFdOyBvcCA9IFswXTsgY29udGludWU7XHJcbiAgICAgICAgICAgICAgICBjYXNlIDc6IG9wID0gXy5vcHMucG9wKCk7IF8udHJ5cy5wb3AoKTsgY29udGludWU7XHJcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgICAgIGlmICghKHQgPSBfLnRyeXMsIHQgPSB0Lmxlbmd0aCA+IDAgJiYgdFt0Lmxlbmd0aCAtIDFdKSAmJiAob3BbMF0gPT09IDYgfHwgb3BbMF0gPT09IDIpKSB7IF8gPSAwOyBjb250aW51ZTsgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gMyAmJiAoIXQgfHwgKG9wWzFdID4gdFswXSAmJiBvcFsxXSA8IHRbM10pKSkgeyBfLmxhYmVsID0gb3BbMV07IGJyZWFrOyB9XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wWzBdID09PSA2ICYmIF8ubGFiZWwgPCB0WzFdKSB7IF8ubGFiZWwgPSB0WzFdOyB0ID0gb3A7IGJyZWFrOyB9XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHQgJiYgXy5sYWJlbCA8IHRbMl0pIHsgXy5sYWJlbCA9IHRbMl07IF8ub3BzLnB1c2gob3ApOyBicmVhazsgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0WzJdKSBfLm9wcy5wb3AoKTtcclxuICAgICAgICAgICAgICAgICAgICBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIG9wID0gYm9keS5jYWxsKHRoaXNBcmcsIF8pO1xyXG4gICAgICAgIH0gY2F0Y2ggKGUpIHsgb3AgPSBbNiwgZV07IHkgPSAwOyB9IGZpbmFsbHkgeyBmID0gdCA9IDA7IH1cclxuICAgICAgICBpZiAob3BbMF0gJiA1KSB0aHJvdyBvcFsxXTsgcmV0dXJuIHsgdmFsdWU6IG9wWzBdID8gb3BbMV0gOiB2b2lkIDAsIGRvbmU6IHRydWUgfTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fY3JlYXRlQmluZGluZyhvLCBtLCBrLCBrMikge1xyXG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcclxuICAgIG9bazJdID0gbVtrXTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fZXhwb3J0U3RhcihtLCBleHBvcnRzKSB7XHJcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgZXhwb3J0c1twXSA9IG1bcF07XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX3ZhbHVlcyhvKSB7XHJcbiAgICB2YXIgcyA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBTeW1ib2wuaXRlcmF0b3IsIG0gPSBzICYmIG9bc10sIGkgPSAwO1xyXG4gICAgaWYgKG0pIHJldHVybiBtLmNhbGwobyk7XHJcbiAgICBpZiAobyAmJiB0eXBlb2Ygby5sZW5ndGggPT09IFwibnVtYmVyXCIpIHJldHVybiB7XHJcbiAgICAgICAgbmV4dDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAobyAmJiBpID49IG8ubGVuZ3RoKSBvID0gdm9pZCAwO1xyXG4gICAgICAgICAgICByZXR1cm4geyB2YWx1ZTogbyAmJiBvW2krK10sIGRvbmU6ICFvIH07XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IocyA/IFwiT2JqZWN0IGlzIG5vdCBpdGVyYWJsZS5cIiA6IFwiU3ltYm9sLml0ZXJhdG9yIGlzIG5vdCBkZWZpbmVkLlwiKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fcmVhZChvLCBuKSB7XHJcbiAgICB2YXIgbSA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvW1N5bWJvbC5pdGVyYXRvcl07XHJcbiAgICBpZiAoIW0pIHJldHVybiBvO1xyXG4gICAgdmFyIGkgPSBtLmNhbGwobyksIHIsIGFyID0gW10sIGU7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIHdoaWxlICgobiA9PT0gdm9pZCAwIHx8IG4tLSA+IDApICYmICEociA9IGkubmV4dCgpKS5kb25lKSBhci5wdXNoKHIudmFsdWUpO1xyXG4gICAgfVxyXG4gICAgY2F0Y2ggKGVycm9yKSB7IGUgPSB7IGVycm9yOiBlcnJvciB9OyB9XHJcbiAgICBmaW5hbGx5IHtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBpZiAociAmJiAhci5kb25lICYmIChtID0gaVtcInJldHVyblwiXSkpIG0uY2FsbChpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZmluYWxseSB7IGlmIChlKSB0aHJvdyBlLmVycm9yOyB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gYXI7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX3NwcmVhZCgpIHtcclxuICAgIGZvciAodmFyIGFyID0gW10sIGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKVxyXG4gICAgICAgIGFyID0gYXIuY29uY2F0KF9fcmVhZChhcmd1bWVudHNbaV0pKTtcclxuICAgIHJldHVybiBhcjtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fc3ByZWFkQXJyYXlzKCkge1xyXG4gICAgZm9yICh2YXIgcyA9IDAsIGkgPSAwLCBpbCA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBpbDsgaSsrKSBzICs9IGFyZ3VtZW50c1tpXS5sZW5ndGg7XHJcbiAgICBmb3IgKHZhciByID0gQXJyYXkocyksIGsgPSAwLCBpID0gMDsgaSA8IGlsOyBpKyspXHJcbiAgICAgICAgZm9yICh2YXIgYSA9IGFyZ3VtZW50c1tpXSwgaiA9IDAsIGpsID0gYS5sZW5ndGg7IGogPCBqbDsgaisrLCBrKyspXHJcbiAgICAgICAgICAgIHJba10gPSBhW2pdO1xyXG4gICAgcmV0dXJuIHI7XHJcbn07XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19hd2FpdCh2KSB7XHJcbiAgICByZXR1cm4gdGhpcyBpbnN0YW5jZW9mIF9fYXdhaXQgPyAodGhpcy52ID0gdiwgdGhpcykgOiBuZXcgX19hd2FpdCh2KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fYXN5bmNHZW5lcmF0b3IodGhpc0FyZywgX2FyZ3VtZW50cywgZ2VuZXJhdG9yKSB7XHJcbiAgICBpZiAoIVN5bWJvbC5hc3luY0l0ZXJhdG9yKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3ltYm9sLmFzeW5jSXRlcmF0b3IgaXMgbm90IGRlZmluZWQuXCIpO1xyXG4gICAgdmFyIGcgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSksIGksIHEgPSBbXTtcclxuICAgIHJldHVybiBpID0ge30sIHZlcmIoXCJuZXh0XCIpLCB2ZXJiKFwidGhyb3dcIiksIHZlcmIoXCJyZXR1cm5cIiksIGlbU3ltYm9sLmFzeW5jSXRlcmF0b3JdID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfSwgaTtcclxuICAgIGZ1bmN0aW9uIHZlcmIobikgeyBpZiAoZ1tuXSkgaVtuXSA9IGZ1bmN0aW9uICh2KSB7IHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAoYSwgYikgeyBxLnB1c2goW24sIHYsIGEsIGJdKSA+IDEgfHwgcmVzdW1lKG4sIHYpOyB9KTsgfTsgfVxyXG4gICAgZnVuY3Rpb24gcmVzdW1lKG4sIHYpIHsgdHJ5IHsgc3RlcChnW25dKHYpKTsgfSBjYXRjaCAoZSkgeyBzZXR0bGUocVswXVszXSwgZSk7IH0gfVxyXG4gICAgZnVuY3Rpb24gc3RlcChyKSB7IHIudmFsdWUgaW5zdGFuY2VvZiBfX2F3YWl0ID8gUHJvbWlzZS5yZXNvbHZlKHIudmFsdWUudikudGhlbihmdWxmaWxsLCByZWplY3QpIDogc2V0dGxlKHFbMF1bMl0sIHIpOyB9XHJcbiAgICBmdW5jdGlvbiBmdWxmaWxsKHZhbHVlKSB7IHJlc3VtZShcIm5leHRcIiwgdmFsdWUpOyB9XHJcbiAgICBmdW5jdGlvbiByZWplY3QodmFsdWUpIHsgcmVzdW1lKFwidGhyb3dcIiwgdmFsdWUpOyB9XHJcbiAgICBmdW5jdGlvbiBzZXR0bGUoZiwgdikgeyBpZiAoZih2KSwgcS5zaGlmdCgpLCBxLmxlbmd0aCkgcmVzdW1lKHFbMF1bMF0sIHFbMF1bMV0pOyB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX2FzeW5jRGVsZWdhdG9yKG8pIHtcclxuICAgIHZhciBpLCBwO1xyXG4gICAgcmV0dXJuIGkgPSB7fSwgdmVyYihcIm5leHRcIiksIHZlcmIoXCJ0aHJvd1wiLCBmdW5jdGlvbiAoZSkgeyB0aHJvdyBlOyB9KSwgdmVyYihcInJldHVyblwiKSwgaVtTeW1ib2wuaXRlcmF0b3JdID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfSwgaTtcclxuICAgIGZ1bmN0aW9uIHZlcmIobiwgZikgeyBpW25dID0gb1tuXSA/IGZ1bmN0aW9uICh2KSB7IHJldHVybiAocCA9ICFwKSA/IHsgdmFsdWU6IF9fYXdhaXQob1tuXSh2KSksIGRvbmU6IG4gPT09IFwicmV0dXJuXCIgfSA6IGYgPyBmKHYpIDogdjsgfSA6IGY7IH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fYXN5bmNWYWx1ZXMobykge1xyXG4gICAgaWYgKCFTeW1ib2wuYXN5bmNJdGVyYXRvcikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN5bWJvbC5hc3luY0l0ZXJhdG9yIGlzIG5vdCBkZWZpbmVkLlwiKTtcclxuICAgIHZhciBtID0gb1tTeW1ib2wuYXN5bmNJdGVyYXRvcl0sIGk7XHJcbiAgICByZXR1cm4gbSA/IG0uY2FsbChvKSA6IChvID0gdHlwZW9mIF9fdmFsdWVzID09PSBcImZ1bmN0aW9uXCIgPyBfX3ZhbHVlcyhvKSA6IG9bU3ltYm9sLml0ZXJhdG9yXSgpLCBpID0ge30sIHZlcmIoXCJuZXh0XCIpLCB2ZXJiKFwidGhyb3dcIiksIHZlcmIoXCJyZXR1cm5cIiksIGlbU3ltYm9sLmFzeW5jSXRlcmF0b3JdID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfSwgaSk7XHJcbiAgICBmdW5jdGlvbiB2ZXJiKG4pIHsgaVtuXSA9IG9bbl0gJiYgZnVuY3Rpb24gKHYpIHsgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsgdiA9IG9bbl0odiksIHNldHRsZShyZXNvbHZlLCByZWplY3QsIHYuZG9uZSwgdi52YWx1ZSk7IH0pOyB9OyB9XHJcbiAgICBmdW5jdGlvbiBzZXR0bGUocmVzb2x2ZSwgcmVqZWN0LCBkLCB2KSB7IFByb21pc2UucmVzb2x2ZSh2KS50aGVuKGZ1bmN0aW9uKHYpIHsgcmVzb2x2ZSh7IHZhbHVlOiB2LCBkb25lOiBkIH0pOyB9LCByZWplY3QpOyB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX21ha2VUZW1wbGF0ZU9iamVjdChjb29rZWQsIHJhdykge1xyXG4gICAgaWYgKE9iamVjdC5kZWZpbmVQcm9wZXJ0eSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkoY29va2VkLCBcInJhd1wiLCB7IHZhbHVlOiByYXcgfSk7IH0gZWxzZSB7IGNvb2tlZC5yYXcgPSByYXc7IH1cclxuICAgIHJldHVybiBjb29rZWQ7XHJcbn07XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19pbXBvcnRTdGFyKG1vZCkge1xyXG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcclxuICAgIHZhciByZXN1bHQgPSB7fTtcclxuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChPYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSByZXN1bHRba10gPSBtb2Rba107XHJcbiAgICByZXN1bHQuZGVmYXVsdCA9IG1vZDtcclxuICAgIHJldHVybiByZXN1bHQ7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX2ltcG9ydERlZmF1bHQobW9kKSB7XHJcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IGRlZmF1bHQ6IG1vZCB9O1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19jbGFzc1ByaXZhdGVGaWVsZEdldChyZWNlaXZlciwgcHJpdmF0ZU1hcCkge1xyXG4gICAgaWYgKCFwcml2YXRlTWFwLmhhcyhyZWNlaXZlcikpIHtcclxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiYXR0ZW1wdGVkIHRvIGdldCBwcml2YXRlIGZpZWxkIG9uIG5vbi1pbnN0YW5jZVwiKTtcclxuICAgIH1cclxuICAgIHJldHVybiBwcml2YXRlTWFwLmdldChyZWNlaXZlcik7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KHJlY2VpdmVyLCBwcml2YXRlTWFwLCB2YWx1ZSkge1xyXG4gICAgaWYgKCFwcml2YXRlTWFwLmhhcyhyZWNlaXZlcikpIHtcclxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiYXR0ZW1wdGVkIHRvIHNldCBwcml2YXRlIGZpZWxkIG9uIG5vbi1pbnN0YW5jZVwiKTtcclxuICAgIH1cclxuICAgIHByaXZhdGVNYXAuc2V0KHJlY2VpdmVyLCB2YWx1ZSk7XHJcbiAgICByZXR1cm4gdmFsdWU7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/harmony-module.js":
/*!*******************************************!*\
  !*** (webpack)/buildin/harmony-module.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLyh3ZWJwYWNrKS9idWlsZGluL2hhcm1vbnktbW9kdWxlLmpzPzgyYjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9oYXJtb255LW1vZHVsZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ob3JpZ2luYWxNb2R1bGUpIHtcblx0aWYgKCFvcmlnaW5hbE1vZHVsZS53ZWJwYWNrUG9seWZpbGwpIHtcblx0XHR2YXIgbW9kdWxlID0gT2JqZWN0LmNyZWF0ZShvcmlnaW5hbE1vZHVsZSk7XG5cdFx0Ly8gbW9kdWxlLnBhcmVudCA9IHVuZGVmaW5lZCBieSBkZWZhdWx0XG5cdFx0aWYgKCFtb2R1bGUuY2hpbGRyZW4pIG1vZHVsZS5jaGlsZHJlbiA9IFtdO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwibG9hZGVkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmw7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJpZFwiLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5pO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwiZXhwb3J0c1wiLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlXG5cdFx0fSk7XG5cdFx0bW9kdWxlLndlYnBhY2tQb2x5ZmlsbCA9IDE7XG5cdH1cblx0cmV0dXJuIG1vZHVsZTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/harmony-module.js\n");

/***/ }),

/***/ "./overmind/actions.js":
/*!*****************************!*\
  !*** ./overmind/actions.js ***!
  \*****************************/
/*! exports provided: setTab, setLink, setValue, toggleGrayscale, toggleInvert, toggleSepia, setScale, deleteUploadedFile, fileUpload, getAndPixelateImage, pixelImage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setTab\", function() { return setTab; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setLink\", function() { return setLink; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setValue\", function() { return setValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toggleGrayscale\", function() { return toggleGrayscale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toggleInvert\", function() { return toggleInvert; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toggleSepia\", function() { return toggleSepia; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setScale\", function() { return setScale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deleteUploadedFile\", function() { return deleteUploadedFile; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fileUpload\", function() { return fileUpload; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getAndPixelateImage\", function() { return getAndPixelateImage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pixelImage\", function() { return pixelImage; });\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n\n\nvar setTab = function setTab(_ref, tab) {\n  var state = _ref.state;\n  state.activeTab = tab;\n};\nvar setLink = function setLink(_ref2, link) {\n  var state = _ref2.state;\n  state.imageLink = link;\n};\nvar setValue = function setValue(_ref3, _ref4) {\n  var state = _ref3.state;\n  var name = _ref4.name,\n      value = _ref4.value;\n  state[name] = value;\n};\nvar toggleGrayscale = function toggleGrayscale(_ref5) {\n  var state = _ref5.state;\n  state.grayscale = !state.grayscale;\n};\nvar toggleInvert = function toggleInvert(_ref6) {\n  var state = _ref6.state;\n  state.invert = !state.invert;\n};\nvar toggleSepia = function toggleSepia(_ref7) {\n  var state = _ref7.state;\n  state.sepia = !state.sepia;\n};\nvar setScale = function setScale(_ref8, scale) {\n  var state = _ref8.state;\n  state.scale = parseInt(scale, 10);\n};\nvar deleteUploadedFile = function deleteUploadedFile(_ref9) {\n  var state = _ref9.state;\n  state.uploadedFile = null;\n};\nvar fileUpload = /*#__PURE__*/function () {\n  var _ref11 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(_ref10, e) {\n    var state, effects, file, base64;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            state = _ref10.state, effects = _ref10.effects;\n            _context.prev = 1;\n            file = e.target.files[0];\n            _context.next = 5;\n            return effects.browser.toBase64(file);\n\n          case 5:\n            base64 = _context.sent;\n            state.uploadedFile = base64;\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            console.error(_context.t0);\n            state.error = true;\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 9]]);\n  }));\n\n  return function fileUpload(_x, _x2) {\n    return _ref11.apply(this, arguments);\n  };\n}();\nvar getAndPixelateImage = /*#__PURE__*/function () {\n  var _ref14 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(_ref12, _ref13) {\n    var state, effects, actions, canvas, id, data, dataUrl, _dataUrl;\n\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            state = _ref12.state, effects = _ref12.effects, actions = _ref12.actions;\n            canvas = _ref13.canvas;\n            state.error = false;\n            _context2.prev = 3;\n\n            if (!state.isUnsplash) {\n              _context2.next = 14;\n              break;\n            }\n\n            id = state.imageLink.includes(\"unsplash.com/photos/\") ? state.imageLink.split(\"unsplash.com/photos/\")[1] : state.imageLink;\n            _context2.next = 8;\n            return fetch(\"api/photo/\".concat(id)).then(function (rsp) {\n              return rsp.json();\n            });\n\n          case 8:\n            data = _context2.sent;\n            _context2.next = 11;\n            return effects.browser.toDataURL(data.urls.regular);\n\n          case 11:\n            dataUrl = _context2.sent;\n            state.unsplashData = data;\n            state.activeImage = dataUrl;\n\n          case 14:\n            if (!state.isURL) {\n              _context2.next = 19;\n              break;\n            }\n\n            _context2.next = 17;\n            return effects.browser.toDataURL(state.imageLink);\n\n          case 17:\n            _dataUrl = _context2.sent;\n            state.activeImage = _dataUrl;\n\n          case 19:\n            if (state.isFileUpload) {\n              state.activeImage = state.uploadedFile;\n            }\n\n            actions.pixelImage({\n              canvas: canvas\n            });\n            _context2.next = 27;\n            break;\n\n          case 23:\n            _context2.prev = 23;\n            _context2.t0 = _context2[\"catch\"](3);\n            console.error(_context2.t0);\n            state.error = true;\n\n          case 27:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[3, 23]]);\n  }));\n\n  return function getAndPixelateImage(_x3, _x4) {\n    return _ref14.apply(this, arguments);\n  };\n}();\nvar pixelImage = /*#__PURE__*/function () {\n  var _ref17 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3(_ref15, _ref16) {\n    var state, effects, canvas, scale, palette, grayscale, activeImage, sepia, hue, exposure, gamma, noise, saturation, vibrance, invert;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            state = _ref15.state, effects = _ref15.effects;\n            canvas = _ref16.canvas;\n            scale = state.scale, palette = state.palette, grayscale = state.grayscale, activeImage = state.activeImage, sepia = state.sepia, hue = state.hue, exposure = state.exposure, gamma = state.gamma, noise = state.noise, saturation = state.saturation, vibrance = state.vibrance, invert = state.invert;\n            _context3.prev = 3;\n            _context3.next = 6;\n            return effects.pixel.drawPixelImage({\n              to: canvas.current,\n              scale: scale,\n              palette: palette,\n              grayscale: grayscale,\n              activeImage: activeImage,\n              sepia: sepia,\n              hue: hue,\n              exposure: exposure,\n              gamma: gamma,\n              noise: noise,\n              saturation: saturation,\n              vibrance: vibrance,\n              invert: invert\n            });\n\n          case 6:\n            _context3.next = 12;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](3);\n            console.error(_context3.t0);\n            state.error = true;\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[3, 8]]);\n  }));\n\n  return function pixelImage(_x5, _x6) {\n    return _ref17.apply(this, arguments);\n  };\n}();\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./overmind/actions.js\n");

/***/ }),

/***/ "./overmind/effects.js":
/*!*****************************!*\
  !*** ./overmind/effects.js ***!
  \*****************************/
/*! exports provided: browser, pixel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"browser\", function() { return browser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pixel\", function() { return pixel; });\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n\n\nvar browser = {\n  toBase64: function toBase64(file) {\n    return new Promise(function (resolve, reject) {\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = function () {\n        return resolve(reader.result);\n      };\n\n      reader.onerror = function (error) {\n        return reject(error);\n      };\n    });\n  },\n  download: function download(canvas) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"pixelated-image\";\n    var link = document.createElement(\"a\");\n    link.download = name + \".png\";\n    link.href = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n    document.querySelector(\"body\").appendChild(link);\n    link.click();\n    document.querySelector(\"body\").removeChild(link);\n  },\n  toDataURL: function () {\n    var _toDataURL = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(src, outputFormat) {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                var img = new Image();\n                img.crossOrigin = \"Anonymous\";\n\n                img.onload = function () {\n                  return resolve(img);\n                };\n\n                img.onerror = reject;\n                img.src = src;\n              }).then(function (img) {\n                var canvas = document.createElement(\"CANVAS\");\n                var ctx = canvas.getContext(\"2d\");\n                var dataURL;\n                canvas.height = img.naturalHeight;\n                canvas.width = img.naturalWidth;\n                ctx.drawImage(img, 0, 0);\n                dataURL = canvas.toDataURL(outputFormat);\n                return dataURL;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function toDataURL(_x, _x2) {\n      return _toDataURL.apply(this, arguments);\n    }\n\n    return toDataURL;\n  }()\n};\nvar pixel = {\n  convertGrayscale: function convertGrayscale(ctx, drawTo) {\n    var w = drawTo.width;\n    var h = drawTo.height;\n    var imgPixels = ctx.getImageData(0, 0, w, h);\n\n    for (var y = 0; y < imgPixels.height; y++) {\n      for (var x = 0; x < imgPixels.width; x++) {\n        var i = y * 4 * imgPixels.width + x * 4;\n        var avg = (imgPixels.data[i] + imgPixels.data[i + 1] + imgPixels.data[i + 2]) / 3;\n        imgPixels.data[i] = avg;\n        imgPixels.data[i + 1] = avg;\n        imgPixels.data[i + 2] = avg;\n      }\n    }\n\n    ctx.putImageData(imgPixels, 0, 0, 0, 0, imgPixels.width, imgPixels.height);\n  },\n  createImage: function createImage(activeImage) {\n    return new Promise(function (resolve, reject) {\n      var img = new Image();\n\n      img.onload = function () {\n        return resolve(img);\n      };\n\n      img.onerror = reject;\n      img.src = activeImage;\n    });\n  },\n  draw: function draw(drawFrom, drawTo, ctx, img) {\n    return Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2() {\n      var canvasCopy, copyContext, ratio;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              drawTo.width = drawFrom.width;\n              drawTo.height = drawFrom.height;\n              ctx.drawImage(img, 0, 0);\n              canvasCopy = document.createElement(\"canvas\");\n              copyContext = canvasCopy.getContext(\"2d\");\n              ratio = 1.0;\n              canvasCopy.width = drawTo.width;\n              canvasCopy.height = drawTo.height;\n              copyContext.drawImage(drawTo, 0, 0);\n              drawTo.width = drawTo.width * ratio;\n              drawTo.height = drawTo.height * ratio;\n              ctx.drawImage(canvasCopy, 0, 0, canvasCopy.width, canvasCopy.height, 0, 0, drawTo.width, drawTo.height);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  drawPixelImage: function drawPixelImage(_ref) {\n    var _this = this;\n\n    return Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3() {\n      var drawTo, originalScale, grayscale, sepia, activeImage, hue, gamma, exposure, noise, saturation, vibrance, invert, img, scale, ctx, scaledW, scaledH;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              drawTo = _ref.to, originalScale = _ref.scale, grayscale = _ref.grayscale, sepia = _ref.sepia, activeImage = _ref.activeImage, hue = _ref.hue, gamma = _ref.gamma, exposure = _ref.exposure, noise = _ref.noise, saturation = _ref.saturation, vibrance = _ref.vibrance, invert = _ref.invert;\n              _context3.next = 3;\n              return _this.createImage(activeImage);\n\n            case 3:\n              img = _context3.sent;\n              scale = originalScale ? originalScale * 0.01 : 8 * 0.01;\n              ctx = drawTo.getContext(\"2d\");\n              _context3.next = 8;\n              return _this.draw(img, drawTo, ctx, img);\n\n            case 8:\n              drawTo.width = img.width;\n              drawTo.height = img.height;\n              scaledW = drawTo.width * scale;\n              scaledH = drawTo.height * scale;\n              ctx.mozImageSmoothingEnabled = false;\n              ctx.webkitImageSmoothingEnabled = false;\n              ctx.imageSmoothingEnabled = false;\n              ctx.drawImage(img, 0, 0, scaledW, scaledH);\n              ctx.drawImage(drawTo, 0, 0, scaledW, scaledH, 0, 0, img.width, img.height);\n              Caman(drawTo, function () {\n                var that = this;\n\n                if (grayscale) {\n                  that.greyscale();\n                }\n\n                if (sepia) {\n                  that.sepia(100);\n                }\n\n                if (hue) {\n                  that.hue(parseInt(hue));\n                }\n\n                if (exposure) {\n                  that.exposure(parseInt(exposure));\n                }\n\n                if (gamma) {\n                  that.gamma(parseInt(gamma));\n                }\n\n                if (noise) {\n                  that.noise(parseInt(noise));\n                }\n\n                if (saturation) {\n                  that.saturation(parseInt(saturation));\n                }\n\n                if (vibrance) {\n                  that.vibrance(parseInt(vibrance));\n                }\n\n                if (invert) {\n                  that.invert();\n                }\n\n                that.render();\n              });\n\n            case 18:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  }\n};\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./overmind/effects.js\n");

/***/ }),

/***/ "./overmind/index.js":
/*!***************************!*\
  !*** ./overmind/index.js ***!
  \***************************/
/*! exports provided: config, useOvermind */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"config\", function() { return config; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useOvermind\", function() { return useOvermind; });\n/* harmony import */ var overmind_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! overmind-react */ \"./node_modules/overmind-react/es/index.js\");\n/* harmony import */ var _effects__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./effects */ \"./overmind/effects.js\");\n/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./state */ \"./overmind/state.js\");\n/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./actions */ \"./overmind/actions.js\");\n\n\n\n\nvar config = {\n  state: _state__WEBPACK_IMPORTED_MODULE_2__[\"state\"],\n  actions: _actions__WEBPACK_IMPORTED_MODULE_3__,\n  effects: _effects__WEBPACK_IMPORTED_MODULE_1__\n};\nvar useOvermind = Object(overmind_react__WEBPACK_IMPORTED_MODULE_0__[\"createHook\"])();\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vb3Zlcm1pbmQvaW5kZXguanM/NTU0OSJdLCJuYW1lcyI6WyJjb25maWciLCJzdGF0ZSIsImFjdGlvbnMiLCJlZmZlY3RzIiwidXNlT3Zlcm1pbmQiLCJjcmVhdGVIb29rIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRU8sSUFBTUEsTUFBTSxHQUFHO0FBQ3BCQyxPQUFLLEVBQUxBLDRDQURvQjtBQUVwQkMsU0FBTyxFQUFQQSxxQ0FGb0I7QUFHcEJDLFNBQU8sRUFBUEEscUNBQU9BO0FBSGEsQ0FBZjtBQU1BLElBQU1DLFdBQVcsR0FBR0MsaUVBQVUsRUFBOUIiLCJmaWxlIjoiLi9vdmVybWluZC9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUhvb2sgfSBmcm9tIFwib3Zlcm1pbmQtcmVhY3RcIjtcbmltcG9ydCAqIGFzIGVmZmVjdHMgZnJvbSBcIi4vZWZmZWN0c1wiO1xuaW1wb3J0IHsgc3RhdGUgfSBmcm9tIFwiLi9zdGF0ZVwiO1xuaW1wb3J0ICogYXMgYWN0aW9ucyBmcm9tIFwiLi9hY3Rpb25zXCI7XG5cbmV4cG9ydCBjb25zdCBjb25maWcgPSB7XG4gIHN0YXRlLFxuICBhY3Rpb25zLFxuICBlZmZlY3RzLFxufTtcblxuZXhwb3J0IGNvbnN0IHVzZU92ZXJtaW5kID0gY3JlYXRlSG9vaygpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./overmind/index.js\n");

/***/ }),

/***/ "./overmind/state.js":
/*!***************************!*\
  !*** ./overmind/state.js ***!
  \***************************/
/*! exports provided: state */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"state\", function() { return state; });\n/* harmony import */ var overmind__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! overmind */ \"./node_modules/overmind/es/index.js\");\n\nvar tabs = [\"Unsplash Link\", \"File Upload\", \"Url\"];\nvar state = {\n  tabs: tabs,\n  activeTab: tabs[0],\n  isUnsplash: Object(overmind__WEBPACK_IMPORTED_MODULE_0__[\"derived\"])(function (state) {\n    return state.activeTab === tabs[0];\n  }),\n  isFileUpload: Object(overmind__WEBPACK_IMPORTED_MODULE_0__[\"derived\"])(function (state) {\n    return state.activeTab === tabs[1];\n  }),\n  isURL: Object(overmind__WEBPACK_IMPORTED_MODULE_0__[\"derived\"])(function (state) {\n    return state.activeTab === tabs[2];\n  }),\n  isButtonDisabled: Object(overmind__WEBPACK_IMPORTED_MODULE_0__[\"derived\"])(function (state) {\n    if (state.isUnsplash || state.isURL) {\n      return !state.imageLink;\n    }\n\n    if (state.isFileUpload) {\n      return !state.uploadedFile;\n    }\n  }),\n  imageLink: \"\",\n  uploadedFile: null,\n  activeImage: null,\n  unsplashData: null,\n  scale: 8,\n  grayscale: false,\n  sepia: false,\n  error: null,\n  hue: 0,\n  exposure: 0,\n  gamma: 0,\n  noise: 0,\n  saturation: 0,\n  vibrance: 0,\n  invert: false\n};\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vb3Zlcm1pbmQvc3RhdGUuanM/NjJiMiJdLCJuYW1lcyI6WyJ0YWJzIiwic3RhdGUiLCJhY3RpdmVUYWIiLCJpc1Vuc3BsYXNoIiwiZGVyaXZlZCIsImlzRmlsZVVwbG9hZCIsImlzVVJMIiwiaXNCdXR0b25EaXNhYmxlZCIsImltYWdlTGluayIsInVwbG9hZGVkRmlsZSIsImFjdGl2ZUltYWdlIiwidW5zcGxhc2hEYXRhIiwic2NhbGUiLCJncmF5c2NhbGUiLCJzZXBpYSIsImVycm9yIiwiaHVlIiwiZXhwb3N1cmUiLCJnYW1tYSIsIm5vaXNlIiwic2F0dXJhdGlvbiIsInZpYnJhbmNlIiwiaW52ZXJ0Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBLElBQU1BLElBQUksR0FBRyxDQUFDLGVBQUQsRUFBa0IsYUFBbEIsRUFBaUMsS0FBakMsQ0FBYjtBQUNPLElBQU1DLEtBQUssR0FBRztBQUNuQkQsTUFBSSxFQUFFQSxJQURhO0FBRW5CRSxXQUFTLEVBQUVGLElBQUksQ0FBQyxDQUFELENBRkk7QUFHbkJHLFlBQVUsRUFBRUMsd0RBQU8sQ0FBQyxVQUFDSCxLQUFEO0FBQUEsV0FBV0EsS0FBSyxDQUFDQyxTQUFOLEtBQW9CRixJQUFJLENBQUMsQ0FBRCxDQUFuQztBQUFBLEdBQUQsQ0FIQTtBQUluQkssY0FBWSxFQUFFRCx3REFBTyxDQUFDLFVBQUNILEtBQUQ7QUFBQSxXQUFXQSxLQUFLLENBQUNDLFNBQU4sS0FBb0JGLElBQUksQ0FBQyxDQUFELENBQW5DO0FBQUEsR0FBRCxDQUpGO0FBS25CTSxPQUFLLEVBQUVGLHdEQUFPLENBQUMsVUFBQ0gsS0FBRDtBQUFBLFdBQVdBLEtBQUssQ0FBQ0MsU0FBTixLQUFvQkYsSUFBSSxDQUFDLENBQUQsQ0FBbkM7QUFBQSxHQUFELENBTEs7QUFNbkJPLGtCQUFnQixFQUFFSCx3REFBTyxDQUFDLFVBQUNILEtBQUQsRUFBVztBQUNuQyxRQUFJQSxLQUFLLENBQUNFLFVBQU4sSUFBb0JGLEtBQUssQ0FBQ0ssS0FBOUIsRUFBcUM7QUFDbkMsYUFBTyxDQUFDTCxLQUFLLENBQUNPLFNBQWQ7QUFDRDs7QUFFRCxRQUFJUCxLQUFLLENBQUNJLFlBQVYsRUFBd0I7QUFDdEIsYUFBTyxDQUFDSixLQUFLLENBQUNRLFlBQWQ7QUFDRDtBQUNGLEdBUndCLENBTk47QUFlbkJELFdBQVMsRUFBRSxFQWZRO0FBZ0JuQkMsY0FBWSxFQUFFLElBaEJLO0FBaUJuQkMsYUFBVyxFQUFFLElBakJNO0FBa0JuQkMsY0FBWSxFQUFFLElBbEJLO0FBbUJuQkMsT0FBSyxFQUFFLENBbkJZO0FBb0JuQkMsV0FBUyxFQUFFLEtBcEJRO0FBcUJuQkMsT0FBSyxFQUFFLEtBckJZO0FBc0JuQkMsT0FBSyxFQUFFLElBdEJZO0FBdUJuQkMsS0FBRyxFQUFFLENBdkJjO0FBd0JuQkMsVUFBUSxFQUFFLENBeEJTO0FBeUJuQkMsT0FBSyxFQUFFLENBekJZO0FBMEJuQkMsT0FBSyxFQUFFLENBMUJZO0FBMkJuQkMsWUFBVSxFQUFFLENBM0JPO0FBNEJuQkMsVUFBUSxFQUFFLENBNUJTO0FBNkJuQkMsUUFBTSxFQUFFO0FBN0JXLENBQWQiLCJmaWxlIjoiLi9vdmVybWluZC9zdGF0ZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlcml2ZWQgfSBmcm9tIFwib3Zlcm1pbmRcIjtcblxuY29uc3QgdGFicyA9IFtcIlVuc3BsYXNoIExpbmtcIiwgXCJGaWxlIFVwbG9hZFwiLCBcIlVybFwiXTtcbmV4cG9ydCBjb25zdCBzdGF0ZSA9IHtcbiAgdGFiczogdGFicyxcbiAgYWN0aXZlVGFiOiB0YWJzWzBdLFxuICBpc1Vuc3BsYXNoOiBkZXJpdmVkKChzdGF0ZSkgPT4gc3RhdGUuYWN0aXZlVGFiID09PSB0YWJzWzBdKSxcbiAgaXNGaWxlVXBsb2FkOiBkZXJpdmVkKChzdGF0ZSkgPT4gc3RhdGUuYWN0aXZlVGFiID09PSB0YWJzWzFdKSxcbiAgaXNVUkw6IGRlcml2ZWQoKHN0YXRlKSA9PiBzdGF0ZS5hY3RpdmVUYWIgPT09IHRhYnNbMl0pLFxuICBpc0J1dHRvbkRpc2FibGVkOiBkZXJpdmVkKChzdGF0ZSkgPT4ge1xuICAgIGlmIChzdGF0ZS5pc1Vuc3BsYXNoIHx8IHN0YXRlLmlzVVJMKSB7XG4gICAgICByZXR1cm4gIXN0YXRlLmltYWdlTGluaztcbiAgICB9XG5cbiAgICBpZiAoc3RhdGUuaXNGaWxlVXBsb2FkKSB7XG4gICAgICByZXR1cm4gIXN0YXRlLnVwbG9hZGVkRmlsZTtcbiAgICB9XG4gIH0pLFxuICBpbWFnZUxpbms6IFwiXCIsXG4gIHVwbG9hZGVkRmlsZTogbnVsbCxcbiAgYWN0aXZlSW1hZ2U6IG51bGwsXG4gIHVuc3BsYXNoRGF0YTogbnVsbCxcbiAgc2NhbGU6IDgsXG4gIGdyYXlzY2FsZTogZmFsc2UsXG4gIHNlcGlhOiBmYWxzZSxcbiAgZXJyb3I6IG51bGwsXG4gIGh1ZTogMCxcbiAgZXhwb3N1cmU6IDAsXG4gIGdhbW1hOiAwLFxuICBub2lzZTogMCxcbiAgc2F0dXJhdGlvbjogMCxcbiAgdmlicmFuY2U6IDAsXG4gIGludmVydDogZmFsc2UsXG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./overmind/state.js\n");

/***/ }),

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return IndexPage; });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _overmind__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../overmind */ \"./overmind/index.js\");\n/* harmony import */ var _components_Form__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/Form */ \"./components/Form.js\");\n/* harmony import */ var _components_ImageViewer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/ImageViewer */ \"./components/ImageViewer.js\");\n\n\nvar _jsxFileName = \"/Users/saravieira/Projects/pixel-splash/pages/index.js\",\n    _s = $RefreshSig$();\n\n\n\n\n\nfunction IndexPage() {\n  _s();\n\n  var _useOvermind = Object(_overmind__WEBPACK_IMPORTED_MODULE_2__[\"useOvermind\"])(),\n      state = _useOvermind.state,\n      effects = _useOvermind.effects;\n\n  var canvas = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])();\n  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n    className: \"bg-gray-100\",\n    children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"header\", {\n      children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"img\", {\n        src: \"/logo.svg\",\n        alt: \"Pixelr Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"h1\", {\n        className: \"nes-text is-primary\",\n        children: [\"Pix\", /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"span\", {\n          style: {\n            color: \"#92cc41\"\n          },\n          children: \"lr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n      className: \"max-w-7xl mx-auto sm:px-6 lg:px-8 pt-10 pb-10\",\n      children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n        className: \"nes-container is-rounded bg-white  \",\n        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n          className: \"py-5 \".concat(state.activeImage ? \"divider\" : null),\n          children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(_components_Form__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n            canvas: canvas\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n          className: \" py-5\",\n          children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(_components_ImageViewer__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n            canvas: canvas\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), state.activeImage && /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"button\", {\n            className: \"nes-btn \",\n            onClick: function onClick() {\n              return effects.browser.download(canvas.current);\n            },\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), state.error && /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            className: \"nes-balloon from-left\",\n            id: \"error-dialog\",\n            children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"p\", {\n              className: \"nes-text is-error\",\n              children: \"There has been a problem creating your image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"footer\", {\n      className: \"flex items-center justify-center mb-6\",\n      children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"a\", {\n        href: \"https://github.com/SaraVieira/pixel-splash\",\n        children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"i\", {\n          className: \"nes-octocat is-medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(IndexPage, \"fZujQpdPmyLrYt9QqL/hM6lSOxY=\", false, function () {\n  return [_overmind__WEBPACK_IMPORTED_MODULE_2__[\"useOvermind\"]];\n});\n\n_c = IndexPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexPage\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvaW5kZXguanM/NDRkOCJdLCJuYW1lcyI6WyJJbmRleFBhZ2UiLCJ1c2VPdmVybWluZCIsInN0YXRlIiwiZWZmZWN0cyIsImNhbnZhcyIsInVzZVJlZiIsImNvbG9yIiwiYWN0aXZlSW1hZ2UiLCJicm93c2VyIiwiZG93bmxvYWQiLCJjdXJyZW50IiwiZXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFFZSxTQUFTQSxTQUFULEdBQXFCO0FBQUE7O0FBQUEscUJBQ1BDLDZEQUFXLEVBREo7QUFBQSxNQUMxQkMsS0FEMEIsZ0JBQzFCQSxLQUQwQjtBQUFBLE1BQ25CQyxPQURtQixnQkFDbkJBLE9BRG1COztBQUdsQyxNQUFNQyxNQUFNLEdBQUdDLG9EQUFNLEVBQXJCO0FBRUEsc0JBQ0U7QUFBSyxhQUFTLEVBQUMsYUFBZjtBQUFBLDRCQUNFO0FBQUEsOEJBQ0U7QUFBSyxXQUFHLEVBQUMsV0FBVDtBQUFxQixXQUFHLEVBQUM7QUFBekI7QUFBQTtBQUFBO0FBQUE7QUFBQSxjQURGLGVBRUU7QUFBSSxpQkFBUyxFQUFDLHFCQUFkO0FBQUEsdUNBQ0s7QUFBTSxlQUFLLEVBQUU7QUFBRUMsaUJBQUssRUFBRTtBQUFULFdBQWI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsZ0JBREw7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGNBRkY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLFlBREYsZUFPRTtBQUFLLGVBQVMsRUFBQywrQ0FBZjtBQUFBLDZCQUNFO0FBQUssaUJBQVMsRUFBQyxxQ0FBZjtBQUFBLGdDQUNFO0FBQUssbUJBQVMsaUJBQVVKLEtBQUssQ0FBQ0ssV0FBTixHQUFvQixTQUFwQixHQUFnQyxJQUExQyxDQUFkO0FBQUEsaUNBQ0UscUVBQUMsd0RBQUQ7QUFBTSxrQkFBTSxFQUFFSDtBQUFkO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFERjtBQUFBO0FBQUE7QUFBQTtBQUFBLGdCQURGLGVBSUU7QUFBSyxtQkFBUyxFQUFDLE9BQWY7QUFBQSxrQ0FDRSxxRUFBQywrREFBRDtBQUFhLGtCQUFNLEVBQUVBO0FBQXJCO0FBQUE7QUFBQTtBQUFBO0FBQUEsa0JBREYsRUFHR0YsS0FBSyxDQUFDSyxXQUFOLGlCQUNDO0FBQ0UscUJBQVMsRUFBQyxVQURaO0FBRUUsbUJBQU8sRUFBRTtBQUFBLHFCQUFNSixPQUFPLENBQUNLLE9BQVIsQ0FBZ0JDLFFBQWhCLENBQXlCTCxNQUFNLENBQUNNLE9BQWhDLENBQU47QUFBQSxhQUZYO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGtCQUpKLEVBV0dSLEtBQUssQ0FBQ1MsS0FBTixpQkFDQztBQUFLLHFCQUFTLEVBQUMsdUJBQWY7QUFBdUMsY0FBRSxFQUFDLGNBQTFDO0FBQUEsbUNBQ0U7QUFBRyx1QkFBUyxFQUFDLG1CQUFiO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBREY7QUFBQTtBQUFBO0FBQUE7QUFBQSxrQkFaSjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsZ0JBSkY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBREY7QUFBQTtBQUFBO0FBQUE7QUFBQSxZQVBGLGVBaUNFO0FBQVEsZUFBUyxFQUFDLHVDQUFsQjtBQUFBLDZCQUNFO0FBQUcsWUFBSSxFQUFDLDRDQUFSO0FBQUEsK0JBQ0U7QUFBRyxtQkFBUyxFQUFDO0FBQWI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQURGO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFERjtBQUFBO0FBQUE7QUFBQTtBQUFBLFlBakNGO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxVQURGO0FBeUNEOztHQTlDdUJYLFM7VUFDS0MscUQ7OztLQURMRCxTIiwiZmlsZSI6Ii4vcGFnZXMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VSZWYgfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IHsgdXNlT3Zlcm1pbmQgfSBmcm9tIFwiLi4vb3Zlcm1pbmRcIjtcbmltcG9ydCBGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1cIjtcbmltcG9ydCBJbWFnZVZpZXdlciBmcm9tIFwiLi4vY29tcG9uZW50cy9JbWFnZVZpZXdlclwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBJbmRleFBhZ2UoKSB7XG4gIGNvbnN0IHsgc3RhdGUsIGVmZmVjdHMgfSA9IHVzZU92ZXJtaW5kKCk7XG5cbiAgY29uc3QgY2FudmFzID0gdXNlUmVmKCk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImJnLWdyYXktMTAwXCI+XG4gICAgICA8aGVhZGVyPlxuICAgICAgICA8aW1nIHNyYz1cIi9sb2dvLnN2Z1wiIGFsdD1cIlBpeGVsciBMb2dvXCIgLz5cbiAgICAgICAgPGgxIGNsYXNzTmFtZT1cIm5lcy10ZXh0IGlzLXByaW1hcnlcIj5cbiAgICAgICAgICBQaXg8c3BhbiBzdHlsZT17eyBjb2xvcjogXCIjOTJjYzQxXCIgfX0+bHI8L3NwYW4+XG4gICAgICAgIDwvaDE+XG4gICAgICA8L2hlYWRlcj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWF4LXctN3hsIG14LWF1dG8gc206cHgtNiBsZzpweC04IHB0LTEwIHBiLTEwXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibmVzLWNvbnRhaW5lciBpcy1yb3VuZGVkIGJnLXdoaXRlICBcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YHB5LTUgJHtzdGF0ZS5hY3RpdmVJbWFnZSA/IFwiZGl2aWRlclwiIDogbnVsbH1gfT5cbiAgICAgICAgICAgIDxGb3JtIGNhbnZhcz17Y2FudmFzfSAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiIHB5LTVcIj5cbiAgICAgICAgICAgIDxJbWFnZVZpZXdlciBjYW52YXM9e2NhbnZhc30gLz5cblxuICAgICAgICAgICAge3N0YXRlLmFjdGl2ZUltYWdlICYmIChcbiAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cIm5lcy1idG4gXCJcbiAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBlZmZlY3RzLmJyb3dzZXIuZG93bmxvYWQoY2FudmFzLmN1cnJlbnQpfVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgRG93bmxvYWRcbiAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICApfVxuICAgICAgICAgICAge3N0YXRlLmVycm9yICYmIChcbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJuZXMtYmFsbG9vbiBmcm9tLWxlZnRcIiBpZD1cImVycm9yLWRpYWxvZ1wiPlxuICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cIm5lcy10ZXh0IGlzLWVycm9yXCI+XG4gICAgICAgICAgICAgICAgICBUaGVyZSBoYXMgYmVlbiBhIHByb2JsZW0gY3JlYXRpbmcgeW91ciBpbWFnZVxuICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGZvb3RlciBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBtYi02XCI+XG4gICAgICAgIDxhIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vU2FyYVZpZWlyYS9waXhlbC1zcGxhc2hcIj5cbiAgICAgICAgICA8aSBjbGFzc05hbWU9XCJuZXMtb2N0b2NhdCBpcy1tZWRpdW1cIj48L2k+XG4gICAgICAgIDwvYT5cbiAgICAgIDwvZm9vdGVyPlxuICAgIDwvZGl2PlxuICApO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./pages/index.js\n");

/***/ })

},[["./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=%2FUsers%2Fsaravieira%2FProjects%2Fpixel-splash%2Fpages%2Findex.js!./","webpack"]]]);